{"version":3,"file":"index.cjs.js","sources":["../src/hash.ts","../src/ext.ts","../src/common.ts","../src/decode.ts","../src/encode.ts"],"sourcesContent":["import crypto from 'node:crypto';\r\nimport { BiWriter } from 'bireader';\r\n\r\nconst ciphers = crypto.getCiphers();\r\n\r\n/**\r\n * Random Xor Shift RNG. Can seed with number, a Uint8Array or Buffer of 4 bytes\r\n * ```javascript \r\n * const seed; //number, Uint8Array or Buffer of 4 bytes\r\n * const rng = new RandomXorShift(seed);\r\n * const random_int = rng.random_int();\r\n * ```\r\n * @param {number|Uint8Array|Buffer} seed - Can seeded with a number or a Uint8Array or Buffer of 4 bytes\r\n */\r\nclass RandomXorShift {\r\n    private mt: Uint8Array;\r\n    constructor(seed?: number | Uint8Array | Buffer) {\r\n        var s: number;\r\n        const mt = [0, 0, 0, 0];\r\n        if (seed == undefined) {\r\n            seed = new Date().getTime();\r\n        }\r\n        if (typeof Buffer !== 'undefined' && seed instanceof Buffer) {\r\n            if (seed.length < 4) {\r\n                throw new Error(\"Must be a seed Buffer of 4 bytes\");\r\n            }\r\n            mt[0] = seed.readUInt32LE() >>> 0;\r\n        } else {\r\n            if (seed instanceof Uint8Array) {\r\n                if (seed.length < 4) {\r\n                    throw new Error(\"Must be a seed Uint8Array of 4 bytes\");\r\n                }\r\n                mt[0] = ((seed[3] << 24) | (seed[2] << 16) | (seed[1] << 8) | seed[0]);\r\n            } else {\r\n                if (typeof seed == \"number\") {\r\n                    mt[0] = seed >>> 0;\r\n                }\r\n            }\r\n        }\r\n        for (var i = 1; i < 5; i++) {\r\n            s = mt[i - 1] ^ (mt[i - 1] >>> 30);\r\n            mt[i] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253) + (i - 1);\r\n            mt[i] >>>= 0;\r\n        }\r\n        mt.shift();\r\n        var result = new Uint8Array(16);\r\n        mt.forEach((e, i) => {\r\n            result[(i * 4)] = e & 0xFF;\r\n            result[(i * 4) + 1] = (e >> 8) & 0xFF;\r\n            result[(i * 4) + 2] = (e >> 16) & 0xFF;\r\n            result[(i * 4) + 3] = (e >> 24) & 0xFF;\r\n        });\r\n        this.mt = result;\r\n    }\r\n\r\n    /**\r\n     * Generate a random unsigned 32 bit integer\r\n     * @returns number\r\n     */\r\n    random_int(): number {\r\n        let v1 = ((this.mt[3] << 24) | (this.mt[2] << 16) | (this.mt[1] << 8) | this.mt[0]);\r\n        let v4 = ((this.mt[15] << 24) | (this.mt[14] << 16) | (this.mt[13] << 8) | this.mt[12]);\r\n        let comp_1 = (v4 ^ (v4 >>> 19) ^ v1 ^ (v1 << 11) ^ ((v1 ^ (v1 << 11)) >>> 8)) >>> 0;\r\n        let new_value = new Uint8Array(4);\r\n        new_value[0] = comp_1 & 0xFF;\r\n        new_value[1] = (comp_1 >> 8) & 0xFF;\r\n        new_value[2] = (comp_1 >> 16) & 0xFF;\r\n        new_value[3] = (comp_1 >> 24) & 0xFF;\r\n        const shift = this.mt.subarray(4, 16);\r\n        var newBuffer = new Uint8Array([...shift, ...new_value]);\r\n        this.mt = newBuffer;\r\n        return comp_1;\r\n    }\r\n};\r\n\r\nexport class Crypt {\r\n    keyBuff: Buffer;\r\n\r\n    ivBuffer: Buffer;\r\n\r\n    key: number;\r\n\r\n    cipher: crypto.Cipher | null = null;\r\n\r\n    decipher: crypto.Decipher | null = null;\r\n\r\n    hashArray = ['aria-256-cbc', 'aes-256-cbc', 'camellia-256-cbc'];\r\n\r\n    hash = \"\";\r\n\r\n    useFallback = false;\r\n\r\n    fallback: AES | ARIA | CAMELLIA | null = null;\r\n\r\n    constructor(key?: number) {\r\n        if (key == 0 || key == undefined) {\r\n            const rng = new RandomXorShift();\r\n\r\n            this.key = rng.random_int();\r\n        } else {\r\n            this.key = key >>> 0;\r\n        }\r\n\r\n        const hash = this.key & 0x3;  \r\n\r\n        const spin = ((this.key >>> 2) & 0x3F) >>> 0;\r\n\r\n        const value = ((this.key >>> 8) & 0xFFFFFF) >>> 0;\r\n\r\n        const rng = new RandomXorShift(value);\r\n\r\n        for (let i = 0; i < spin; i++) rng.random_int();\r\n\r\n        const keyBuff = new BiWriter(Buffer.alloc(32));\r\n\r\n        const iv = new BiWriter(Buffer.alloc(16));\r\n\r\n        for (let i = 0; i < 8; i++) {\r\n            keyBuff.uint32 = rng.random_int();\r\n        }\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            iv.uint32 = rng.random_int();\r\n        }\r\n\r\n        this.hash = this.hashArray[hash % this.hashArray.length];\r\n\r\n        if((ciphers.findIndex((x) => x === this.hash) == -1)){\r\n            this.useFallback = true;\r\n        }\r\n\r\n        this.keyBuff = keyBuff.data as Buffer;\r\n\r\n        this.ivBuffer = iv.data as Buffer;\r\n    };\r\n\r\n    private fallbackCipher(){\r\n        var crypt:  AES | ARIA | CAMELLIA;\r\n        switch (this.hash){\r\n            case \"aes-256-cbc\":\r\n                crypt = new AES();\r\n                break;\r\n            case \"aria-256-cbc\":\r\n                crypt = new ARIA();\r\n                break;\r\n            case \"camellia-256-cbc\":\r\n                crypt = new CAMELLIA();\r\n                break;\r\n            default:\r\n                throw new Error(\"Did not find cipher.\");\r\n        }\r\n        crypt.set_key(this.keyBuff);\r\n\r\n        crypt.set_iv(this.ivBuffer);\r\n\r\n        this.fallback = crypt;\r\n    };\r\n\r\n    encrypt(data: Buffer) {\r\n        if(this.useFallback){\r\n            if(this.fallback == null) this.fallbackCipher();\r\n            return this.fallback.encrypt(data);\r\n        }\r\n\r\n        if (this.cipher == null) {\r\n            this.cipher = crypto.createCipheriv(this.hash, this.keyBuff, this.ivBuffer);\r\n        }\r\n\r\n        return Buffer.concat([this.cipher.update(data), this.cipher.final()]);\r\n    };\r\n\r\n    decrypt(data: Buffer) {\r\n        if(this.useFallback){\r\n            if(this.fallback == null) this.fallbackCipher();\r\n            return this.fallback.decrypt(data);\r\n        }\r\n\r\n        if (this.decipher == null) {\r\n            this.decipher = crypto.createDecipheriv(this.hash, this.keyBuff, this.ivBuffer);\r\n        }\r\n\r\n        return Buffer.concat([this.decipher.update(data), this.decipher.final()]);\r\n    };\r\n\r\n    encrypt_block(data: Buffer, final?: boolean) {\r\n        if(this.useFallback){\r\n            if(this.fallback == null) this.fallbackCipher();\r\n            return this.fallback.encrypt_block(data, final);\r\n        }\r\n        if (this.cipher == null) {\r\n            this.cipher = crypto.createCipheriv(this.hash, this.keyBuff, this.ivBuffer);\r\n        }\r\n\r\n        return this.cipher.update(data);\r\n    };    \r\n\r\n    decrypt_block(data: Buffer, final?: boolean) {\r\n        if(this.useFallback){\r\n            if(this.fallback == null) this.fallbackCipher();\r\n            return this.fallback.decrypt_block(data, final);\r\n        }\r\n\r\n        if (this.decipher == null) {\r\n            this.decipher = crypto.createDecipheriv(this.hash, this.keyBuff, this.ivBuffer);\r\n        }\r\n\r\n        return this.decipher.update(data);\r\n    };\r\n\r\n    encrypt_final() {\r\n        if(this.useFallback){\r\n            return Buffer.alloc(0);\r\n        }\r\n\r\n        if (this.cipher == null) {\r\n            this.cipher = crypto.createCipheriv(this.hash, this.keyBuff, this.ivBuffer);\r\n        }\r\n\r\n        return this.cipher.final();\r\n    };\r\n\r\n    decrypt_final() {\r\n        if(this.useFallback){\r\n            return Buffer.alloc(0);\r\n        }\r\n\r\n        if (this.decipher == null) {\r\n            this.decipher = crypto.createDecipheriv(this.hash, this.keyBuff, this.ivBuffer);\r\n        }\r\n\r\n        return this.decipher.final();\r\n    };\r\n};\r\n\r\nconst CRC_TABLE = new Int32Array([\r\n    0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,\r\n    0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,\r\n    0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\r\n    0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,\r\n    0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\r\n    0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\r\n    0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,\r\n    0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,\r\n    0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\r\n    0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\r\n    0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\r\n    0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\r\n    0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,\r\n    0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,\r\n    0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\r\n    0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,\r\n    0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,\r\n    0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\r\n    0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,\r\n    0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\r\n    0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\r\n    0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\r\n    0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\r\n    0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\r\n    0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\r\n    0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,\r\n    0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\r\n    0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,\r\n    0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,\r\n    0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\r\n    0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,\r\n    0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d,\r\n]);\r\n\r\n/**\r\n * Cyclic Redundancy Check 32.\r\n * \r\n * @param {Buffer} current - Message Buffer\r\n * @param {number?} previous - previous hash\r\n * @returns {number}\r\n */\r\nexport function CRC32(current: Buffer, previous: number): number {\r\n    if (!(current instanceof Buffer)) {\r\n        throw new Error(\"Message must be a Buffer.\");\r\n    }\r\n\r\n    let crc = previous === 0 ? 0 : ~~previous! ^ -1;\r\n\r\n    for (let index = 0; index < current.length; index++) {\r\n        crc = CRC_TABLE[(crc ^ current[index]) & 0xff] ^ (crc >>> 8);\r\n    }\r\n\r\n    return crc ^ -1;\r\n};\r\n\r\nfunction xor(buf1: Buffer, buf2: Buffer): Buffer {\r\n    let number = -1;\r\n    for (let i = 0; i < buf1.length; i++) {\r\n        const b = buf1[i];\r\n        if (number != buf2.length - 1) {\r\n            number = number + 1;\r\n        } else {\r\n            number = 0;\r\n        }\r\n        buf1[i] = b ^ buf2[number];\r\n    }\r\n    return buf1;\r\n};\r\n\r\nfunction align(a: number, n: number): number {\r\n    var a = a % n;\r\n    if (a) {\r\n        return (n - a);\r\n    } else {\r\n        return 0;\r\n    }\r\n};\r\n\r\nfunction removePKCSPadding(buffer: Buffer, number: number, PKCS: boolean | number = false): Buffer {\r\n    const lastByte = buffer[buffer.length - 1];\r\n    if (PKCS == true) {\r\n        if(lastByte < 1 || lastByte > 17){\r\n            return buffer;\r\n        }\r\n        var len = buffer.length;\r\n        var removed = 0;\r\n        for (let i = buffer.length - 1; i > 0; i--) {\r\n            if (buffer[i] == lastByte) {\r\n                len--;\r\n                removed++;\r\n            }\r\n        }\r\n        if(removed == lastByte){\r\n            buffer = buffer.subarray(0, len);\r\n        }\r\n        return buffer;\r\n    } else \r\n    if (lastByte != number) {\r\n        return buffer;\r\n    } else {\r\n        var len = buffer.length;\r\n        for (let i = buffer.length - 1; i > 0; i--) {\r\n            if (buffer[i] == number) {\r\n                len--;\r\n            }\r\n        }\r\n        return buffer.subarray(0, len);\r\n    }\r\n};\r\n\r\nfunction extendBuffer(array: Buffer, newLength: number, padValue: number): Buffer {\r\n    const length = array.length;\r\n    const to_padd = newLength - length;\r\n    var paddbuffer = Buffer.alloc(to_padd, padValue);\r\n    array = Buffer.concat([array, paddbuffer]);\r\n    return array;\r\n};\r\n\r\nfunction padd_block(data:Buffer){\r\n    const block_size = 16;\r\n    if (data.length % block_size != 0) {\r\n        var padd_value = block_size - (data.length % block_size);\r\n        var paddbuffer = Buffer.alloc(padd_value, padd_value & 0xFF);\r\n        data = Buffer.concat([data, paddbuffer]);\r\n    }\r\n    return data;\r\n};\r\n\r\nclass AES {\r\n    public key: any;\r\n    public key_set: boolean = false;\r\n    public iv: any;\r\n    public iv_set: boolean = false;\r\n\r\n    private previous_block: any;\r\n\r\n    private AES_SubBytes(state: Array<number>, sbox: Array<number>): void {\r\n        for (var i = 0; i < 16; i++) {\r\n            state[i] = sbox[state[i]];\r\n        }\r\n    }\r\n\r\n    private AES_AddRoundKey(state: Array<number>, rkey: Array<number>): void {\r\n        for (var i = 0; i < 16; i++) {\r\n            state[i] ^= rkey[i];\r\n        }\r\n    }\r\n\r\n    private AES_ShiftRows(state: Array<number>, shifttab: Array<number>): void {\r\n        var h = new Array().concat(state);\r\n        for (var i = 0; i < 16; i++) {\r\n            state[i] = h[shifttab[i]];\r\n        }\r\n    }\r\n\r\n    private AES_MixColumns(state: Array<number>): void {\r\n        for (var i = 0; i < 16; i += 4) {\r\n            var s0 = state[i + 0], s1 = state[i + 1];\r\n            var s2 = state[i + 2], s3 = state[i + 3];\r\n            var h = s0 ^ s1 ^ s2 ^ s3;\r\n            state[i + 0] ^= h ^ this.AES_xtime[s0 ^ s1];\r\n            state[i + 1] ^= h ^ this.AES_xtime[s1 ^ s2];\r\n            state[i + 2] ^= h ^ this.AES_xtime[s2 ^ s3];\r\n            state[i + 3] ^= h ^ this.AES_xtime[s3 ^ s0];\r\n        }\r\n    }\r\n\r\n    private AES_MixColumns_Inv(state: Array<number>): void {\r\n        for (var i = 0; i < 16; i += 4) {\r\n            var s0 = state[i + 0], s1 = state[i + 1];\r\n            var s2 = state[i + 2], s3 = state[i + 3];\r\n            var h = s0 ^ s1 ^ s2 ^ s3;\r\n            var xh = this.AES_xtime[h];\r\n            var h1 = this.AES_xtime[this.AES_xtime[xh ^ s0 ^ s2]] ^ h;\r\n            var h2 = this.AES_xtime[this.AES_xtime[xh ^ s1 ^ s3]] ^ h;\r\n            state[i + 0] ^= h1 ^ this.AES_xtime[s0 ^ s1];\r\n            state[i + 1] ^= h2 ^ this.AES_xtime[s1 ^ s2];\r\n            state[i + 2] ^= h1 ^ this.AES_xtime[s2 ^ s3];\r\n            state[i + 3] ^= h2 ^ this.AES_xtime[s3 ^ s0];\r\n        }\r\n    }\r\n\r\n    private AES_Sbox = new Array(99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171,\r\n        118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253,\r\n        147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154,\r\n        7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227,\r\n        47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170,\r\n        251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245,\r\n        188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61,\r\n        100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224,\r\n        50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213,\r\n        78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221,\r\n        116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29,\r\n        158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161,\r\n        137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22);\r\n\r\n    private AES_ShiftRowTab = new Array(0, 5, 10, 15, 4, 9, 14, 3, 8, 13, 2, 7, 12, 1, 6, 11);\r\n\r\n    private AES_Sbox_Inv = new Array(256);\r\n\r\n    private AES_xtime = new Array(256);\r\n\r\n    private AES_ShiftRowTab_Inv = new Array(16);\r\n\r\n    constructor() {\r\n    }\r\n\r\n    /**\r\n     * Key for encryption.\r\n     *\r\n     * Only lengths of 16, 24 or 32 bytes allowed!\r\n     * \r\n     * @param {Buffer} key_data - ```Buffer```\r\n     */\r\n    set_key(key_data: Buffer): void {\r\n        var kl = key_data.length, ks: number, Rcon = 1;\r\n        switch (kl) {\r\n            case 16:\r\n                ks = 16 * (10 + 1);\r\n                break;\r\n            case 24:\r\n                ks = 16 * (12 + 1);\r\n                break;\r\n            case 32:\r\n                ks = 16 * (14 + 1);\r\n                break;\r\n            default:\r\n                throw Error(\"Only key lengths of 16, 24 or 32 bytes allowed!\");\r\n        }\r\n        const key = new Array(key_data.length);\r\n        for (let i = 0; i < key_data.length; i++) {\r\n            key[i] = key_data[i];\r\n        }\r\n        this.key = key;\r\n        for (var i = kl; i < ks; i += 4) {\r\n            var temp = key.slice(i - 4, i);\r\n            if (i % kl == 0) {\r\n                temp = new Array(this.AES_Sbox[temp[1]] ^ Rcon, this.AES_Sbox[temp[2]],\r\n                    this.AES_Sbox[temp[3]], this.AES_Sbox[temp[0]]);\r\n                if ((Rcon <<= 1) >= 256)\r\n                    Rcon ^= 0x11b;\r\n            }\r\n            else if ((kl > 24) && (i % kl == 16))\r\n                temp = new Array(\r\n                    this.AES_Sbox[temp[0]], this.AES_Sbox[temp[1]],\r\n                    this.AES_Sbox[temp[2]], this.AES_Sbox[temp[3]]\r\n                );\r\n            for (var j = 0; j < 4; j++)\r\n                key[i + j] = key[i + j - kl] ^ temp[j];\r\n        }\r\n        this.key_set = true;\r\n\r\n        //setup\r\n        for (var z = 0; z < 256; z++) {\r\n            this.AES_Sbox_Inv[this.AES_Sbox[z]] = z;\r\n        }\r\n\r\n        for (var z = 0; z < 16; z++) {\r\n            this.AES_ShiftRowTab_Inv[this.AES_ShiftRowTab[z]] = z;\r\n        }\r\n\r\n        for (var z = 0; z < 128; z++) {\r\n            this.AES_xtime[z] = z << 1;\r\n            this.AES_xtime[128 + z] = (z << 1) ^ 0x1b;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * IV for CBC encryption.\r\n     *\r\n     * Must be 16 bytes!\r\n     * \r\n     * @param {Buffer} iv - ```Buffer```\r\n     */\r\n    set_iv(iv: Buffer): void {\r\n        if (iv) {\r\n            if (iv.length != 16) {\r\n                throw Error(\"Enter a vaild 16 byte IV for CBC mode\");\r\n            } else {\r\n                this.iv = iv;\r\n                this.iv_set = true;\r\n            }\r\n        } else {\r\n            throw Error(\"Enter a vaild 16 byte IV for CBC mode\");\r\n        }\r\n    };\r\n\r\n    encrypt_block(start_chunk: Buffer, last_block?: boolean): Buffer {\r\n        //check if IV is set, if so runs CBC\r\n        let block = start_chunk;\r\n        if(last_block){\r\n            block = padd_block(start_chunk);\r\n        }\r\n        if (this.iv_set == true) {\r\n            block = xor(block, this.iv);\r\n        }\r\n        const block_data = new Array(16);\r\n        for (let i = 0; i < 16; i++) {\r\n            block_data[i] = block[i];\r\n        }\r\n        var key = this.key;\r\n        var l = key.length;\r\n\r\n        this.AES_AddRoundKey(block_data, key.slice(0, 16));\r\n        for (var i = 16; i < l - 16; i += 16) {\r\n            this.AES_SubBytes(block_data, this.AES_Sbox);\r\n            this.AES_ShiftRows(block_data, this.AES_ShiftRowTab);\r\n            this.AES_MixColumns(block_data);\r\n            this.AES_AddRoundKey(block_data, key.slice(i, i + 16));\r\n        }\r\n\r\n        this.AES_SubBytes(block_data, this.AES_Sbox);\r\n        this.AES_ShiftRows(block_data, this.AES_ShiftRowTab);\r\n        this.AES_AddRoundKey(block_data, key.slice(i, l));\r\n\r\n        var block_out = Buffer.alloc(16);\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            block_out[i] = block_data[i];\r\n        }\r\n        \r\n        if (this.iv_set == true) {\r\n            this.iv = block_out;\r\n        }\r\n        return block_out;\r\n    };\r\n\r\n    decrypt_block(start_chunk: Buffer, last_block?: boolean): Buffer {\r\n        let block = start_chunk;\r\n        if (this.iv_set == true) {\r\n            if (this.previous_block != undefined) {\r\n                this.iv = this.previous_block;\r\n            }\r\n        }\r\n        this.previous_block = block;\r\n        const block_data = new Array(16);\r\n        for (let i = 0; i < 16; i++) {\r\n            block_data[i] = block[i];\r\n        }\r\n        var key = this.key;\r\n        var l = key.length;\r\n\r\n        this.AES_AddRoundKey(block_data, key.slice(l - 16, l));\r\n        this.AES_ShiftRows(block_data, this.AES_ShiftRowTab_Inv);\r\n        this.AES_SubBytes(block_data, this.AES_Sbox_Inv);\r\n        for (var i = l - 32; i >= 16; i -= 16) {\r\n            this.AES_AddRoundKey(block_data, key.slice(i, i + 16));\r\n            this.AES_MixColumns_Inv(block_data);\r\n            this.AES_ShiftRows(block_data, this.AES_ShiftRowTab_Inv);\r\n            this.AES_SubBytes(block_data, this.AES_Sbox_Inv);\r\n        }\r\n        this.AES_AddRoundKey(block_data, key.slice(0, 16));\r\n\r\n        var block_out = Buffer.alloc(16);\r\n        for (let i = 0; i < 16; i++) {\r\n            block_out[i] = block_data[i];\r\n        }        \r\n        var return_buffer = block_out;\r\n        if (this.iv_set == true) {\r\n            return_buffer = xor(block_out, this.iv);\r\n        }\r\n        if(last_block){\r\n            var padd_value = align(return_buffer.length, 16);\r\n            return removePKCSPadding(return_buffer, padd_value, true);\r\n        }\r\n        return return_buffer;\r\n    };\r\n\r\n    /**\r\n     * If IV is not set, runs in ECB mode.\r\n     * \r\n     * If IV was set, runs in CBC mode.\r\n     * \r\n     * If padding number is not set, uses PKCS padding.\r\n     *\r\n     * @param {Buffer} data_in - ```Buffer```\r\n     * @param {number} padding - ```number``` defaults to 0 for PKCS or can use a value\r\n     * @returns ```Buffer```\r\n     */\r\n    encrypt(data_in: Buffer, padding: number = 0): Buffer {\r\n        const block_size = 16;\r\n        if (this.key_set != true) {\r\n            throw Error(\"Please set key first\");\r\n        }\r\n        var data = data_in;\r\n        var padd_value = padding;\r\n        const return_buff: any[] = [];\r\n        if (data.length % block_size != 0) {\r\n            var to_padd = block_size - (data.length % block_size);\r\n            if (padding == 0) {\r\n                padd_value = to_padd;\r\n            }\r\n            var paddbuffer = Buffer.alloc(to_padd, padd_value & 0xFF);\r\n            data = Buffer.concat([data_in, paddbuffer]);\r\n        }\r\n        for (let index = 0; index < data.length / block_size; index++) {\r\n            const block = data.subarray((index * block_size), (index + 1) * block_size);\r\n            const return_block = this.encrypt_block(block);\r\n            return_buff.push(return_block);\r\n        }\r\n        var final_buffer = Buffer.concat(return_buff);\r\n        this.iv_set = false;\r\n        return final_buffer;\r\n    };\r\n\r\n    /**\r\n     * If IV is not set, runs in ECB mode.\r\n     * \r\n     * If IV was set, runs in CBC mode.\r\n     * \r\n     * If remove_padding is ``number``, will check the last block and remove padded number.\r\n     * \r\n     * If remove_padding is ``true``, will remove PKCS padding on last block.\r\n     *\r\n     * @param {Buffer} data_in - `Buffer`\r\n     * @param {boolean|number} remove_padding - Will check the last block and remove padded ``number``. Will remove PKCS if ``true``\r\n     * @returns `Buffer` \r\n     */\r\n    decrypt(data_in: Buffer, remove_padding: boolean | number = true): Buffer {\r\n        const block_size = 16;\r\n        if (this.key_set != true) {\r\n            throw Error(\"Please set key first\");\r\n        }\r\n        var data = data_in;\r\n        var padd_value = align(data.length, block_size);\r\n        if (typeof remove_padding == 'number') {\r\n            padd_value = remove_padding & 0xFF;\r\n        }\r\n        const return_buff: any[] = [];\r\n        if (data.length % block_size != 0) {\r\n            var to_padd = block_size - (data.length % block_size);\r\n            var paddbuffer = Buffer.alloc(to_padd, padd_value & 0xFF);\r\n            data = Buffer.concat([data_in, paddbuffer]);\r\n        }\r\n        for (let index = 0, amount = Math.ceil(data.length / block_size); index < amount; index++) {\r\n            const block = data.subarray((index * block_size), (index + 1) * block_size);\r\n            var return_block = this.decrypt_block(block);\r\n            if ((remove_padding != false ) && (index == (amount - 1))) {\r\n                return_block = removePKCSPadding(return_block, padd_value, remove_padding);\r\n                return_buff.push(return_block);\r\n            } else {\r\n                return_buff.push(return_block);\r\n            }\r\n        }\r\n        var final_buffer = Buffer.concat(return_buff);\r\n        this.iv_set = false;\r\n        return final_buffer;\r\n    };\r\n};\r\n\r\nexport class ARIA {\r\n    // Constants\r\n    ARIA_BLOCK_SIZE = 16;\r\n\r\n    // S-box 1\r\n    sb1: Buffer = Buffer.from([\r\n        0x63, 0x7C, 0x77, 0x7B, 0xF2, 0x6B, 0x6F, 0xC5, 0x30, 0x01, 0x67, 0x2B, 0xFE, 0xD7, 0xAB, 0x76,\r\n        0xCA, 0x82, 0xC9, 0x7D, 0xFA, 0x59, 0x47, 0xF0, 0xAD, 0xD4, 0xA2, 0xAF, 0x9C, 0xA4, 0x72, 0xC0,\r\n        0xB7, 0xFD, 0x93, 0x26, 0x36, 0x3F, 0xF7, 0xCC, 0x34, 0xA5, 0xE5, 0xF1, 0x71, 0xD8, 0x31, 0x15,\r\n        0x04, 0xC7, 0x23, 0xC3, 0x18, 0x96, 0x05, 0x9A, 0x07, 0x12, 0x80, 0xE2, 0xEB, 0x27, 0xB2, 0x75,\r\n        0x09, 0x83, 0x2C, 0x1A, 0x1B, 0x6E, 0x5A, 0xA0, 0x52, 0x3B, 0xD6, 0xB3, 0x29, 0xE3, 0x2F, 0x84,\r\n        0x53, 0xD1, 0x00, 0xED, 0x20, 0xFC, 0xB1, 0x5B, 0x6A, 0xCB, 0xBE, 0x39, 0x4A, 0x4C, 0x58, 0xCF,\r\n        0xD0, 0xEF, 0xAA, 0xFB, 0x43, 0x4D, 0x33, 0x85, 0x45, 0xF9, 0x02, 0x7F, 0x50, 0x3C, 0x9F, 0xA8,\r\n        0x51, 0xA3, 0x40, 0x8F, 0x92, 0x9D, 0x38, 0xF5, 0xBC, 0xB6, 0xDA, 0x21, 0x10, 0xFF, 0xF3, 0xD2,\r\n        0xCD, 0x0C, 0x13, 0xEC, 0x5F, 0x97, 0x44, 0x17, 0xC4, 0xA7, 0x7E, 0x3D, 0x64, 0x5D, 0x19, 0x73,\r\n        0x60, 0x81, 0x4F, 0xDC, 0x22, 0x2A, 0x90, 0x88, 0x46, 0xEE, 0xB8, 0x14, 0xDE, 0x5E, 0x0B, 0xDB,\r\n        0xE0, 0x32, 0x3A, 0x0A, 0x49, 0x06, 0x24, 0x5C, 0xC2, 0xD3, 0xAC, 0x62, 0x91, 0x95, 0xE4, 0x79,\r\n        0xE7, 0xC8, 0x37, 0x6D, 0x8D, 0xD5, 0x4E, 0xA9, 0x6C, 0x56, 0xF4, 0xEA, 0x65, 0x7A, 0xAE, 0x08,\r\n        0xBA, 0x78, 0x25, 0x2E, 0x1C, 0xA6, 0xB4, 0xC6, 0xE8, 0xDD, 0x74, 0x1F, 0x4B, 0xBD, 0x8B, 0x8A,\r\n        0x70, 0x3E, 0xB5, 0x66, 0x48, 0x03, 0xF6, 0x0E, 0x61, 0x35, 0x57, 0xB9, 0x86, 0xC1, 0x1D, 0x9E,\r\n        0xE1, 0xF8, 0x98, 0x11, 0x69, 0xD9, 0x8E, 0x94, 0x9B, 0x1E, 0x87, 0xE9, 0xCE, 0x55, 0x28, 0xDF,\r\n        0x8C, 0xA1, 0x89, 0x0D, 0xBF, 0xE6, 0x42, 0x68, 0x41, 0x99, 0x2D, 0x0F, 0xB0, 0x54, 0xBB, 0x16\r\n    ]);\r\n\r\n    // S-box 2\r\n    sb2: Buffer = Buffer.from([\r\n        0xE2, 0x4E, 0x54, 0xFC, 0x94, 0xC2, 0x4A, 0xCC, 0x62, 0x0D, 0x6A, 0x46, 0x3C, 0x4D, 0x8B, 0xD1,\r\n        0x5E, 0xFA, 0x64, 0xCB, 0xB4, 0x97, 0xBE, 0x2B, 0xBC, 0x77, 0x2E, 0x03, 0xD3, 0x19, 0x59, 0xC1,\r\n        0x1D, 0x06, 0x41, 0x6B, 0x55, 0xF0, 0x99, 0x69, 0xEA, 0x9C, 0x18, 0xAE, 0x63, 0xDF, 0xE7, 0xBB,\r\n        0x00, 0x73, 0x66, 0xFB, 0x96, 0x4C, 0x85, 0xE4, 0x3A, 0x09, 0x45, 0xAA, 0x0F, 0xEE, 0x10, 0xEB,\r\n        0x2D, 0x7F, 0xF4, 0x29, 0xAC, 0xCF, 0xAD, 0x91, 0x8D, 0x78, 0xC8, 0x95, 0xF9, 0x2F, 0xCE, 0xCD,\r\n        0x08, 0x7A, 0x88, 0x38, 0x5C, 0x83, 0x2A, 0x28, 0x47, 0xDB, 0xB8, 0xC7, 0x93, 0xA4, 0x12, 0x53,\r\n        0xFF, 0x87, 0x0E, 0x31, 0x36, 0x21, 0x58, 0x48, 0x01, 0x8E, 0x37, 0x74, 0x32, 0xCA, 0xE9, 0xB1,\r\n        0xB7, 0xAB, 0x0C, 0xD7, 0xC4, 0x56, 0x42, 0x26, 0x07, 0x98, 0x60, 0xD9, 0xB6, 0xB9, 0x11, 0x40,\r\n        0xEC, 0x20, 0x8C, 0xBD, 0xA0, 0xC9, 0x84, 0x04, 0x49, 0x23, 0xF1, 0x4F, 0x50, 0x1F, 0x13, 0xDC,\r\n        0xD8, 0xC0, 0x9E, 0x57, 0xE3, 0xC3, 0x7B, 0x65, 0x3B, 0x02, 0x8F, 0x3E, 0xE8, 0x25, 0x92, 0xE5,\r\n        0x15, 0xDD, 0xFD, 0x17, 0xA9, 0xBF, 0xD4, 0x9A, 0x7E, 0xC5, 0x39, 0x67, 0xFE, 0x76, 0x9D, 0x43,\r\n        0xA7, 0xE1, 0xD0, 0xF5, 0x68, 0xF2, 0x1B, 0x34, 0x70, 0x05, 0xA3, 0x8A, 0xD5, 0x79, 0x86, 0xA8,\r\n        0x30, 0xC6, 0x51, 0x4B, 0x1E, 0xA6, 0x27, 0xF6, 0x35, 0xD2, 0x6E, 0x24, 0x16, 0x82, 0x5F, 0xDA,\r\n        0xE6, 0x75, 0xA2, 0xEF, 0x2C, 0xB2, 0x1C, 0x9F, 0x5D, 0x6F, 0x80, 0x0A, 0x72, 0x44, 0x9B, 0x6C,\r\n        0x90, 0x0B, 0x5B, 0x33, 0x7D, 0x5A, 0x52, 0xF3, 0x61, 0xA1, 0xF7, 0xB0, 0xD6, 0x3F, 0x7C, 0x6D,\r\n        0xED, 0x14, 0xE0, 0xA5, 0x3D, 0x22, 0xB3, 0xF8, 0x89, 0xDE, 0x71, 0x1A, 0xAF, 0xBA, 0xB5, 0x81\r\n    ]);\r\n\r\n    // S-box 3\r\n    sb3: Buffer = Buffer.from([\r\n        0x52, 0x09, 0x6A, 0xD5, 0x30, 0x36, 0xA5, 0x38, 0xBF, 0x40, 0xA3, 0x9E, 0x81, 0xF3, 0xD7, 0xFB,\r\n        0x7C, 0xE3, 0x39, 0x82, 0x9B, 0x2F, 0xFF, 0x87, 0x34, 0x8E, 0x43, 0x44, 0xC4, 0xDE, 0xE9, 0xCB,\r\n        0x54, 0x7B, 0x94, 0x32, 0xA6, 0xC2, 0x23, 0x3D, 0xEE, 0x4C, 0x95, 0x0B, 0x42, 0xFA, 0xC3, 0x4E,\r\n        0x08, 0x2E, 0xA1, 0x66, 0x28, 0xD9, 0x24, 0xB2, 0x76, 0x5B, 0xA2, 0x49, 0x6D, 0x8B, 0xD1, 0x25,\r\n        0x72, 0xF8, 0xF6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xD4, 0xA4, 0x5C, 0xCC, 0x5D, 0x65, 0xB6, 0x92,\r\n        0x6C, 0x70, 0x48, 0x50, 0xFD, 0xED, 0xB9, 0xDA, 0x5E, 0x15, 0x46, 0x57, 0xA7, 0x8D, 0x9D, 0x84,\r\n        0x90, 0xD8, 0xAB, 0x00, 0x8C, 0xBC, 0xD3, 0x0A, 0xF7, 0xE4, 0x58, 0x05, 0xB8, 0xB3, 0x45, 0x06,\r\n        0xD0, 0x2C, 0x1E, 0x8F, 0xCA, 0x3F, 0x0F, 0x02, 0xC1, 0xAF, 0xBD, 0x03, 0x01, 0x13, 0x8A, 0x6B,\r\n        0x3A, 0x91, 0x11, 0x41, 0x4F, 0x67, 0xDC, 0xEA, 0x97, 0xF2, 0xCF, 0xCE, 0xF0, 0xB4, 0xE6, 0x73,\r\n        0x96, 0xAC, 0x74, 0x22, 0xE7, 0xAD, 0x35, 0x85, 0xE2, 0xF9, 0x37, 0xE8, 0x1C, 0x75, 0xDF, 0x6E,\r\n        0x47, 0xF1, 0x1A, 0x71, 0x1D, 0x29, 0xC5, 0x89, 0x6F, 0xB7, 0x62, 0x0E, 0xAA, 0x18, 0xBE, 0x1B,\r\n        0xFC, 0x56, 0x3E, 0x4B, 0xC6, 0xD2, 0x79, 0x20, 0x9A, 0xDB, 0xC0, 0xFE, 0x78, 0xCD, 0x5A, 0xF4,\r\n        0x1F, 0xDD, 0xA8, 0x33, 0x88, 0x07, 0xC7, 0x31, 0xB1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xEC, 0x5F,\r\n        0x60, 0x51, 0x7F, 0xA9, 0x19, 0xB5, 0x4A, 0x0D, 0x2D, 0xE5, 0x7A, 0x9F, 0x93, 0xC9, 0x9C, 0xEF,\r\n        0xA0, 0xE0, 0x3B, 0x4D, 0xAE, 0x2A, 0xF5, 0xB0, 0xC8, 0xEB, 0xBB, 0x3C, 0x83, 0x53, 0x99, 0x61,\r\n        0x17, 0x2B, 0x04, 0x7E, 0xBA, 0x77, 0xD6, 0x26, 0xE1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0C, 0x7D\r\n    ]);\r\n\r\n    // S-box 4\r\n    sb4: Buffer = Buffer.from([\r\n        0x30, 0x68, 0x99, 0x1B, 0x87, 0xB9, 0x21, 0x78, 0x50, 0x39, 0xDB, 0xE1, 0x72, 0x09, 0x62, 0x3C,\r\n        0x3E, 0x7E, 0x5E, 0x8E, 0xF1, 0xA0, 0xCC, 0xA3, 0x2A, 0x1D, 0xFB, 0xB6, 0xD6, 0x20, 0xC4, 0x8D,\r\n        0x81, 0x65, 0xF5, 0x89, 0xCB, 0x9D, 0x77, 0xC6, 0x57, 0x43, 0x56, 0x17, 0xD4, 0x40, 0x1A, 0x4D,\r\n        0xC0, 0x63, 0x6C, 0xE3, 0xB7, 0xC8, 0x64, 0x6A, 0x53, 0xAA, 0x38, 0x98, 0x0C, 0xF4, 0x9B, 0xED,\r\n        0x7F, 0x22, 0x76, 0xAF, 0xDD, 0x3A, 0x0B, 0x58, 0x67, 0x88, 0x06, 0xC3, 0x35, 0x0D, 0x01, 0x8B,\r\n        0x8C, 0xC2, 0xE6, 0x5F, 0x02, 0x24, 0x75, 0x93, 0x66, 0x1E, 0xE5, 0xE2, 0x54, 0xD8, 0x10, 0xCE,\r\n        0x7A, 0xE8, 0x08, 0x2C, 0x12, 0x97, 0x32, 0xAB, 0xB4, 0x27, 0x0A, 0x23, 0xDF, 0xEF, 0xCA, 0xD9,\r\n        0xB8, 0xFA, 0xDC, 0x31, 0x6B, 0xD1, 0xAD, 0x19, 0x49, 0xBD, 0x51, 0x96, 0xEE, 0xE4, 0xA8, 0x41,\r\n        0xDA, 0xFF, 0xCD, 0x55, 0x86, 0x36, 0xBE, 0x61, 0x52, 0xF8, 0xBB, 0x0E, 0x82, 0x48, 0x69, 0x9A,\r\n        0xE0, 0x47, 0x9E, 0x5C, 0x04, 0x4B, 0x34, 0x15, 0x79, 0x26, 0xA7, 0xDE, 0x29, 0xAE, 0x92, 0xD7,\r\n        0x84, 0xE9, 0xD2, 0xBA, 0x5D, 0xF3, 0xC5, 0xB0, 0xBF, 0xA4, 0x3B, 0x71, 0x44, 0x46, 0x2B, 0xFC,\r\n        0xEB, 0x6F, 0xD5, 0xF6, 0x14, 0xFE, 0x7C, 0x70, 0x5A, 0x7D, 0xFD, 0x2F, 0x18, 0x83, 0x16, 0xA5,\r\n        0x91, 0x1F, 0x05, 0x95, 0x74, 0xA9, 0xC1, 0x5B, 0x4A, 0x85, 0x6D, 0x13, 0x07, 0x4F, 0x4E, 0x45,\r\n        0xB2, 0x0F, 0xC9, 0x1C, 0xA6, 0xBC, 0xEC, 0x73, 0x90, 0x7B, 0xCF, 0x59, 0x8F, 0xA1, 0xF9, 0x2D,\r\n        0xF2, 0xB1, 0x00, 0x94, 0x37, 0x9F, 0xD0, 0x2E, 0x9C, 0x6E, 0x28, 0x3F, 0x80, 0xF0, 0x3D, 0xD3,\r\n        0x25, 0x8A, 0xB5, 0xE7, 0x42, 0xB3, 0xC7, 0xEA, 0xF7, 0x4C, 0x11, 0x33, 0x03, 0xA2, 0xAC, 0x60\r\n    ]);\r\n\r\n    // Key scheduling constants\r\n    c: Uint32Array = new Uint32Array([\r\n        0x517CC1B7, 0x27220A94, 0xFE13ABE8, 0xFA9A6EE0, 0x6DB14ACC, 0x9E21C820,\r\n        0xFF28B1D5, 0xEF5DE2B0, 0xDB92371D, 0x2126E970, 0x03249775, 0x04E8C90E\r\n    ]);\r\n\r\n    nr = 0; // Number of rounds\r\n    ek = new Uint32Array(68); // Encryption round keys - Max size for 256-bit key (17 rounds * 4)\r\n    dk = new Uint32Array(68) // Decryption round keys\r\n    key_set = false;\r\n    iv: Buffer;\r\n    iv_set = false;\r\n    previous_block:Buffer;\r\n\r\n    constructor() {\r\n    };\r\n\r\n    // Utility functions\r\n    load32BE(data: Buffer, offset: number): number {\r\n        return (\r\n            ((data[offset] << 24) |\r\n                (data[offset + 1] << 16) |\r\n                (data[offset + 2] << 8) |\r\n                data[offset + 3]) >>> 0\r\n        );\r\n    };\r\n\r\n    store32BE(value: number, data: Buffer, offset: number): void {\r\n        data[offset] = (value >>> 24) & 0xFF;\r\n        data[offset + 1] = (value >>> 16) & 0xFF;\r\n        data[offset + 2] = (value >>> 8) & 0xFF;\r\n        data[offset + 3] = value & 0xFF;\r\n    };\r\n\r\n    mov128(b: Uint32Array, a: Uint32Array): void {\r\n        b[0] = a[0];\r\n        b[1] = a[1];\r\n        b[2] = a[2];\r\n        b[3] = a[3];\r\n    };\r\n\r\n    xor128(b: Uint32Array, a: Uint32Array): void {\r\n        b[0] ^= a[0];\r\n        b[1] ^= a[1];\r\n        b[2] ^= a[2];\r\n        b[3] ^= a[3];\r\n    };\r\n\r\n    rol128(b: Uint32Array, a: Uint32Array, n: number): void {\r\n        const shift = n % 32;\r\n        const wordShift = Math.floor(n / 32);\r\n        for (let i = 0; i < 4; i++) {\r\n            const idx1 = (wordShift + i) % 4;\r\n            const idx2 = (wordShift + i + 1) % 4;\r\n            b[i] = ((a[idx1] << shift) | (a[idx2] >>> (32 - shift))) >>> 0;\r\n        }\r\n    };\r\n\r\n    getByte(x: Uint32Array, n: number): number {\r\n        return (x[Math.floor(n / 4)] >>> ((3 - (n % 4)) * 8)) & 0xFF;\r\n    };\r\n\r\n    sl1(b: Uint32Array, a: Uint32Array): void {\r\n        b[0] = (this.sb1[this.getByte(a, 0)] << 24)  | (this.sb2[this.getByte(a, 1)] << 16) |  (this.sb3[this.getByte(a, 2)] << 8)  | this.sb4[this.getByte(a, 3)];\r\n        b[1] = (this.sb1[this.getByte(a, 4)] << 24)  | (this.sb2[this.getByte(a, 5)] << 16) |  (this.sb3[this.getByte(a, 6)] << 8)  | this.sb4[this.getByte(a, 7)];\r\n        b[2] = (this.sb1[this.getByte(a, 8)] << 24)  | (this.sb2[this.getByte(a, 9)] << 16) |  (this.sb3[this.getByte(a, 10)] << 8) | this.sb4[this.getByte(a, 11)];\r\n        b[3] = (this.sb1[this.getByte(a, 12)] << 24) | (this.sb2[this.getByte(a, 13)] << 16) | (this.sb3[this.getByte(a, 14)] << 8) | this.sb4[this.getByte(a, 15)];\r\n    };\r\n\r\n    sl2(b: Uint32Array, a: Uint32Array): void {\r\n        b[0] = (this.sb3[this.getByte(a, 0)] << 24)  | (this.sb4[this.getByte(a, 1)] << 16)  | (this.sb1[this.getByte(a, 2)] << 8)  | this.sb2[this.getByte(a, 3)];\r\n        b[1] = (this.sb3[this.getByte(a, 4)] << 24)  | (this.sb4[this.getByte(a, 5)] << 16)  | (this.sb1[this.getByte(a, 6)] << 8)  | this.sb2[this.getByte(a, 7)];\r\n        b[2] = (this.sb3[this.getByte(a, 8)] << 24)  | (this.sb4[this.getByte(a, 9)] << 16)  | (this.sb1[this.getByte(a, 10)] << 8) | this.sb2[this.getByte(a, 11)];\r\n        b[3] = (this.sb3[this.getByte(a, 12)] << 24) | (this.sb4[this.getByte(a, 13)] << 16) | (this.sb1[this.getByte(a, 14)] << 8) | this.sb2[this.getByte(a, 15)];\r\n    };\r\n\r\n    a(b: Uint32Array, a: Uint32Array): void {\r\n        b[0] = (\r\n            (this.getByte(a, 3) ^ this.getByte(a, 4) ^ this.getByte(a, 6) ^ this.getByte(a, 8)  ^ this.getByte(a, 9) ^  this.getByte(a, 13) ^ this.getByte(a, 14)) << 24 |\r\n            (this.getByte(a, 2) ^ this.getByte(a, 5) ^ this.getByte(a, 7) ^ this.getByte(a, 8)  ^ this.getByte(a, 9) ^  this.getByte(a, 12) ^ this.getByte(a, 15)) << 16 |\r\n            (this.getByte(a, 1) ^ this.getByte(a, 4) ^ this.getByte(a, 6) ^ this.getByte(a, 10) ^ this.getByte(a, 11) ^ this.getByte(a, 12) ^ this.getByte(a, 15)) << 8 |\r\n            (this.getByte(a, 0) ^ this.getByte(a, 5) ^ this.getByte(a, 7) ^ this.getByte(a, 10) ^ this.getByte(a, 11) ^ this.getByte(a, 13) ^ this.getByte(a, 14))\r\n        ) >>> 0;\r\n        b[1] = (\r\n            (this.getByte(a, 0) ^ this.getByte(a, 2) ^ this.getByte(a, 5) ^ this.getByte(a, 8) ^ this.getByte(a, 11) ^ this.getByte(a, 14) ^ this.getByte(a, 15)) << 24 |\r\n            (this.getByte(a, 1) ^ this.getByte(a, 3) ^ this.getByte(a, 4) ^ this.getByte(a, 9) ^ this.getByte(a, 10) ^ this.getByte(a, 14) ^ this.getByte(a, 15)) << 16 |\r\n            (this.getByte(a, 0) ^ this.getByte(a, 2) ^ this.getByte(a, 7) ^ this.getByte(a, 9) ^ this.getByte(a, 10) ^ this.getByte(a, 12) ^ this.getByte(a, 13)) << 8 |\r\n            (this.getByte(a, 1) ^ this.getByte(a, 3) ^ this.getByte(a, 6) ^ this.getByte(a, 8) ^ this.getByte(a, 11) ^ this.getByte(a, 12) ^ this.getByte(a, 13))\r\n        ) >>> 0;\r\n        b[2] = (\r\n            (this.getByte(a, 0) ^ this.getByte(a, 1) ^ this.getByte(a, 4) ^ this.getByte(a, 7) ^ this.getByte(a, 10) ^ this.getByte(a, 13) ^ this.getByte(a, 15)) << 24 |\r\n            (this.getByte(a, 0) ^ this.getByte(a, 1) ^ this.getByte(a, 5) ^ this.getByte(a, 6) ^ this.getByte(a, 11) ^ this.getByte(a, 12) ^ this.getByte(a, 14)) << 16 |\r\n            (this.getByte(a, 2) ^ this.getByte(a, 3) ^ this.getByte(a, 5) ^ this.getByte(a, 6) ^ this.getByte(a, 8)  ^ this.getByte(a, 13) ^ this.getByte(a, 15)) << 8 |\r\n            (this.getByte(a, 2) ^ this.getByte(a, 3) ^ this.getByte(a, 4) ^ this.getByte(a, 7) ^ this.getByte(a, 9)  ^ this.getByte(a, 12) ^ this.getByte(a, 14))\r\n        ) >>> 0;\r\n        b[3] = (\r\n            (this.getByte(a, 1) ^ this.getByte(a, 2) ^ this.getByte(a, 6) ^ this.getByte(a, 7) ^ this.getByte(a, 9) ^ this.getByte(a, 11) ^ this.getByte(a, 12)) << 24 |\r\n            (this.getByte(a, 0) ^ this.getByte(a, 3) ^ this.getByte(a, 6) ^ this.getByte(a, 7) ^ this.getByte(a, 8) ^ this.getByte(a, 10) ^ this.getByte(a, 13)) << 16 |\r\n            (this.getByte(a, 0) ^ this.getByte(a, 3) ^ this.getByte(a, 4) ^ this.getByte(a, 5) ^ this.getByte(a, 9) ^ this.getByte(a, 11) ^ this.getByte(a, 14)) << 8 |\r\n            (this.getByte(a, 1) ^ this.getByte(a, 2) ^ this.getByte(a, 4) ^ this.getByte(a, 5) ^ this.getByte(a, 8) ^ this.getByte(a, 10) ^ this.getByte(a, 15))\r\n        ) >>> 0;\r\n    };\r\n\r\n    // Odd round function\r\n    of(d: Uint32Array, rk: Uint32Array): void {\r\n        const t = new Uint32Array(4);\r\n        this.xor128(d, rk);\r\n        this.sl1(t, d);\r\n        this.a(d, t);\r\n    };\r\n\r\n    // Even round function\r\n    ef(d: Uint32Array, rk: Uint32Array): void {\r\n        const t = new Uint32Array(4);\r\n        this.xor128(d, rk);\r\n        this.sl2(t, d);\r\n        this.a(d, t);\r\n    };\r\n\r\n    // Initialize ARIA context\r\n    set_key(key: Buffer): void {\r\n        const keyLen = key.length;\r\n\r\n        let ck1: Uint32Array, ck2: Uint32Array, ck3: Uint32Array;\r\n\r\n        if (keyLen === 16) {\r\n            this.nr = 12;\r\n            ck1 = this.c.subarray(0, 4);\r\n            ck2 = this.c.subarray(4, 8);\r\n            ck3 = this.c.subarray(8, 12);\r\n        } else if (keyLen === 24) {\r\n            this.nr = 14;\r\n            ck1 = this.c.subarray(4, 8);\r\n            ck2 = this.c.subarray(8, 12);\r\n            ck3 = this.c.subarray(0, 4);\r\n        } else if (keyLen === 32) {\r\n            this.nr = 16;\r\n            ck1 = this.c.subarray(8, 12);\r\n            ck2 = this.c.subarray(0, 4);\r\n            ck3 = this.c.subarray(4, 8);\r\n        } else {\r\n            throw new Error(\"INVALID_KEY_LENGTH\");\r\n        }\r\n\r\n        const keyWords = keyLen / 4;\r\n        const w = new Uint32Array(16);\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            if (i < keyWords) {\r\n                w[i] = this.load32BE(key, i * 4);\r\n            } else {\r\n                w[i] = 0;\r\n            }\r\n        }\r\n\r\n        // Save KR\r\n        this.mov128(w.subarray(8, 12), w.subarray(4, 8));\r\n\r\n        // Compute intermediate values W0, W1, W2, W3\r\n        this.mov128(w.subarray(4, 8), w.subarray(0, 4));\r\n        this.of(w.subarray(4, 8), ck1);\r\n        this.xor128(w.subarray(4, 8), w.subarray(8, 12));\r\n\r\n        this.mov128(w.subarray(8, 12), w.subarray(4, 8));\r\n        this.ef(w.subarray(8, 12), ck2);\r\n        this.xor128(w.subarray(8, 12), w.subarray(0, 4));\r\n\r\n        this.mov128(w.subarray(12, 16), w.subarray(8, 12));\r\n        this.of(w.subarray(12, 16), ck3);\r\n        this.xor128(w.subarray(12, 16), w.subarray(4, 8));\r\n\r\n        // Compute encryption round keys\r\n        const ek = this.ek;\r\n        this.rol128(ek.subarray(0, 4), w.subarray(4, 8), 109);\r\n        this.xor128(ek.subarray(0, 4), w.subarray(0, 4));\r\n        this.rol128(ek.subarray(4, 8), w.subarray(8, 12), 109);\r\n        this.xor128(ek.subarray(4, 8), w.subarray(4, 8));\r\n        this.rol128(ek.subarray(8, 12), w.subarray(12, 16), 109);\r\n        this.xor128(ek.subarray(8, 12), w.subarray(8, 12));\r\n        this.rol128(ek.subarray(12, 16), w.subarray(0, 4), 109);\r\n        this.xor128(ek.subarray(12, 16), w.subarray(12, 16));\r\n        this.rol128(ek.subarray(16, 20), w.subarray(4, 8), 97);\r\n        this.xor128(ek.subarray(16, 20), w.subarray(0, 4));\r\n        this.rol128(ek.subarray(20, 24), w.subarray(8, 12), 97);\r\n        this.xor128(ek.subarray(20, 24), w.subarray(4, 8));\r\n        this.rol128(ek.subarray(24, 28), w.subarray(12, 16), 97);\r\n        this.xor128(ek.subarray(24, 28), w.subarray(8, 12));\r\n        this.rol128(ek.subarray(28, 32), w.subarray(0, 4), 97);\r\n        this.xor128(ek.subarray(28, 32), w.subarray(12, 16));\r\n        this.rol128(ek.subarray(32, 36), w.subarray(4, 8), 61);\r\n        this.xor128(ek.subarray(32, 36), w.subarray(0, 4));\r\n        this.rol128(ek.subarray(36, 40), w.subarray(8, 12), 61);\r\n        this.xor128(ek.subarray(36, 40), w.subarray(4, 8));\r\n        this.rol128(ek.subarray(40, 44), w.subarray(12, 16), 61);\r\n        this.xor128(ek.subarray(40, 44), w.subarray(8, 12));\r\n        this.rol128(ek.subarray(44, 48), w.subarray(0, 4), 61);\r\n        this.xor128(ek.subarray(44, 48), w.subarray(12, 16));\r\n        this.rol128(ek.subarray(48, 52), w.subarray(4, 8), 31);\r\n        this.xor128(ek.subarray(48, 52), w.subarray(0, 4));\r\n        this.rol128(ek.subarray(52, 56), w.subarray(8, 12), 31);\r\n        this.xor128(ek.subarray(52, 56), w.subarray(4, 8));\r\n        this.rol128(ek.subarray(56, 60), w.subarray(12, 16), 31);\r\n        this.xor128(ek.subarray(56, 60), w.subarray(8, 12));\r\n        this.rol128(ek.subarray(60, 64), w.subarray(0, 4), 31);\r\n        this.xor128(ek.subarray(60, 64), w.subarray(12, 16));\r\n        this.rol128(ek.subarray(64, 68), w.subarray(4, 8), 19);\r\n        this.xor128(ek.subarray(64, 68), w.subarray(0, 4));\r\n\r\n        // Compute decryption round keys\r\n        const dk = this.dk;\r\n        this.mov128(dk.subarray(0, 4), ek.subarray(this.nr * 4, this.nr * 4 + 4));\r\n\r\n        for (let i = 1; i < this.nr; i++) {\r\n            this.a(dk.subarray(i * 4, i * 4 + 4), ek.subarray((this.nr - i) * 4, (this.nr - i) * 4 + 4));\r\n        }\r\n\r\n        this.mov128(dk.subarray(this.nr * 4, this.nr * 4 + 4), ek.subarray(0, 4));\r\n\r\n        this.key_set = true;\r\n    };\r\n\r\n    /**\r\n     * IV for CBC encryption.\r\n     *\r\n     * Must be same length as key!\r\n     * \r\n     * @param {Buffer} iv - ```Buffer```\r\n     */\r\n    set_iv(iv: Buffer): void {\r\n        if (this.key_set != true) {\r\n            throw new Error(\"Must set key before IV\");\r\n        }\r\n        if (iv) {\r\n            if (iv.length != 16) {\r\n                throw new Error(`Enter a vaild 16 byte IV for CBC mode`);\r\n            } else {\r\n                this.iv = iv;\r\n                this.iv_set = true;\r\n            }\r\n        } else {\r\n            throw new Error(`Enter a vaild 16 byte IV for CBC mode`);\r\n        }\r\n    };\r\n\r\n    // Encrypt a 16-byte block\r\n    encrypt_block(input: Buffer, last_block?: boolean): Buffer {\r\n        const p = new Uint32Array(4);\r\n        const q = new Uint32Array(4);\r\n        const output = Buffer.alloc(16);\r\n        const ek = this.ek;\r\n\r\n        if(last_block){\r\n            input = padd_block(input);\r\n        }\r\n        if (this.iv_set == true) {\r\n            input = xor(input, this.iv);\r\n        }\r\n\r\n        p[0] = this.load32BE(input, 0);\r\n        p[1] = this.load32BE(input, 4);\r\n        p[2] = this.load32BE(input, 8);\r\n        p[3] = this.load32BE(input, 12);\r\n\r\n        this.of(p, ek.subarray(0, 4));\r\n        this.ef(p, ek.subarray(4, 8));\r\n        this.of(p, ek.subarray(8, 12));\r\n        this.ef(p, ek.subarray(12, 16));\r\n        this.of(p, ek.subarray(16, 20));\r\n        this.ef(p, ek.subarray(20, 24));\r\n        this.of(p, ek.subarray(24, 28));\r\n        this.ef(p, ek.subarray(28, 32));\r\n        this.of(p, ek.subarray(32, 36));\r\n        this.ef(p, ek.subarray(36, 40));\r\n        this.of(p, ek.subarray(40, 44));\r\n\r\n        if (this.nr === 12) {\r\n            this.xor128(p, ek.subarray(44, 48));\r\n            this.sl2(q, p);\r\n            this.xor128(q, ek.subarray(48, 52));\r\n        } else if (this.nr === 14) {\r\n            this.ef(p, ek.subarray(44, 48));\r\n            this.of(p, ek.subarray(48, 52));\r\n            this.xor128(p, ek.subarray(52, 56));\r\n            this.sl2(q, p);\r\n            this.xor128(q, ek.subarray(56, 60));\r\n        } else {\r\n            this.ef(p, ek.subarray(44, 48));\r\n            this.of(p, ek.subarray(48, 52));\r\n            this.ef(p, ek.subarray(52, 56));\r\n            this.of(p, ek.subarray(56, 60));\r\n            this.xor128(p, ek.subarray(60, 64));\r\n            this.sl2(q, p);\r\n            this.xor128(q, ek.subarray(64, 68));\r\n        }\r\n\r\n        this.store32BE(q[0], output, 0);\r\n        this.store32BE(q[1], output, 4);\r\n        this.store32BE(q[2], output, 8);\r\n        this.store32BE(q[3], output, 12);\r\n\r\n        if (this.iv_set == true) {\r\n            this.iv = output;\r\n        }\r\n\r\n        return output;\r\n    };\r\n\r\n    // Decrypt a 16-byte block\r\n    decrypt_block(input: Buffer, last_block?: boolean): Buffer {\r\n        const p = new Uint32Array(4);\r\n        const q = new Uint32Array(4);\r\n        const output = Buffer.alloc(16);\r\n        const dk = this.dk;\r\n\r\n        if (this.iv_set == true) {\r\n            if (this.previous_block != undefined) {\r\n                this.iv = this.previous_block;\r\n            }\r\n        }\r\n        this.previous_block = input;\r\n\r\n        p[0] = this.load32BE(input, 0);\r\n        p[1] = this.load32BE(input, 4);\r\n        p[2] = this.load32BE(input, 8);\r\n        p[3] = this.load32BE(input, 12);\r\n\r\n        this.of(p, dk.subarray(0, 4));\r\n        this.ef(p, dk.subarray(4, 8));\r\n        this.of(p, dk.subarray(8, 12));\r\n        this.ef(p, dk.subarray(12, 16));\r\n        this.of(p, dk.subarray(16, 20));\r\n        this.ef(p, dk.subarray(20, 24));\r\n        this.of(p, dk.subarray(24, 28));\r\n        this.ef(p, dk.subarray(28, 32));\r\n        this.of(p, dk.subarray(32, 36));\r\n        this.ef(p, dk.subarray(36, 40));\r\n        this.of(p, dk.subarray(40, 44));\r\n\r\n        if (this.nr === 12) {\r\n            this.xor128(p, dk.subarray(44, 48));\r\n            this.sl2(q, p);\r\n            this.xor128(q, dk.subarray(48, 52));\r\n        } else if (this.nr === 14) {\r\n            this.ef(p, dk.subarray(44, 48));\r\n            this.of(p, dk.subarray(48, 52));\r\n            this.xor128(p, dk.subarray(52, 56));\r\n            this.sl2(q, p);\r\n            this.xor128(q, dk.subarray(56, 60));\r\n        } else {\r\n            this.ef(p, dk.subarray(44, 48));\r\n            this.of(p, dk.subarray(48, 52));\r\n            this.ef(p, dk.subarray(52, 56));\r\n            this.of(p, dk.subarray(56, 60));\r\n            this.xor128(p, dk.subarray(60, 64));\r\n            this.sl2(q, p);\r\n            this.xor128(q, dk.subarray(64, 68));\r\n        }\r\n\r\n        this.store32BE(q[0], output, 0);\r\n        this.store32BE(q[1], output, 4);\r\n        this.store32BE(q[2], output, 8);\r\n        this.store32BE(q[3], output, 12);\r\n\r\n        if (this.iv_set == true) {\r\n            xor(output, this.iv);\r\n        }\r\n\r\n        if(last_block){\r\n            var padd_value = align(output.length, 16);\r\n            return removePKCSPadding(output, padd_value, true);\r\n        }\r\n\r\n        return output;\r\n    };\r\n\r\n    /**\r\n     * If IV is not set, runs in ECB mode.\r\n     * \r\n     * If IV was set, runs in CBC mode.\r\n     * \r\n     * If padding number is not set, uses PKCS padding.\r\n     *\r\n     * @param {Buffer} data_in - ```Buffer```\r\n     * @param {number} padding - ```number``` defaults to 0 for PKCS or can use a value\r\n     * @returns ```Buffer```\r\n     */\r\n    encrypt(data_in: Buffer, padding: number = 0): Buffer {\r\n        const block_size = this.ARIA_BLOCK_SIZE;\r\n        if (this.key_set != true) {\r\n            throw Error(\"Please set key first\");\r\n        }\r\n        var data = data_in;\r\n        var padd_value = padding;\r\n        const return_buff: any[] = [];\r\n        if (data.length % block_size != 0) {\r\n            var to_padd = block_size - (data.length % block_size);\r\n            if (padding == 0) {\r\n                padd_value = to_padd;\r\n            }\r\n            var paddbuffer = Buffer.alloc(to_padd, padd_value & 0xFF);\r\n            data = Buffer.concat([data_in, paddbuffer]);\r\n        }\r\n        for (let index = 0; index < data.length / block_size; index++) {\r\n            const block = data.subarray((index * block_size), (index + 1) * block_size);\r\n            const return_block = this.encrypt_block(block);\r\n            return_buff.push(return_block);\r\n        }\r\n        var final_buffer = Buffer.concat(return_buff);\r\n        this.iv_set = false;\r\n        return final_buffer;\r\n    };\r\n\r\n    /**\r\n     * If IV is not set, runs in ECB mode.\r\n     * \r\n     * If IV was set, runs in CBC mode.\r\n     * \r\n     * If remove_padding is ``number``, will check the last block and remove padded number.\r\n     * \r\n     * If remove_padding is ``true``, will remove PKCS padding on last block.\r\n     *\r\n     * @param {Buffer} data_in - ```Buffer```\r\n     * @param {boolean|number} remove_padding - Will check the last block and remove padded ``number``. Will remove PKCS if ``true``\r\n     * @returns ```Buffer```\r\n     */\r\n    decrypt(data_in: Buffer, remove_padding: boolean | number = true): Buffer {\r\n        const block_size = 16;\r\n        if (this.key_set != true) {\r\n            throw Error(\"Please set key first\");\r\n        }\r\n        var data = data_in;\r\n        var padd_value = align(data.length, block_size);\r\n        if (typeof remove_padding == 'number') {\r\n            padd_value = remove_padding & 0xFF;\r\n        }\r\n        const return_buff: any[] = [];\r\n        if (data.length % block_size != 0) {\r\n            var to_padd = block_size - (data.length % block_size);\r\n            var paddbuffer = Buffer.alloc(to_padd, padd_value & 0xFF);\r\n            data = Buffer.concat([data_in, paddbuffer]);\r\n        }\r\n        for (let index = 0, amount = Math.ceil(data.length / block_size); index < amount; index++) {\r\n            const block = data.subarray((index * block_size), (index + 1) * block_size);\r\n            var return_block = this.decrypt_block(block);\r\n            if ((remove_padding != false ) && (index == (amount - 1))) {\r\n                return_block = removePKCSPadding(return_block, padd_value, remove_padding);\r\n                return_buff.push(return_block);\r\n            } else {\r\n                return_buff.push(return_block);\r\n            }\r\n        }\r\n        var final_buffer = Buffer.concat(return_buff);\r\n        this.iv_set = false;\r\n        return final_buffer;\r\n    };\r\n};\r\n\r\nclass CAMELLIA {\r\n    public key: any;\r\n    public key_set: boolean = false;\r\n    public iv: any;\r\n    public iv_set: boolean = false;\r\n\r\n    private previous_block: any;\r\n\r\n    private MASK8 = 0xFF;\r\n    private initialized = false;\r\n    private _keyis128 = false;\r\n    private subkey = new Uint32Array(96);\r\n    private kw = new Uint32Array(8);\r\n    private ke = new Uint32Array(12);\r\n    private state = new Uint32Array(4);\r\n\r\n    constructor() {\r\n    }\r\n\r\n    private SIGMA = new Uint32Array([\r\n        0xa09e667f, 0x3bcc908b,\r\n        0xb67ae858, 0x4caa73b2,\r\n        0xc6ef372f, 0xe94f82be,\r\n        0x54ff53a5, 0xf1d36f1c,\r\n        0x10e527fa, 0xde682d1d,\r\n        0xb05688c2, 0xb3e6c1fd\r\n    ]);\r\n\r\n    private SBOX1_1110 = new Uint32Array([\r\n        0x70707000, 0x82828200, 0x2c2c2c00, 0xececec00, 0xb3b3b300, 0x27272700,\r\n        0xc0c0c000, 0xe5e5e500, 0xe4e4e400, 0x85858500, 0x57575700, 0x35353500,\r\n        0xeaeaea00, 0x0c0c0c00, 0xaeaeae00, 0x41414100, 0x23232300, 0xefefef00,\r\n        0x6b6b6b00, 0x93939300, 0x45454500, 0x19191900, 0xa5a5a500, 0x21212100,\r\n        0xededed00, 0x0e0e0e00, 0x4f4f4f00, 0x4e4e4e00, 0x1d1d1d00, 0x65656500,\r\n        0x92929200, 0xbdbdbd00, 0x86868600, 0xb8b8b800, 0xafafaf00, 0x8f8f8f00,\r\n        0x7c7c7c00, 0xebebeb00, 0x1f1f1f00, 0xcecece00, 0x3e3e3e00, 0x30303000,\r\n        0xdcdcdc00, 0x5f5f5f00, 0x5e5e5e00, 0xc5c5c500, 0x0b0b0b00, 0x1a1a1a00,\r\n        0xa6a6a600, 0xe1e1e100, 0x39393900, 0xcacaca00, 0xd5d5d500, 0x47474700,\r\n        0x5d5d5d00, 0x3d3d3d00, 0xd9d9d900, 0x01010100, 0x5a5a5a00, 0xd6d6d600,\r\n        0x51515100, 0x56565600, 0x6c6c6c00, 0x4d4d4d00, 0x8b8b8b00, 0x0d0d0d00,\r\n        0x9a9a9a00, 0x66666600, 0xfbfbfb00, 0xcccccc00, 0xb0b0b000, 0x2d2d2d00,\r\n        0x74747400, 0x12121200, 0x2b2b2b00, 0x20202000, 0xf0f0f000, 0xb1b1b100,\r\n        0x84848400, 0x99999900, 0xdfdfdf00, 0x4c4c4c00, 0xcbcbcb00, 0xc2c2c200,\r\n        0x34343400, 0x7e7e7e00, 0x76767600, 0x05050500, 0x6d6d6d00, 0xb7b7b700,\r\n        0xa9a9a900, 0x31313100, 0xd1d1d100, 0x17171700, 0x04040400, 0xd7d7d700,\r\n        0x14141400, 0x58585800, 0x3a3a3a00, 0x61616100, 0xdedede00, 0x1b1b1b00,\r\n        0x11111100, 0x1c1c1c00, 0x32323200, 0x0f0f0f00, 0x9c9c9c00, 0x16161600,\r\n        0x53535300, 0x18181800, 0xf2f2f200, 0x22222200, 0xfefefe00, 0x44444400,\r\n        0xcfcfcf00, 0xb2b2b200, 0xc3c3c300, 0xb5b5b500, 0x7a7a7a00, 0x91919100,\r\n        0x24242400, 0x08080800, 0xe8e8e800, 0xa8a8a800, 0x60606000, 0xfcfcfc00,\r\n        0x69696900, 0x50505000, 0xaaaaaa00, 0xd0d0d000, 0xa0a0a000, 0x7d7d7d00,\r\n        0xa1a1a100, 0x89898900, 0x62626200, 0x97979700, 0x54545400, 0x5b5b5b00,\r\n        0x1e1e1e00, 0x95959500, 0xe0e0e000, 0xffffff00, 0x64646400, 0xd2d2d200,\r\n        0x10101000, 0xc4c4c400, 0x00000000, 0x48484800, 0xa3a3a300, 0xf7f7f700,\r\n        0x75757500, 0xdbdbdb00, 0x8a8a8a00, 0x03030300, 0xe6e6e600, 0xdadada00,\r\n        0x09090900, 0x3f3f3f00, 0xdddddd00, 0x94949400, 0x87878700, 0x5c5c5c00,\r\n        0x83838300, 0x02020200, 0xcdcdcd00, 0x4a4a4a00, 0x90909000, 0x33333300,\r\n        0x73737300, 0x67676700, 0xf6f6f600, 0xf3f3f300, 0x9d9d9d00, 0x7f7f7f00,\r\n        0xbfbfbf00, 0xe2e2e200, 0x52525200, 0x9b9b9b00, 0xd8d8d800, 0x26262600,\r\n        0xc8c8c800, 0x37373700, 0xc6c6c600, 0x3b3b3b00, 0x81818100, 0x96969600,\r\n        0x6f6f6f00, 0x4b4b4b00, 0x13131300, 0xbebebe00, 0x63636300, 0x2e2e2e00,\r\n        0xe9e9e900, 0x79797900, 0xa7a7a700, 0x8c8c8c00, 0x9f9f9f00, 0x6e6e6e00,\r\n        0xbcbcbc00, 0x8e8e8e00, 0x29292900, 0xf5f5f500, 0xf9f9f900, 0xb6b6b600,\r\n        0x2f2f2f00, 0xfdfdfd00, 0xb4b4b400, 0x59595900, 0x78787800, 0x98989800,\r\n        0x06060600, 0x6a6a6a00, 0xe7e7e700, 0x46464600, 0x71717100, 0xbababa00,\r\n        0xd4d4d400, 0x25252500, 0xababab00, 0x42424200, 0x88888800, 0xa2a2a200,\r\n        0x8d8d8d00, 0xfafafa00, 0x72727200, 0x07070700, 0xb9b9b900, 0x55555500,\r\n        0xf8f8f800, 0xeeeeee00, 0xacacac00, 0x0a0a0a00, 0x36363600, 0x49494900,\r\n        0x2a2a2a00, 0x68686800, 0x3c3c3c00, 0x38383800, 0xf1f1f100, 0xa4a4a400,\r\n        0x40404000, 0x28282800, 0xd3d3d300, 0x7b7b7b00, 0xbbbbbb00, 0xc9c9c900,\r\n        0x43434300, 0xc1c1c100, 0x15151500, 0xe3e3e300, 0xadadad00, 0xf4f4f400,\r\n        0x77777700, 0xc7c7c700, 0x80808000, 0x9e9e9e00\r\n    ]);\r\n\r\n    private SBOX4_4404 = new Uint32Array([\r\n        0x70700070, 0x2c2c002c, 0xb3b300b3, 0xc0c000c0, 0xe4e400e4, 0x57570057,\r\n        0xeaea00ea, 0xaeae00ae, 0x23230023, 0x6b6b006b, 0x45450045, 0xa5a500a5,\r\n        0xeded00ed, 0x4f4f004f, 0x1d1d001d, 0x92920092, 0x86860086, 0xafaf00af,\r\n        0x7c7c007c, 0x1f1f001f, 0x3e3e003e, 0xdcdc00dc, 0x5e5e005e, 0x0b0b000b,\r\n        0xa6a600a6, 0x39390039, 0xd5d500d5, 0x5d5d005d, 0xd9d900d9, 0x5a5a005a,\r\n        0x51510051, 0x6c6c006c, 0x8b8b008b, 0x9a9a009a, 0xfbfb00fb, 0xb0b000b0,\r\n        0x74740074, 0x2b2b002b, 0xf0f000f0, 0x84840084, 0xdfdf00df, 0xcbcb00cb,\r\n        0x34340034, 0x76760076, 0x6d6d006d, 0xa9a900a9, 0xd1d100d1, 0x04040004,\r\n        0x14140014, 0x3a3a003a, 0xdede00de, 0x11110011, 0x32320032, 0x9c9c009c,\r\n        0x53530053, 0xf2f200f2, 0xfefe00fe, 0xcfcf00cf, 0xc3c300c3, 0x7a7a007a,\r\n        0x24240024, 0xe8e800e8, 0x60600060, 0x69690069, 0xaaaa00aa, 0xa0a000a0,\r\n        0xa1a100a1, 0x62620062, 0x54540054, 0x1e1e001e, 0xe0e000e0, 0x64640064,\r\n        0x10100010, 0x00000000, 0xa3a300a3, 0x75750075, 0x8a8a008a, 0xe6e600e6,\r\n        0x09090009, 0xdddd00dd, 0x87870087, 0x83830083, 0xcdcd00cd, 0x90900090,\r\n        0x73730073, 0xf6f600f6, 0x9d9d009d, 0xbfbf00bf, 0x52520052, 0xd8d800d8,\r\n        0xc8c800c8, 0xc6c600c6, 0x81810081, 0x6f6f006f, 0x13130013, 0x63630063,\r\n        0xe9e900e9, 0xa7a700a7, 0x9f9f009f, 0xbcbc00bc, 0x29290029, 0xf9f900f9,\r\n        0x2f2f002f, 0xb4b400b4, 0x78780078, 0x06060006, 0xe7e700e7, 0x71710071,\r\n        0xd4d400d4, 0xabab00ab, 0x88880088, 0x8d8d008d, 0x72720072, 0xb9b900b9,\r\n        0xf8f800f8, 0xacac00ac, 0x36360036, 0x2a2a002a, 0x3c3c003c, 0xf1f100f1,\r\n        0x40400040, 0xd3d300d3, 0xbbbb00bb, 0x43430043, 0x15150015, 0xadad00ad,\r\n        0x77770077, 0x80800080, 0x82820082, 0xecec00ec, 0x27270027, 0xe5e500e5,\r\n        0x85850085, 0x35350035, 0x0c0c000c, 0x41410041, 0xefef00ef, 0x93930093,\r\n        0x19190019, 0x21210021, 0x0e0e000e, 0x4e4e004e, 0x65650065, 0xbdbd00bd,\r\n        0xb8b800b8, 0x8f8f008f, 0xebeb00eb, 0xcece00ce, 0x30300030, 0x5f5f005f,\r\n        0xc5c500c5, 0x1a1a001a, 0xe1e100e1, 0xcaca00ca, 0x47470047, 0x3d3d003d,\r\n        0x01010001, 0xd6d600d6, 0x56560056, 0x4d4d004d, 0x0d0d000d, 0x66660066,\r\n        0xcccc00cc, 0x2d2d002d, 0x12120012, 0x20200020, 0xb1b100b1, 0x99990099,\r\n        0x4c4c004c, 0xc2c200c2, 0x7e7e007e, 0x05050005, 0xb7b700b7, 0x31310031,\r\n        0x17170017, 0xd7d700d7, 0x58580058, 0x61610061, 0x1b1b001b, 0x1c1c001c,\r\n        0x0f0f000f, 0x16160016, 0x18180018, 0x22220022, 0x44440044, 0xb2b200b2,\r\n        0xb5b500b5, 0x91910091, 0x08080008, 0xa8a800a8, 0xfcfc00fc, 0x50500050,\r\n        0xd0d000d0, 0x7d7d007d, 0x89890089, 0x97970097, 0x5b5b005b, 0x95950095,\r\n        0xffff00ff, 0xd2d200d2, 0xc4c400c4, 0x48480048, 0xf7f700f7, 0xdbdb00db,\r\n        0x03030003, 0xdada00da, 0x3f3f003f, 0x94940094, 0x5c5c005c, 0x02020002,\r\n        0x4a4a004a, 0x33330033, 0x67670067, 0xf3f300f3, 0x7f7f007f, 0xe2e200e2,\r\n        0x9b9b009b, 0x26260026, 0x37370037, 0x3b3b003b, 0x96960096, 0x4b4b004b,\r\n        0xbebe00be, 0x2e2e002e, 0x79790079, 0x8c8c008c, 0x6e6e006e, 0x8e8e008e,\r\n        0xf5f500f5, 0xb6b600b6, 0xfdfd00fd, 0x59590059, 0x98980098, 0x6a6a006a,\r\n        0x46460046, 0xbaba00ba, 0x25250025, 0x42420042, 0xa2a200a2, 0xfafa00fa,\r\n        0x07070007, 0x55550055, 0xeeee00ee, 0x0a0a000a, 0x49490049, 0x68680068,\r\n        0x38380038, 0xa4a400a4, 0x28280028, 0x7b7b007b, 0xc9c900c9, 0xc1c100c1,\r\n        0xe3e300e3, 0xf4f400f4, 0xc7c700c7, 0x9e9e009e\r\n    ]);\r\n\r\n    private SBOX2_0222 = new Uint32Array([\r\n        0x00e0e0e0, 0x00050505, 0x00585858, 0x00d9d9d9, 0x00676767, 0x004e4e4e,\r\n        0x00818181, 0x00cbcbcb, 0x00c9c9c9, 0x000b0b0b, 0x00aeaeae, 0x006a6a6a,\r\n        0x00d5d5d5, 0x00181818, 0x005d5d5d, 0x00828282, 0x00464646, 0x00dfdfdf,\r\n        0x00d6d6d6, 0x00272727, 0x008a8a8a, 0x00323232, 0x004b4b4b, 0x00424242,\r\n        0x00dbdbdb, 0x001c1c1c, 0x009e9e9e, 0x009c9c9c, 0x003a3a3a, 0x00cacaca,\r\n        0x00252525, 0x007b7b7b, 0x000d0d0d, 0x00717171, 0x005f5f5f, 0x001f1f1f,\r\n        0x00f8f8f8, 0x00d7d7d7, 0x003e3e3e, 0x009d9d9d, 0x007c7c7c, 0x00606060,\r\n        0x00b9b9b9, 0x00bebebe, 0x00bcbcbc, 0x008b8b8b, 0x00161616, 0x00343434,\r\n        0x004d4d4d, 0x00c3c3c3, 0x00727272, 0x00959595, 0x00ababab, 0x008e8e8e,\r\n        0x00bababa, 0x007a7a7a, 0x00b3b3b3, 0x00020202, 0x00b4b4b4, 0x00adadad,\r\n        0x00a2a2a2, 0x00acacac, 0x00d8d8d8, 0x009a9a9a, 0x00171717, 0x001a1a1a,\r\n        0x00353535, 0x00cccccc, 0x00f7f7f7, 0x00999999, 0x00616161, 0x005a5a5a,\r\n        0x00e8e8e8, 0x00242424, 0x00565656, 0x00404040, 0x00e1e1e1, 0x00636363,\r\n        0x00090909, 0x00333333, 0x00bfbfbf, 0x00989898, 0x00979797, 0x00858585,\r\n        0x00686868, 0x00fcfcfc, 0x00ececec, 0x000a0a0a, 0x00dadada, 0x006f6f6f,\r\n        0x00535353, 0x00626262, 0x00a3a3a3, 0x002e2e2e, 0x00080808, 0x00afafaf,\r\n        0x00282828, 0x00b0b0b0, 0x00747474, 0x00c2c2c2, 0x00bdbdbd, 0x00363636,\r\n        0x00222222, 0x00383838, 0x00646464, 0x001e1e1e, 0x00393939, 0x002c2c2c,\r\n        0x00a6a6a6, 0x00303030, 0x00e5e5e5, 0x00444444, 0x00fdfdfd, 0x00888888,\r\n        0x009f9f9f, 0x00656565, 0x00878787, 0x006b6b6b, 0x00f4f4f4, 0x00232323,\r\n        0x00484848, 0x00101010, 0x00d1d1d1, 0x00515151, 0x00c0c0c0, 0x00f9f9f9,\r\n        0x00d2d2d2, 0x00a0a0a0, 0x00555555, 0x00a1a1a1, 0x00414141, 0x00fafafa,\r\n        0x00434343, 0x00131313, 0x00c4c4c4, 0x002f2f2f, 0x00a8a8a8, 0x00b6b6b6,\r\n        0x003c3c3c, 0x002b2b2b, 0x00c1c1c1, 0x00ffffff, 0x00c8c8c8, 0x00a5a5a5,\r\n        0x00202020, 0x00898989, 0x00000000, 0x00909090, 0x00474747, 0x00efefef,\r\n        0x00eaeaea, 0x00b7b7b7, 0x00151515, 0x00060606, 0x00cdcdcd, 0x00b5b5b5,\r\n        0x00121212, 0x007e7e7e, 0x00bbbbbb, 0x00292929, 0x000f0f0f, 0x00b8b8b8,\r\n        0x00070707, 0x00040404, 0x009b9b9b, 0x00949494, 0x00212121, 0x00666666,\r\n        0x00e6e6e6, 0x00cecece, 0x00ededed, 0x00e7e7e7, 0x003b3b3b, 0x00fefefe,\r\n        0x007f7f7f, 0x00c5c5c5, 0x00a4a4a4, 0x00373737, 0x00b1b1b1, 0x004c4c4c,\r\n        0x00919191, 0x006e6e6e, 0x008d8d8d, 0x00767676, 0x00030303, 0x002d2d2d,\r\n        0x00dedede, 0x00969696, 0x00262626, 0x007d7d7d, 0x00c6c6c6, 0x005c5c5c,\r\n        0x00d3d3d3, 0x00f2f2f2, 0x004f4f4f, 0x00191919, 0x003f3f3f, 0x00dcdcdc,\r\n        0x00797979, 0x001d1d1d, 0x00525252, 0x00ebebeb, 0x00f3f3f3, 0x006d6d6d,\r\n        0x005e5e5e, 0x00fbfbfb, 0x00696969, 0x00b2b2b2, 0x00f0f0f0, 0x00313131,\r\n        0x000c0c0c, 0x00d4d4d4, 0x00cfcfcf, 0x008c8c8c, 0x00e2e2e2, 0x00757575,\r\n        0x00a9a9a9, 0x004a4a4a, 0x00575757, 0x00848484, 0x00111111, 0x00454545,\r\n        0x001b1b1b, 0x00f5f5f5, 0x00e4e4e4, 0x000e0e0e, 0x00737373, 0x00aaaaaa,\r\n        0x00f1f1f1, 0x00dddddd, 0x00595959, 0x00141414, 0x006c6c6c, 0x00929292,\r\n        0x00545454, 0x00d0d0d0, 0x00787878, 0x00707070, 0x00e3e3e3, 0x00494949,\r\n        0x00808080, 0x00505050, 0x00a7a7a7, 0x00f6f6f6, 0x00777777, 0x00939393,\r\n        0x00868686, 0x00838383, 0x002a2a2a, 0x00c7c7c7, 0x005b5b5b, 0x00e9e9e9,\r\n        0x00eeeeee, 0x008f8f8f, 0x00010101, 0x003d3d3d\r\n    ]);\r\n\r\n    private SBOX3_3033 = new Uint32Array([\r\n        0x38003838, 0x41004141, 0x16001616, 0x76007676, 0xd900d9d9, 0x93009393,\r\n        0x60006060, 0xf200f2f2, 0x72007272, 0xc200c2c2, 0xab00abab, 0x9a009a9a,\r\n        0x75007575, 0x06000606, 0x57005757, 0xa000a0a0, 0x91009191, 0xf700f7f7,\r\n        0xb500b5b5, 0xc900c9c9, 0xa200a2a2, 0x8c008c8c, 0xd200d2d2, 0x90009090,\r\n        0xf600f6f6, 0x07000707, 0xa700a7a7, 0x27002727, 0x8e008e8e, 0xb200b2b2,\r\n        0x49004949, 0xde00dede, 0x43004343, 0x5c005c5c, 0xd700d7d7, 0xc700c7c7,\r\n        0x3e003e3e, 0xf500f5f5, 0x8f008f8f, 0x67006767, 0x1f001f1f, 0x18001818,\r\n        0x6e006e6e, 0xaf00afaf, 0x2f002f2f, 0xe200e2e2, 0x85008585, 0x0d000d0d,\r\n        0x53005353, 0xf000f0f0, 0x9c009c9c, 0x65006565, 0xea00eaea, 0xa300a3a3,\r\n        0xae00aeae, 0x9e009e9e, 0xec00ecec, 0x80008080, 0x2d002d2d, 0x6b006b6b,\r\n        0xa800a8a8, 0x2b002b2b, 0x36003636, 0xa600a6a6, 0xc500c5c5, 0x86008686,\r\n        0x4d004d4d, 0x33003333, 0xfd00fdfd, 0x66006666, 0x58005858, 0x96009696,\r\n        0x3a003a3a, 0x09000909, 0x95009595, 0x10001010, 0x78007878, 0xd800d8d8,\r\n        0x42004242, 0xcc00cccc, 0xef00efef, 0x26002626, 0xe500e5e5, 0x61006161,\r\n        0x1a001a1a, 0x3f003f3f, 0x3b003b3b, 0x82008282, 0xb600b6b6, 0xdb00dbdb,\r\n        0xd400d4d4, 0x98009898, 0xe800e8e8, 0x8b008b8b, 0x02000202, 0xeb00ebeb,\r\n        0x0a000a0a, 0x2c002c2c, 0x1d001d1d, 0xb000b0b0, 0x6f006f6f, 0x8d008d8d,\r\n        0x88008888, 0x0e000e0e, 0x19001919, 0x87008787, 0x4e004e4e, 0x0b000b0b,\r\n        0xa900a9a9, 0x0c000c0c, 0x79007979, 0x11001111, 0x7f007f7f, 0x22002222,\r\n        0xe700e7e7, 0x59005959, 0xe100e1e1, 0xda00dada, 0x3d003d3d, 0xc800c8c8,\r\n        0x12001212, 0x04000404, 0x74007474, 0x54005454, 0x30003030, 0x7e007e7e,\r\n        0xb400b4b4, 0x28002828, 0x55005555, 0x68006868, 0x50005050, 0xbe00bebe,\r\n        0xd000d0d0, 0xc400c4c4, 0x31003131, 0xcb00cbcb, 0x2a002a2a, 0xad00adad,\r\n        0x0f000f0f, 0xca00caca, 0x70007070, 0xff00ffff, 0x32003232, 0x69006969,\r\n        0x08000808, 0x62006262, 0x00000000, 0x24002424, 0xd100d1d1, 0xfb00fbfb,\r\n        0xba00baba, 0xed00eded, 0x45004545, 0x81008181, 0x73007373, 0x6d006d6d,\r\n        0x84008484, 0x9f009f9f, 0xee00eeee, 0x4a004a4a, 0xc300c3c3, 0x2e002e2e,\r\n        0xc100c1c1, 0x01000101, 0xe600e6e6, 0x25002525, 0x48004848, 0x99009999,\r\n        0xb900b9b9, 0xb300b3b3, 0x7b007b7b, 0xf900f9f9, 0xce00cece, 0xbf00bfbf,\r\n        0xdf00dfdf, 0x71007171, 0x29002929, 0xcd00cdcd, 0x6c006c6c, 0x13001313,\r\n        0x64006464, 0x9b009b9b, 0x63006363, 0x9d009d9d, 0xc000c0c0, 0x4b004b4b,\r\n        0xb700b7b7, 0xa500a5a5, 0x89008989, 0x5f005f5f, 0xb100b1b1, 0x17001717,\r\n        0xf400f4f4, 0xbc00bcbc, 0xd300d3d3, 0x46004646, 0xcf00cfcf, 0x37003737,\r\n        0x5e005e5e, 0x47004747, 0x94009494, 0xfa00fafa, 0xfc00fcfc, 0x5b005b5b,\r\n        0x97009797, 0xfe00fefe, 0x5a005a5a, 0xac00acac, 0x3c003c3c, 0x4c004c4c,\r\n        0x03000303, 0x35003535, 0xf300f3f3, 0x23002323, 0xb800b8b8, 0x5d005d5d,\r\n        0x6a006a6a, 0x92009292, 0xd500d5d5, 0x21002121, 0x44004444, 0x51005151,\r\n        0xc600c6c6, 0x7d007d7d, 0x39003939, 0x83008383, 0xdc00dcdc, 0xaa00aaaa,\r\n        0x7c007c7c, 0x77007777, 0x56005656, 0x05000505, 0x1b001b1b, 0xa400a4a4,\r\n        0x15001515, 0x34003434, 0x1e001e1e, 0x1c001c1c, 0xf800f8f8, 0x52005252,\r\n        0x20002020, 0x14001414, 0xe900e9e9, 0xbd00bdbd, 0xdd00dddd, 0xe400e4e4,\r\n        0xa100a1a1, 0xe000e0e0, 0x8a008a8a, 0xf100f1f1, 0xd600d6d6, 0x7a007a7a,\r\n        0xbb00bbbb, 0xe300e3e3, 0x40004040, 0x4f004f4f\r\n    ]);\r\n\r\n    private rightRotate(x: number, s: number): number {\r\n        return (((x) >>> (s)) + ((x) << (32 - s)));\r\n    }\r\n    private leftRotate(x: number, s: number): number {\r\n        return (((x) << (s)) + ((x) >>> (32 - s)));\r\n    }\r\n    private roldq(rot: number, ki: Uint32Array, ioff: number, ko: Uint32Array, ooff: number): void {\r\n        ko[0 + ooff] = (ki[0 + ioff] << rot) | (ki[1 + ioff] >>> (32 - rot));\r\n        ko[1 + ooff] = (ki[1 + ioff] << rot) | (ki[2 + ioff] >>> (32 - rot));\r\n        ko[2 + ooff] = (ki[2 + ioff] << rot) | (ki[3 + ioff] >>> (32 - rot));\r\n        ko[3 + ooff] = (ki[3 + ioff] << rot) | (ki[0 + ioff] >>> (32 - rot));\r\n        ki[0 + ioff] = ko[0 + ooff];\r\n        ki[1 + ioff] = ko[1 + ooff];\r\n        ki[2 + ioff] = ko[2 + ooff];\r\n        ki[3 + ioff] = ko[3 + ooff];\r\n    }\r\n    private decroldq(rot: number, ki: Uint32Array, ioff: number, ko: Uint32Array, ooff: number): void {\r\n        ko[2 + ooff] = (ki[0 + ioff] << rot) | (ki[1 + ioff] >>> (32 - rot));\r\n        ko[3 + ooff] = (ki[1 + ioff] << rot) | (ki[2 + ioff] >>> (32 - rot));\r\n        ko[0 + ooff] = (ki[2 + ioff] << rot) | (ki[3 + ioff] >>> (32 - rot));\r\n        ko[1 + ooff] = (ki[3 + ioff] << rot) | (ki[0 + ioff] >>> (32 - rot));\r\n        ki[0 + ioff] = ko[2 + ooff];\r\n        ki[1 + ioff] = ko[3 + ooff];\r\n        ki[2 + ioff] = ko[0 + ooff];\r\n        ki[3 + ioff] = ko[1 + ooff];\r\n    }\r\n    private roldqo32(rot: number, ki: Uint32Array, ioff: number, ko: Uint32Array, ooff: number): void {\r\n        ko[0 + ooff] = (ki[1 + ioff] << (rot - 32)) | (ki[2 + ioff] >>> (64 - rot));\r\n        ko[1 + ooff] = (ki[2 + ioff] << (rot - 32)) | (ki[3 + ioff] >>> (64 - rot));\r\n        ko[2 + ooff] = (ki[3 + ioff] << (rot - 32)) | (ki[0 + ioff] >>> (64 - rot));\r\n        ko[3 + ooff] = (ki[0 + ioff] << (rot - 32)) | (ki[1 + ioff] >>> (64 - rot));\r\n        ki[0 + ioff] = ko[0 + ooff];\r\n        ki[1 + ioff] = ko[1 + ooff];\r\n        ki[2 + ioff] = ko[2 + ooff];\r\n        ki[3 + ioff] = ko[3 + ooff];\r\n    }\r\n    private decroldqo32(rot: number, ki: Uint32Array, ioff: number, ko: Uint32Array, ooff: number): void {\r\n        ko[2 + ooff] = (ki[1 + ioff] << (rot - 32)) | (ki[2 + ioff] >>> (64 - rot));\r\n        ko[3 + ooff] = (ki[2 + ioff] << (rot - 32)) | (ki[3 + ioff] >>> (64 - rot));\r\n        ko[0 + ooff] = (ki[3 + ioff] << (rot - 32)) | (ki[0 + ioff] >>> (64 - rot));\r\n        ko[1 + ooff] = (ki[0 + ioff] << (rot - 32)) | (ki[1 + ioff] >>> (64 - rot));\r\n        ki[0 + ioff] = ko[2 + ooff];\r\n        ki[1 + ioff] = ko[3 + ooff];\r\n        ki[2 + ioff] = ko[0 + ooff];\r\n        ki[3 + ioff] = ko[1 + ooff];\r\n    }\r\n    private bytes2int(src: Uint32Array | Uint8Array, offset: number): number {\r\n        var word = new Uint32Array(1);\r\n        for (var i = 0; i < 4; i++) {\r\n            {\r\n                word[0] = (word[0] << 8) + (src[i + offset] & this.MASK8);\r\n            }\r\n            ;\r\n        }\r\n        return word[0];\r\n    }\r\n\r\n    private int2bytes(word: number, dst: Uint32Array | Uint8Array, offset: number): void {\r\n        for (var i = 0; i < 4; i++) {\r\n            {\r\n                dst[(3 - i) + offset] = (word | 0);\r\n                word >>>= 8;\r\n            }\r\n            ;\r\n        }\r\n    }\r\n\r\n    private camelliaF2(s: Uint32Array, skey: Uint32Array, keyoff: number): void {\r\n        var t1: number;\r\n        var t2: number;\r\n        var u: number;\r\n        var v: number;\r\n        t1 = s[0] ^ skey[0 + keyoff];\r\n        u = this.SBOX4_4404[t1 & this.MASK8];\r\n        u ^= this.SBOX3_3033[(t1 >>> 8) & this.MASK8];\r\n        u ^= this.SBOX2_0222[(t1 >>> 16) & this.MASK8];\r\n        u ^= this.SBOX1_1110[(t1 >>> 24) & this.MASK8];\r\n        t2 = s[1] ^ skey[1 + keyoff];\r\n        v = this.SBOX1_1110[t2 & this.MASK8];\r\n        v ^= this.SBOX4_4404[(t2 >>> 8) & this.MASK8];\r\n        v ^= this.SBOX3_3033[(t2 >>> 16) & this.MASK8];\r\n        v ^= this.SBOX2_0222[(t2 >>> 24) & this.MASK8];\r\n        s[2] ^= u ^ v;\r\n        s[3] ^= u ^ v ^ this.rightRotate(u, 8);\r\n        t1 = s[2] ^ skey[2 + keyoff];\r\n        u = this.SBOX4_4404[t1 & this.MASK8];\r\n        u ^= this.SBOX3_3033[(t1 >>> 8) & this.MASK8];\r\n        u ^= this.SBOX2_0222[(t1 >>> 16) & this.MASK8];\r\n        u ^= this.SBOX1_1110[(t1 >>> 24) & this.MASK8];\r\n        t2 = s[3] ^ skey[3 + keyoff];\r\n        v = this.SBOX1_1110[t2 & this.MASK8];\r\n        v ^= this.SBOX4_4404[(t2 >>> 8) & this.MASK8];\r\n        v ^= this.SBOX3_3033[(t2 >>> 16) & this.MASK8];\r\n        v ^= this.SBOX2_0222[(t2 >>> 24) & this.MASK8];\r\n        s[0] ^= u ^ v;\r\n        s[1] ^= u ^ v ^ this.rightRotate(u, 8);\r\n    }\r\n\r\n    private camelliaFLs(s: Uint32Array | Uint8Array, fkey: Uint32Array | Uint8Array, keyoff: number): void {\r\n        s[1] ^= this.leftRotate(s[0] & fkey[0 + keyoff], 1);\r\n        s[0] ^= fkey[1 + keyoff] | s[1];\r\n        s[2] ^= fkey[3 + keyoff] | s[3];\r\n        s[3] ^= this.leftRotate(fkey[2 + keyoff] & s[2], 1);\r\n    }\r\n\r\n    private setkey(forEncryption: boolean, key: Uint32Array): void {\r\n        var k = new Uint32Array(8);\r\n        var ka = new Uint32Array(4);\r\n        var kb = new Uint32Array(4);\r\n        var t = new Uint32Array(4);\r\n        switch ((key.length)) {\r\n            case 16:\r\n                this._keyis128 = true;\r\n                k[0] = this.bytes2int(key, 0);\r\n                k[1] = this.bytes2int(key, 4);\r\n                k[2] = this.bytes2int(key, 8);\r\n                k[3] = this.bytes2int(key, 12);\r\n                k[4] = k[5] = k[6] = k[7] = 0;\r\n                break;\r\n            case 24:\r\n                k[0] = this.bytes2int(key, 0);\r\n                k[1] = this.bytes2int(key, 4);\r\n                k[2] = this.bytes2int(key, 8);\r\n                k[3] = this.bytes2int(key, 12);\r\n                k[4] = this.bytes2int(key, 16);\r\n                k[5] = this.bytes2int(key, 20);\r\n                k[6] = ~k[4];\r\n                k[7] = ~k[5];\r\n                this._keyis128 = false;\r\n                break;\r\n            case 32:\r\n                k[0] = this.bytes2int(key, 0);\r\n                k[1] = this.bytes2int(key, 4);\r\n                k[2] = this.bytes2int(key, 8);\r\n                k[3] = this.bytes2int(key, 12);\r\n                k[4] = this.bytes2int(key, 16);\r\n                k[5] = this.bytes2int(key, 20);\r\n                k[6] = this.bytes2int(key, 24);\r\n                k[7] = this.bytes2int(key, 28);\r\n                this._keyis128 = false;\r\n                break;\r\n            default:\r\n                throw Error(\"key sizes are only 16/24/32 bytes.\");\r\n        }\r\n        for (var i = 0; i < 4; i++) {\r\n            {\r\n                ka[i] = k[i] ^ k[i + 4];\r\n            }\r\n            ;\r\n        }\r\n        this.camelliaF2(ka, this.SIGMA, 0);\r\n        for (var i = 0; i < 4; i++) {\r\n            {\r\n                ka[i] ^= k[i];\r\n            }\r\n            ;\r\n        }\r\n        this.camelliaF2(ka, this.SIGMA, 4);\r\n        if (this._keyis128) {\r\n            if (forEncryption) {\r\n                this.kw[0] = k[0];\r\n                this.kw[1] = k[1];\r\n                this.kw[2] = k[2];\r\n                this.kw[3] = k[3];\r\n                this.roldq(15, k, 0, this.subkey, 4);\r\n                this.roldq(30, k, 0, this.subkey, 12);\r\n                this.roldq(15, k, 0, t, 0);\r\n                this.subkey[18] = t[2];\r\n                this.subkey[19] = t[3];\r\n                this.roldq(17, k, 0, this.ke, 4);\r\n                this.roldq(17, k, 0, this.subkey, 24);\r\n                this.roldq(17, k, 0, this.subkey, 32);\r\n                this.subkey[0] = ka[0];\r\n                this.subkey[1] = ka[1];\r\n                this.subkey[2] = ka[2];\r\n                this.subkey[3] = ka[3];\r\n                this.roldq(15, ka, 0, this.subkey, 8);\r\n                this.roldq(15, ka, 0, this.ke, 0);\r\n                this.roldq(15, ka, 0, t, 0);\r\n                this.subkey[16] = t[0];\r\n                this.subkey[17] = t[1];\r\n                this.roldq(15, ka, 0, this.subkey, 20);\r\n                this.roldqo32(34, ka, 0, this.subkey, 28);\r\n                this.roldq(17, ka, 0, this.kw, 4);\r\n            } else {\r\n                this.kw[4] = k[0];\r\n                this.kw[5] = k[1];\r\n                this.kw[6] = k[2];\r\n                this.kw[7] = k[3];\r\n                this.decroldq(15, k, 0, this.subkey, 28);\r\n                this.decroldq(30, k, 0, this.subkey, 20);\r\n                this.decroldq(15, k, 0, t, 0);\r\n                this.subkey[16] = t[0];\r\n                this.subkey[17] = t[1];\r\n                this.decroldq(17, k, 0, this.ke, 0);\r\n                this.decroldq(17, k, 0, this.subkey, 8);\r\n                this.decroldq(17, k, 0, this.subkey, 0);\r\n                this.subkey[34] = ka[0];\r\n                this.subkey[35] = ka[1];\r\n                this.subkey[32] = ka[2];\r\n                this.subkey[33] = ka[3];\r\n                this.decroldq(15, ka, 0, this.subkey, 24);\r\n                this.decroldq(15, ka, 0, this.ke, 4);\r\n                this.decroldq(15, ka, 0, t, 0);\r\n                this.subkey[18] = t[2];\r\n                this.subkey[19] = t[3];\r\n                this.decroldq(15, ka, 0, this.subkey, 12);\r\n                this.decroldqo32(34, ka, 0, this.subkey, 4);\r\n                this.roldq(17, ka, 0, this.kw, 0);\r\n            }\r\n        } else {\r\n            for (var i = 0; i < 4; i++) {\r\n                {\r\n                    kb[i] = ka[i] ^ k[i + 4];\r\n                }\r\n                ;\r\n            }\r\n            this.camelliaF2(kb, this.SIGMA, 8);\r\n            if (forEncryption) {\r\n                this.kw[0] = k[0];\r\n                this.kw[1] = k[1];\r\n                this.kw[2] = k[2];\r\n                this.kw[3] = k[3];\r\n                this.roldqo32(45, k, 0, this.subkey, 16);\r\n                this.roldq(15, k, 0, this.ke, 4);\r\n                this.roldq(17, k, 0, this.subkey, 32);\r\n                this.roldqo32(34, k, 0, this.subkey, 44);\r\n                this.roldq(15, k, 4, this.subkey, 4);\r\n                this.roldq(15, k, 4, this.ke, 0);\r\n                this.roldq(30, k, 4, this.subkey, 24);\r\n                this.roldqo32(34, k, 4, this.subkey, 36);\r\n                this.roldq(15, ka, 0, this.subkey, 8);\r\n                this.roldq(30, ka, 0, this.subkey, 20);\r\n                this.ke[8] = ka[1];\r\n                this.ke[9] = ka[2];\r\n                this.ke[10] = ka[3];\r\n                this.ke[11] = ka[0];\r\n                this.roldqo32(49, ka, 0, this.subkey, 40);\r\n                this.subkey[0] = kb[0];\r\n                this.subkey[1] = kb[1];\r\n                this.subkey[2] = kb[2];\r\n                this.subkey[3] = kb[3];\r\n                this.roldq(30, kb, 0, this.subkey, 12);\r\n                this.roldq(30, kb, 0, this.subkey, 28);\r\n                this.roldqo32(51, kb, 0, this.kw, 4);\r\n            }\r\n            else {\r\n                this.kw[4] = k[0];\r\n                this.kw[5] = k[1];\r\n                this.kw[6] = k[2];\r\n                this.kw[7] = k[3];\r\n                this.decroldqo32(45, k, 0, this.subkey, 28);\r\n                this.decroldq(15, k, 0, this.ke, 4);\r\n                this.decroldq(17, k, 0, this.subkey, 12);\r\n                this.decroldqo32(34, k, 0, this.subkey, 0);\r\n                this.decroldq(15, k, 4, this.subkey, 40);\r\n                this.decroldq(15, k, 4, this.ke, 8);\r\n                this.decroldq(30, k, 4, this.subkey, 20);\r\n                this.decroldqo32(34, k, 4, this.subkey, 8);\r\n                this.decroldq(15, ka, 0, this.subkey, 36);\r\n                this.decroldq(30, ka, 0, this.subkey, 24);\r\n                this.ke[2] = ka[1];\r\n                this.ke[3] = ka[2];\r\n                this.ke[0] = ka[3];\r\n                this.ke[1] = ka[0];\r\n                this.decroldqo32(49, ka, 0, this.subkey, 4);\r\n                this.subkey[46] = kb[0];\r\n                this.subkey[47] = kb[1];\r\n                this.subkey[44] = kb[2];\r\n                this.subkey[45] = kb[3];\r\n                this.decroldq(30, kb, 0, this.subkey, 32);\r\n                this.decroldq(30, kb, 0, this.subkey, 16);\r\n                this.roldqo32(51, kb, 0, this.kw, 0);\r\n            }\r\n        }\r\n        this.initialized = true;\r\n    };\r\n\r\n    /**\r\n     * IV for CBC encryption.\r\n     *\r\n     * Must be 16 bytes!\r\n     * \r\n     * @param {Buffer} iv - ```Buffer```\r\n     */\r\n    set_iv(iv: Buffer): void {\r\n        if (iv.length != 16) {\r\n            throw Error(\"IV must be 16 bytes long\");\r\n        }\r\n        this.iv = iv;\r\n        this.iv_set = true;\r\n    };\r\n\r\n    /**\r\n     * Key for encryption.\r\n     *\r\n     * Only lengths of 16, 24 or 32 bytes allowed!\r\n     * \r\n     * @param {Buffer} key - ```Buffer``` \r\n     */\r\n    set_key(key: Buffer): void {\r\n        switch ((key.length)) {\r\n            case 16:\r\n                this._keyis128 = true;\r\n                break;\r\n            case 24:\r\n                this._keyis128 = false;\r\n                break;\r\n            case 32:\r\n                this._keyis128 = false;\r\n                break;\r\n            default:\r\n                throw Error(\"key sizes are only 16/24/32 bytes.\");\r\n        }\r\n        this.key = key;\r\n        this.key_set = true;\r\n    };\r\n\r\n    encrypt_block(block: Buffer, last_block?: boolean){\r\n        if(!this.initialized){\r\n            this.setkey(true, this.key);\r\n        }\r\n        if(last_block){\r\n            block = padd_block(block) as Buffer;\r\n        }\r\n        if (this.iv_set == true) {\r\n            block = xor(block, this.iv) as Buffer;\r\n        }\r\n        const return_block = this.processBlock(block);\r\n        if (this.iv_set == true) {\r\n            this.iv = return_block;\r\n        }\r\n        return return_block;\r\n    };\r\n\r\n    decrypt_block(block: Buffer, last_block?: boolean){\r\n        if(!this.initialized){\r\n            this.setkey(false, this.key);\r\n        }\r\n        if (this.iv_set == true) {\r\n            if (this.previous_block != undefined) {\r\n                this.iv = this.previous_block;\r\n            }\r\n        }\r\n        this.previous_block = block;\r\n        var return_block = this.processBlock(block);\r\n        if (this.iv_set == true) {\r\n            return_block = xor(return_block, this.iv);\r\n        }\r\n        if(last_block){\r\n            var padd_value = align(return_block.length, 16);\r\n            return removePKCSPadding(return_block, padd_value, true);\r\n        }\r\n        return return_block;\r\n    };\r\n\r\n    /**\r\n     * If IV is not set, runs in ECB mode.\r\n     * \r\n     * If IV was set, runs in CBC mode.\r\n     * \r\n     * If padding number is not set, uses PKCS padding.\r\n     *\r\n     * @param {Buffer} data_in - ```Buffer```\r\n     * @param {number} padding - ```number``` defaults to 0 for PKCS or can use a value\r\n     * @returns ```Buffer```\r\n     */\r\n    encrypt(data_in: Buffer, padding: number = 0) {\r\n        if (this.key_set != true) {\r\n            throw Error(\"Please set key first\");\r\n        }\r\n        this.setkey(true, this.key);\r\n        const block_size = 16;\r\n        var data = data_in;\r\n        var padd_value = padding;\r\n        const return_buff: any[] = [];\r\n        if (data.length % block_size != 0) {\r\n            var to_padd = block_size - (data.length % block_size);\r\n            if (padding == 0) {\r\n                padd_value = to_padd;\r\n            }\r\n            var paddbuffer = Buffer.alloc(to_padd, padd_value & 0xFF);\r\n            data = Buffer.concat([data_in as Buffer, paddbuffer]);\r\n        }\r\n        for (let index = 0; index < data.length / block_size; index++) {\r\n            var block = data.subarray((index * block_size), (index + 1) * block_size);\r\n            if (this.iv_set == true) {\r\n                block = xor(block, this.iv);\r\n            }\r\n            const return_block = this.processBlock(block);\r\n            if (this.iv_set == true) {\r\n                this.iv = return_block;\r\n            }\r\n            return_buff.push(return_block);\r\n        }\r\n        var final_buffer = Buffer.concat(return_buff);\r\n        this.iv_set = false;\r\n        return final_buffer;\r\n    };\r\n\r\n    /**\r\n     * If IV is not set, runs in ECB mode.\r\n     * \r\n     * If IV was set, runs in CBC mode.\r\n     * \r\n     * If remove_padding is ``number``, will check the last block and remove padded number.\r\n     * \r\n     * If remove_padding is ``true``, will remove PKCS padding on last block.\r\n     *\r\n     * @param {Buffer} data_in - ```Buffer```\r\n     * @param {boolean|number} remove_padding - Will check the last block and remove padded ``number``. Will remove PKCS if ``true``\r\n     * @returns ```Buffer```\r\n     */\r\n    decrypt(data_in: Buffer, remove_padding: boolean | number = true): Buffer {\r\n        if (this.key_set != true) {\r\n            throw Error(\"Please set key first\");\r\n        }\r\n        this.setkey(false, this.key);\r\n        const block_size = 16;\r\n        var data = data_in;\r\n        var padd_value = align(data.length, block_size);\r\n        if (typeof remove_padding == 'number') {\r\n            padd_value = remove_padding & 0xFF;\r\n        }\r\n        const return_buff: any[] = [];\r\n        if (data.length % block_size != 0) {\r\n            var to_padd = block_size - (data.length % block_size);\r\n            var paddbuffer = Buffer.alloc(to_padd, padd_value & 0xFF);\r\n            data = Buffer.concat([data_in as Buffer, paddbuffer]);\r\n        }\r\n        for (let index = 0, amount = Math.ceil(data.length / block_size); index < amount; index++) {\r\n            var block = data.subarray((index * block_size), (index + 1) * block_size);\r\n            if (this.iv_set == true) {\r\n                if (this.previous_block != undefined) {\r\n                    this.iv = this.previous_block;\r\n                }\r\n            }\r\n            this.previous_block = block;\r\n            var return_block = this.processBlock(block);\r\n            if (this.iv_set == true) {\r\n                return_block = xor(return_block, this.iv);\r\n            }\r\n            if ((remove_padding != false ) && (index == (amount - 1))) {\r\n                return_block = removePKCSPadding(return_block, padd_value, remove_padding);\r\n                return_buff.push(return_block);\r\n            } else {\r\n                return_buff.push(return_block);\r\n            }\r\n        }\r\n        var final_buffer = Buffer.concat(return_buff);\r\n        this.iv_set = false;\r\n        return final_buffer;\r\n    };\r\n\r\n    private processBlock(__in: Buffer): Buffer {\r\n        if (!this.initialized) {\r\n            throw Error(\"Camellia is not initialized\");\r\n        }\r\n        if (this._keyis128) {\r\n            return this.processBlock128(__in);\r\n        }\r\n        else {\r\n            return this.processBlock192or256(__in);\r\n        }\r\n    };\r\n\r\n    private processBlock128(__in: Buffer): Buffer {\r\n        for (var i = 0; i < 4; i++) {\r\n            {\r\n                this.state[i] = this.bytes2int(__in, (i * 4));\r\n                this.state[i] ^= this.kw[i];\r\n            }\r\n            ;\r\n        }\r\n        this.camelliaF2(this.state, this.subkey, 0);\r\n        this.camelliaF2(this.state, this.subkey, 4);\r\n        this.camelliaF2(this.state, this.subkey, 8);\r\n        this.camelliaFLs(this.state, this.ke, 0);\r\n        this.camelliaF2(this.state, this.subkey, 12);\r\n        this.camelliaF2(this.state, this.subkey, 16);\r\n        this.camelliaF2(this.state, this.subkey, 20);\r\n        this.camelliaFLs(this.state, this.ke, 4);\r\n        this.camelliaF2(this.state, this.subkey, 24);\r\n        this.camelliaF2(this.state, this.subkey, 28);\r\n        this.camelliaF2(this.state, this.subkey, 32);\r\n        this.state[2] ^= this.kw[4];\r\n        this.state[3] ^= this.kw[5];\r\n        this.state[0] ^= this.kw[6];\r\n        this.state[1] ^= this.kw[7];\r\n        var out = Buffer.alloc(16);\r\n        this.int2bytes(this.state[2], out, 0);\r\n        this.int2bytes(this.state[3], out, 4);\r\n        this.int2bytes(this.state[0], out, 8);\r\n        this.int2bytes(this.state[1], out, 12);\r\n        return out;\r\n    };\r\n\r\n    private processBlock192or256(__in: Buffer): Buffer {\r\n        for (var i = 0; i < 4; i++) {\r\n            {\r\n                this.state[i] = this.bytes2int(__in, (i * 4));\r\n                this.state[i] ^= this.kw[i];\r\n            }\r\n            ;\r\n        }\r\n        this.camelliaF2(this.state, this.subkey, 0);\r\n        this.camelliaF2(this.state, this.subkey, 4);\r\n        this.camelliaF2(this.state, this.subkey, 8);\r\n        this.camelliaFLs(this.state, this.ke, 0);\r\n        this.camelliaF2(this.state, this.subkey, 12);\r\n        this.camelliaF2(this.state, this.subkey, 16);\r\n        this.camelliaF2(this.state, this.subkey, 20);\r\n        this.camelliaFLs(this.state, this.ke, 4);\r\n        this.camelliaF2(this.state, this.subkey, 24);\r\n        this.camelliaF2(this.state, this.subkey, 28);\r\n        this.camelliaF2(this.state, this.subkey, 32);\r\n        this.camelliaFLs(this.state, this.ke, 8);\r\n        this.camelliaF2(this.state, this.subkey, 36);\r\n        this.camelliaF2(this.state, this.subkey, 40);\r\n        this.camelliaF2(this.state, this.subkey, 44);\r\n        this.state[2] ^= this.kw[4];\r\n        this.state[3] ^= this.kw[5];\r\n        this.state[0] ^= this.kw[6];\r\n        this.state[1] ^= this.kw[7];\r\n        var out = Buffer.alloc(16);\r\n        this.int2bytes(this.state[2], out, 0);\r\n        this.int2bytes(this.state[3], out, 4);\r\n        this.int2bytes(this.state[0], out, 8);\r\n        this.int2bytes(this.state[1], out, 12);\r\n        return out;\r\n    };\r\n};","import { BiReader, BiReaderStream, BiWriter, BiWriterStream } from \"bireader\";\r\nimport { JPEncode } from './encode.js';\r\nimport { JPDecode } from './decode.js';\r\n\r\n/**\r\n * Example number type to register the extension between 0x00 - 0xCF.\r\n * \r\n * 0xDO - 0xFF are reserved for internal use.\r\n */\r\nconst DATE_EXT_TYPE = 0xFF;\r\n\r\n/**\r\n * Example encoding function\r\n * \r\n * @param {unknown} input - Your object to type check and encode\r\n * @param {JPEncode<ContextType>} encoder - class encoder\r\n * @param {ContextType} context - Context of the class (shouldn't be needed)\r\n * @returns {Buffer|null}\r\n */\r\nfunction encodeTimestampExtension<ContextType = undefined>(\r\n  input: unknown,\r\n  encoder: JPEncode<ContextType>,\r\n  context: ContextType): Buffer | null {\r\n  // check if the input is the same type, else return null\r\n  // here we are converting a Date object into a Buffer\r\n  if (!(input instanceof Date)) {\r\n    return null;\r\n  } else {\r\n    // now convert the data into a Buffer\r\n    const TIMESTAMP32_MAX_SEC = 0x100000000 - 1; // 32-bit unsigned int\r\n\r\n    const TIMESTAMP64_MAX_SEC = 0x400000000 - 1; // 34-bit unsigned int\r\n\r\n    const msec = input.getTime();\r\n\r\n    const _sec = Math.floor(msec / 1e3);\r\n\r\n    const _nsec = (msec - _sec * 1e3) * 1e6;\r\n    // Normalizes { sec, nsec } to ensure nsec is unsigned.\r\n    const nsecInSec = Math.floor(_nsec / 1e9);\r\n\r\n    const sec = _sec + nsecInSec;\r\n\r\n    const nsec = _nsec - nsecInSec * 1e9;\r\n    // Recommend use is a BiWriter for creating Buffer data\r\n    const bw = new BiWriter(Buffer.alloc(12));\r\n\r\n    bw.endian = encoder.endian;\r\n\r\n    if (sec >= 0 && nsec >= 0 && sec <= TIMESTAMP64_MAX_SEC) {\r\n      // Here sec >= 0 && nsec >= 0\r\n      if (nsec === 0 && sec <= TIMESTAMP32_MAX_SEC) {\r\n        // timestamp 32 = { sec32 (unsigned) }\r\n        bw.uint32 = sec;\r\n\r\n        bw.trim();\r\n\r\n        return bw.return as Buffer;\r\n      } else {\r\n        // timestamp 64 = { nsec30 (unsigned), sec34 (unsigned) }\r\n        const secHigh = sec / 0x100000000;\r\n\r\n        const secLow = sec & 0xffffffff;\r\n        // nsec30 | secHigh2\r\n        bw.uint32 = (nsec << 2) | (secHigh & 0x3);\r\n        // secLow32\r\n        bw.uint32 = secLow;\r\n\r\n        bw.trim();\r\n\r\n        return bw.return as Buffer;\r\n      }\r\n    } else {\r\n      // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\r\n      bw.uint32 = nsec;\r\n\r\n      bw.int64 = BigInt(sec);\r\n\r\n      bw.trim();\r\n\r\n      return bw.return as Buffer;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Example decoding function\r\n * \r\n * @param {BiReader | BiReaderStream} data - BiReader of buffer data.\r\n * @param {JPDecode<ContextType>} decoder - class decoder\r\n * @param {number} extensionType - Registered extension number between 0x00 - 0xCF (for dummy checks)\r\n * @param {ContextType} context - Context of the class (shouldn't be needed)\r\n * @returns {Date}\r\n */\r\nfunction decodeTimestampExtension<ContextType = undefined>(\r\n  data: BiReader | BiReaderStream,\r\n  decoder: JPDecode<ContextType>,\r\n  extensionType: number,\r\n  context: ContextType): Date {\r\n    // check if the type matches\r\n    if (extensionType != DATE_EXT_TYPE) {\r\n      throw new Error(`Extension for Date encoding 0x${extensionType.toString(16).padStart(2, \"0\")} does not match register type 0x${DATE_EXT_TYPE.toString(16).padStart(2, \"0\")}`);\r\n    }\r\n    // data may be 32, 64, or 96 bits\r\n    switch (data.size) {\r\n      case 4: {\r\n        // timestamp 32 = { sec32 }\r\n        const sec = data.uint32le;\r\n\r\n        const nsec = 0;\r\n\r\n        return new Date(sec * 1e3 + nsec / 1e6);\r\n      }\r\n      case 8: {\r\n        // timestamp 64 = { nsec30, sec34 }\r\n        const nsec30AndSecHigh2 = data.uint32le;\r\n\r\n        const secLow32 = data.uint32le;\r\n\r\n        const sec = (nsec30AndSecHigh2 & 0x3) * 0x100000000 + secLow32;\r\n\r\n        const nsec = nsec30AndSecHigh2 >>> 2;\r\n\r\n        return new Date(sec * 1e3 + nsec / 1e6);\r\n      }\r\n      case 12: {\r\n        // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\r\n        const nsec = data.uint32le;\r\n\r\n        const sec = Number(data.int64le);\r\n\r\n        return new Date(sec * 1e3 + nsec / 1e6);\r\n      }\r\n      default:\r\n        throw new Error(`Unrecognized data size for timestamp (expected 4, 8, or 12): ${data.size}`);\r\n    }\r\n};\r\n\r\n/**\r\n * Example object passed to `JPExtensionCodec.register`\r\n */\r\nexport const timestampExtension: JPExtensionType = {\r\n  type: DATE_EXT_TYPE,\r\n  encode: encodeTimestampExtension,\r\n  decode: decodeTimestampExtension,\r\n};\r\n\r\nexport class JPExtData {\r\n  readonly type: number;\r\n\r\n  readonly data: Buffer;\r\n\r\n  constructor(type: number, data: Buffer) {\r\n    this.type = type;\r\n    this.data = data;\r\n  }\r\n};\r\n\r\nexport type JPExtensionDecoderType<ContextType> = (\r\n  data: BiReader | BiReaderStream,\r\n  decoder: JPDecode<ContextType>,\r\n  type: number,\r\n  context: ContextType,\r\n) => unknown;\r\n\r\nexport type JPExtensionEncoderType<ContextType> = (\r\n  input: unknown,\r\n  encoder: JPEncode<ContextType>,\r\n  context: ContextType,\r\n) => Buffer | null;\r\n\r\nexport type JPExtensionCodecType<ContextType> = {\r\n  // eslint-disable-next-line @typescript-eslint/naming-convention\r\n  __brand?: ContextType;\r\n  tryToEncode(object: unknown, encoder: JPEncode<ContextType>, context: ContextType,): JPExtData | null;\r\n  decode(data: BiReader | BiReaderStream, decoder: JPDecode<ContextType>, type:number, context: ContextType): unknown;\r\n};\r\n\r\nexport type JPExtensionType<ContextType = undefined> = {\r\n  /**\r\n   * Number type to register the extension between 0x00 - 0xCF.\r\n   * \r\n   * 0xDO - 0xFF are reserved for internal use.\r\n   */\r\n  type: number;\r\n  /**\r\n   * Encoding function\r\n   * \r\n   * @param {unknown} input - Your object to type check and encode\r\n   * @param {JPEncode<ContextType>} encoder - class encoder\r\n   * @param {ContextType} context - Context of the class (shouldn't be needed)\r\n   * @returns `Buffer|null`\r\n   */\r\n  encode: JPExtensionEncoderType<ContextType>;\r\n  /**\r\n   * Decoding function\r\n   * \r\n   * @param {BiReader | BiReaderStream} data - BiReader of buffer data.\r\n   * @param {JPDecode<ContextType>} decoder - class decoder\r\n   * @param {number} extensionType - Registered extension number between 0x00 - 0xCF (for dummy checks)\r\n   * @param {ContextType} context - Context of the class (shouldn't be needed)\r\n   * @returns `YourType`\r\n   */\r\n  decode: JPExtensionDecoderType<ContextType>;\r\n};\r\n\r\nexport class JPExtensionCodec<ContextType = undefined> implements JPExtensionCodecType<ContextType> {\r\n  public static readonly defaultCodec: JPExtensionCodecType<undefined> = new JPExtensionCodec();\r\n  // ensures ExtensionCodecType<X> matches ExtensionCodec<X>\r\n  // this will make type errors a lot more clear\r\n  // eslint-disable-next-line @typescript-eslint/naming-convention\r\n  __brand?: ContextType;\r\n\r\n  // custom extensions\r\n  private readonly encoders: Array<JPExtensionEncoderType<ContextType> | undefined | null> = [];\r\n\r\n  private readonly decoders: Array<JPExtensionDecoderType<ContextType> | undefined | null> = [];\r\n\r\n  public constructor(extension?: JPExtensionType) {\r\n    if(extension){\r\n      this.register(extension);\r\n    }\r\n  };\r\n\r\n  public register(extension: JPExtensionType): void {\r\n    // custom extensions\r\n    if ((extension.type < 0 || extension.type > 0xCF)) {\r\n      throw new Error(`Type EXT number is outside of allowed range (0x0 - 0xCF but got 0x${extension.type.toString(16).padStart(2, \"0\")})`);\r\n    }\r\n    this.encoders[extension.type] = extension.encode;\r\n\r\n    this.decoders[extension.type] = extension.decode;\r\n  };\r\n\r\n  public tryToEncode(object: unknown, encoder: JPEncode<ContextType>, context: ContextType): JPExtData | null {\r\n    // custom extensions\r\n    for (let i = 0; i < this.encoders.length; i++) {\r\n      const encodeExt = this.encoders[i];\r\n\r\n      if (encodeExt != null) {\r\n        const data = encodeExt(object, encoder, context);\r\n        if (data != null) {\r\n          const type = i;\r\n\r\n          return new JPExtData(type, data);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (object instanceof JPExtData) {\r\n      // to keep ExtData as is\r\n      return object;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  public decode(data: BiReader | BiReaderStream, decoder: JPDecode<ContextType>, type:number, context: ContextType): unknown {\r\n    const decodeExt = this.decoders[type];\r\n\r\n    if (decodeExt) {\r\n      return decodeExt(data, decoder, type, context);\r\n    } else {\r\n      // decode() does not fail, returns ExtData instead.\r\n      return new JPExtData(type, data.data as Buffer);\r\n    }\r\n  }\r\n};","import zlib from 'zlib';\r\nimport { constants as bufferConstants } from \"node:buffer\";\r\nimport {\r\n    BiReader,\r\n    BiWriter,\r\n    BiReaderStream,\r\n    BiWriterStream,\r\n} from 'bireader';\r\nimport pack from '../package.json';\r\n\r\ntype reader = BiReader | BiReaderStream | BiWriter | BiWriterStream;\r\n\r\n/**\r\n * Get build version string.\r\n * \r\n * @returns {{VERSION_MAJOR: ubyte, VERSION_MINOR: ubyte}}\r\n */\r\nfunction GetVer(): { VERSION_MAJOR: ubyte, VERSION_MINOR: ubyte } {\r\n    const ver = /(\\d+)(\\.)(\\d+)(\\.)(\\d+)/g.exec(pack.version);\r\n\r\n    return {\r\n        VERSION_MAJOR: parseInt(ver ? ver[1] : \"0\"),\r\n\r\n        VERSION_MINOR: parseInt(ver ? ver[3] : \"0\"),\r\n    };\r\n};\r\n\r\nexport const {\r\n    /**\r\n     * Build verion number to check the file creation params\r\n     */\r\n    VERSION_MAJOR,\r\n    /**\r\n     * Build verion number to check the file creation params\r\n     */\r\n    VERSION_MINOR\r\n} = GetVer();\r\n\r\n/**\r\n * Build verion number to check the file creation params\r\n */\r\nexport const VERSION_NUMBER: float32 = parseFloat(`${VERSION_MAJOR}.${VERSION_MINOR}`);\r\n\r\n/**\r\n * Max Buffer size.\r\n * \r\n * @returns {number}\r\n */\r\nfunction MAX_LENGTH(): number {\r\n    return bufferConstants.MAX_LENGTH;\r\n};\r\n\r\n/**\r\n * Max Buffer size for this system.\r\n */\r\nexport const MAX_BUFFER = MAX_LENGTH() || 0x100000000;\r\n\r\nexport function isFloat32Safe(value: number): boolean {\r\n    if (!Number.isFinite(value)) return true; // Infinity, -Infinity, NaN all store fine\r\n\r\n    const f32 = new Float32Array(1);\r\n\r\n    f32[0] = value;\r\n\r\n    return f32[0] === value;\r\n}\r\n\r\n/**\r\n * 512kb zip chunks\r\n */\r\nconst CHUNK_SIZE = 512 * 1024;\r\n\r\n/**\r\n * Compress a file using Deflate, framed with [length][chunk] blocks.\r\n */\r\nexport function deflateFileSync(inWriter: BiWriterStream, outWriter: BiWriterStream): void {\r\n    inWriter.open();\r\n\r\n    outWriter.open();\r\n\r\n    let bytesToProcess = inWriter.size;\r\n\r\n    let bytesStart = 0;\r\n\r\n    let bytesRead = 0;\r\n\r\n    do {\r\n        bytesRead = Math.min(CHUNK_SIZE, bytesToProcess);\r\n\r\n        if (bytesRead > 0) {\r\n            const chunk = inWriter.read(bytesStart, bytesRead, true);\r\n\r\n            const compressed = zlib.deflateSync(chunk);\r\n\r\n            outWriter.uint32le = compressed.length;\r\n\r\n            outWriter.overwrite(compressed, true);\r\n\r\n            bytesToProcess -= bytesRead;\r\n\r\n            bytesStart += bytesRead;\r\n        }\r\n    } while (bytesRead === CHUNK_SIZE);\r\n};\r\n\r\n/**\r\n * Decompress a framed deflate-compressed file.\r\n */\r\nexport function inflateFileSync(inReader: BiReaderStream, outWriter: BiWriterStream): void {\r\n    inReader.open();\r\n\r\n    outWriter.open();\r\n\r\n    let bytesToProcess = inReader.size;\r\n\r\n    let bytesStart = 0;\r\n\r\n    let bytesRead = 0;\r\n\r\n    do {\r\n        bytesRead = inReader.uint32;\r\n\r\n        bytesStart += 4;\r\n\r\n        if (bytesRead > 0) {\r\n            const chunk = inReader.read(bytesStart, bytesRead, true);\r\n\r\n            bytesToProcess -= chunk.length;\r\n\r\n            const uncompressed = zlib.inflateSync(chunk);\r\n\r\n            outWriter.overwrite(uncompressed, true);\r\n\r\n            bytesStart += bytesRead;\r\n        }\r\n    } while (bytesStart < bytesToProcess);\r\n};\r\n\r\n/**\r\n * Compress a Buffer using Deflate, framed with [length][chunk] blocks.\r\n */\r\nexport function deflateBuffer(inWriter: reader): Buffer {\r\n    let bytesToProcess = inWriter.size;\r\n\r\n    let bytesStart = 0;\r\n\r\n    let bytesRead = 0;\r\n\r\n    const buffers: Buffer[] = [];\r\n\r\n    do {\r\n        bytesRead = Math.min(CHUNK_SIZE, bytesToProcess);\r\n\r\n        if (bytesRead > 0) {\r\n            const chunk = inWriter.read(bytesStart, bytesRead, true);\r\n\r\n            const compressed = zlib.deflateSync(chunk);\r\n\r\n            const lenBuf = Buffer.alloc(4);\r\n\r\n            lenBuf.writeUInt32LE(compressed.length, 0);\r\n\r\n            buffers.push(lenBuf);\r\n\r\n            buffers.push(compressed);\r\n\r\n            bytesToProcess -= bytesRead;\r\n\r\n            bytesStart += bytesRead;\r\n        }\r\n    } while (bytesRead === CHUNK_SIZE);\r\n\r\n    return Buffer.concat(buffers);\r\n};\r\n\r\n/**\r\n * Decompress a framed deflate-compressed buffer.\r\n */\r\nexport function inflateBuffer(bw: reader): Buffer {\r\n    const startingOff = bw.offset;\r\n\r\n    const size = bw.size;\r\n\r\n    const totalBuffer = size - startingOff;\r\n\r\n    let bytesRead = 0;\r\n\r\n    const buffers: Buffer[] = [];\r\n\r\n    while (bytesRead < totalBuffer) {\r\n        const chunkLen = bw.readUInt32LE(); bytesRead += 4;\r\n\r\n        const compressed = bw.extract(chunkLen); bytesRead += chunkLen;\r\n\r\n        const decompressed = zlib.inflateSync(compressed);\r\n\r\n        buffers.push(decompressed);\r\n    }\r\n\r\n    return Buffer.concat(buffers);\r\n};\r\n\r\nexport function isArrayBufferLike(buffer: unknown): buffer is ArrayBufferLike {\r\n    return (\r\n        buffer instanceof ArrayBuffer || (typeof SharedArrayBuffer !== \"undefined\" && buffer instanceof SharedArrayBuffer)\r\n    );\r\n};\r\n\r\nexport function ensureBuffer(\r\n    buffer: Buffer | ArrayLike<number> | Uint8Array<ArrayBufferLike> | ArrayBufferView | ArrayBufferLike,\r\n): Buffer {\r\n    if (buffer instanceof Buffer) {\r\n        return buffer;\r\n    } else if (buffer instanceof Uint8Array) {\r\n        return Buffer.from(buffer);\r\n    } else if (ArrayBuffer.isView(buffer)) {\r\n        return Buffer.from(buffer.buffer);\r\n    } else if (isArrayBufferLike(buffer)) {\r\n        return Buffer.from(buffer);\r\n    } else {\r\n        // ArrayLike<number>\r\n        return Buffer.from(buffer);\r\n    }\r\n};\r\n\r\nexport type endian = \"little\" | \"big\";\r\n\r\nexport type BigValue = bigint | number;\r\n\r\n/**\r\n * Between 0 and 1.\r\n */\r\nexport type bit = 1 | 0;\r\n/**\r\n * Between 0 and 255.\r\n */\r\nexport type ubyte = number;\r\n/**\r\n * Between -128 to 127.\r\n */\r\nexport type byte = number;\r\n/**\r\n * Between 0 and 255.\r\n */\r\nexport type uint8 = number;\r\n/**\r\n * Between -128 to 127.\r\n */\r\nexport type int8 = number;\r\n/**\r\n * Between 0 to 65535.\r\n */\r\nexport type uint16 = number;\r\n/**\r\n * Between -32768 to 32767.\r\n */\r\nexport type int16 = number;\r\n/**\r\n * Between 0 to 4294967295.\r\n */\r\nexport type uint32 = number;\r\n/**\r\n * Between -2147483648 to 2147483647\r\n */\r\nexport type int32 = number;\r\n/**\r\n * Between 0  to 18446744073709551615\r\n */\r\nexport type uint64 = bigint;\r\n/**\r\n * Between -9223372036854775808 to 9223372036854775807\r\n */\r\nexport type int64 = bigint;\r\n/**\r\n * Between -3.40282347E+38 to -1.17549435E-38\r\n */\r\nexport type float32 = number;\r\n/**\r\n * Between -1.7977 x 10^308 to -2.2251 x 10^-308\r\n * \r\n * And between 2.2251 x 10^-308 to 1.7977 x 10^308\r\n */\r\nexport type float64 = number;\r\n\r\n/**\r\n * Internal index for values.\r\n */\r\nexport enum JPType {\r\n              // 0x00 - 0x7F positive fixint \r\n    OBJECT_0   = 0x80, // = {} length\r\n    OBJECT_1   = 0x81,\r\n    OBJECT_2   = 0x82,\r\n    OBJECT_3   = 0x83,\r\n    OBJECT_4   = 0x84,\r\n    OBJECT_5   = 0x85,\r\n    OBJECT_6   = 0x86,\r\n    OBJECT_7   = 0x87,\r\n    OBJECT_8   = 0x88,\r\n    OBJECT_9   = 0x89,\r\n    OBJECT_10  = 0x8A,\r\n    OBJECT_11  = 0x8B,\r\n    OBJECT_12  = 0x8C,\r\n    OBJECT_13  = 0x8D,\r\n    OBJECT_14  = 0x8E,\r\n    OBJECT_15  = 0x8F,\r\n    ARRAY_0    = 0x90, // = [] length\r\n    ARRAY_1    = 0x91,\r\n    ARRAY_2    = 0x92,\r\n    ARRAY_3    = 0x93,\r\n    ARRAY_4    = 0x94,\r\n    ARRAY_5    = 0x95,\r\n    ARRAY_6    = 0x96,\r\n    ARRAY_7    = 0x97,\r\n    ARRAY_8    = 0x98,\r\n    ARRAY_9    = 0x99,\r\n    ARRAY_10   = 0x9A,\r\n    ARRAY_11   = 0x9B,\r\n    ARRAY_12   = 0x9C,\r\n    ARRAY_13   = 0x9D,\r\n    ARRAY_14   = 0x9E,\r\n    ARRAY_15   = 0x9F,\r\n    KEY_0      = 0xA0, // Index. Only used when stripping keys, uses string otherwise\r\n    KEY_1      = 0xA1,\r\n    KEY_2      = 0xA2,\r\n    KEY_3      = 0xA3,\r\n    KEY_4      = 0xA4,\r\n    KEY_5      = 0xA5,\r\n    KEY_6      = 0xA6,\r\n    KEY_7      = 0xA7,\r\n    KEY_8      = 0xA8,\r\n    KEY_9      = 0xA9,\r\n    KEY_10     = 0xAA,\r\n    KEY_11     = 0xAB,\r\n    KEY_12     = 0xAC,\r\n    KEY_13     = 0xAD,\r\n    KEY_14     = 0xAE,\r\n    KEY_15     = 0xAF,\r\n    STR_0      = 0xB0, // = Index of the string in the string section, unless in the string section.\r\n    STR_1      = 0xB1,\r\n    STR_2      = 0xB2,\r\n    STR_3      = 0xB3,\r\n    STR_4      = 0xB4,\r\n    STR_5      = 0xB5,\r\n    STR_6      = 0xB6,\r\n    STR_7      = 0xB7,\r\n    STR_8      = 0xB8,\r\n    STR_9      = 0xB9,\r\n    STR_10     = 0xBA,\r\n    STR_11     = 0xBB,\r\n    STR_12     = 0xBC,\r\n    STR_13     = 0xBD,\r\n    STR_14     = 0xBE,\r\n    STR_15     = 0xBF,\r\n    NULL       = 0xC0,\r\n    UNDEFINED  = 0xC1,\r\n    BOOL_FALSE = 0xC2,\r\n    BOOL_TRUE  = 0xC3,\r\n    FINISHED   = 0xC4, // Kill byte\r\n    LIST_END   = 0xC5, // special ext type\r\n    UNUSED_C6  = 0xC6,\r\n    OBJECT8    = 0xC7,\r\n    OBJECT16   = 0xC8,\r\n    OBJECT32   = 0xC9,\r\n    FLOAT32    = 0xCA,\r\n    FLOAT64    = 0xCB,\r\n    UINT_8     = 0xCC,\r\n    UINT_16    = 0xCD,\r\n    UINT_32    = 0xCE,\r\n    UINT_64    = 0xCF,\r\n    INT_8      = 0xD0,\r\n    INT_16     = 0xD1,\r\n    INT_32     = 0xD2,\r\n    INT_64     = 0xD3,\r\n    KEY8       = 0xD4,\r\n    KEY16      = 0xD5,\r\n    KEY32      = 0xD6,\r\n    STR8       = 0xD7,\r\n    STR16      = 0xD8,\r\n    STR32      = 0xD9,\r\n    ARRAY8     = 0xDA,\r\n    ARRAY16    = 0xDB,\r\n    ARRAY32    = 0xDC,\r\n    EXT8       = 0xDD,\r\n    EXT16      = 0xDE,\r\n    EXT32      = 0xDF,\r\n              // 0xE0 - 0xFF negative fixint \r\n};\r\n\r\n/**\r\n * Internal index for ext values.\r\n */\r\nexport enum JPExtType {\r\n    // 0xD0 - 0xFF are reserve extend numbers\r\n    Maps              = 0xEE, // Size here is the array size of Map, not the buffer size\r\n    Sets              = 0xEF, // Size here is the array size of Set, not the buffer size\r\n    Symbol            = 0xF0, // Has fixed bool and string read after.\r\n    RegEx             = 0xF1, // Two strings\r\n    BigUint64Array    = 0xF2,\r\n    BigInt64Array     = 0xF3,\r\n    Float64Array      = 0xF4,\r\n    Float32Array      = 0xF5,\r\n    Float16Array      = 0xF6, // not in use yet\r\n    Int32Array        = 0xF7,\r\n    Uint32Array       = 0xF8,\r\n    Uint16Array       = 0xF9,\r\n    Int16Array        = 0xFA,\r\n    Int8Array         = 0xFB,\r\n    Uint8Array        = 0xFC,\r\n    Uint8ClampedArray = 0xFD,\r\n    Buffer            = 0xFE,\r\n    Date              = 0xFF // MSGPACK Standard\r\n};\r\n\r\n/**\r\n * For creating a unique string list\r\n */\r\nexport class stringList {\r\n    array: string[] = [];\r\n\r\n    set = new Set();\r\n\r\n    /**\r\n     * For creating a unique string list\r\n     * \r\n     * @param {string[]?} stringArray \r\n     */\r\n    constructor(stringArray?: string[]) {\r\n        if (stringArray) {\r\n            this.array = stringArray;\r\n            this.set = new Set(stringArray);\r\n        }\r\n        else {\r\n            this.array = [];\r\n            this.set = new Set();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Add string\r\n     * \r\n     * @param {string} value \r\n     * @returns {number} index\r\n     */\r\n    add(value: string): number {\r\n        if (!this.set.has(value)) {\r\n            this.set.add(value);\r\n            this.array.push(value);\r\n        }\r\n        return this.getIndex(value);\r\n    };\r\n\r\n    /**\r\n     * Gets the string from the index\r\n     * \r\n     * @param {number} value \r\n     * @returns {string}\r\n     */\r\n    get(value: number): string {\r\n        return this.array[value];\r\n    };\r\n\r\n    /**\r\n     * Shouldn't ever use!\r\n     * \r\n     * @param {string} value \r\n     */\r\n    remove(value: string) {\r\n        if (this.set.has(value)) {\r\n            this.set.delete(value);\r\n            // Find the index of the value in the array and remove it\r\n            const index = this.array.indexOf(value);\r\n            if (index !== -1) {\r\n                this.array.splice(index, 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets the index for the string\r\n     * \r\n     * @param {string} value \r\n     * @returns {number} index\r\n     */\r\n    getIndex(value: string): number {\r\n        return this.array.indexOf(value);\r\n    };\r\n\r\n    /**\r\n     * returns data as an array\r\n     * \r\n     * @returns {string[]} string array\r\n     */\r\n    getValues(): string[] {\r\n        return this.array;\r\n    };\r\n\r\n    /**\r\n     * Check the set has the value\r\n     * \r\n     * @param {string} value \r\n     * @returns {boolean} if the value is in the dataset\r\n     */\r\n    has(value: string): boolean {\r\n        return this.set.has(value);\r\n    };\r\n};\r\n\r\n/**\r\n * File flags\r\n */\r\nexport type JPFlags = {\r\n    /**\r\n     * For files over 4 gigs.\r\n     * \r\n     * bit 0\r\n     */\r\n    LargeFile: bit,\r\n    /**\r\n     * Compressed file\r\n     * \r\n     * bit 1\r\n     */\r\n    Compressed: bit,\r\n    /**\r\n     * CRC32 check\r\n     * \r\n     * bit 2\r\n     */\r\n    Crc32: bit,\r\n    /**\r\n     * Encrypted\r\n     * \r\n     * bit 3\r\n     */\r\n    Encrypted: bit,\r\n    /**\r\n     * Encryption value removed\r\n     * \r\n     * bit 4\r\n     */\r\n    EncryptionExcluded: bit,\r\n    /**\r\n     * Keys removed (schema mode)\r\n     * \r\n     * bit 5\r\n     */\r\n    KeyStripped: bit,\r\n};\r\n\r\nexport type ContextOf<ContextType> = ContextType extends undefined\r\n    ? object\r\n    : {\r\n        /**\r\n         * Custom user-defined data, read/writable\r\n         */\r\n        context: ContextType;\r\n    };\r\n\r\nexport class JPBase {\r\n\r\n    ////////////////\r\n    //  BUFFERS   //\r\n    ////////////////\r\n\r\n    /**\r\n     * Buffer for header data.\r\n     */\r\n    headerBuffer: Buffer | null = null;\r\n\r\n    ////////////////\r\n    //  WRITERS   //\r\n    ////////////////\r\n\r\n    useStream = false;\r\n\r\n    valueWriter: BiWriter | BiWriterStream | null = null;\r\n\r\n    strWriter: BiWriter | BiWriterStream | null = null;\r\n\r\n    compWriter: BiWriter | BiWriterStream | null = null;\r\n\r\n    ////////////////\r\n    //  READERS   //\r\n    ////////////////\r\n\r\n    fileReader: BiReader | BiReaderStream | null = null;\r\n\r\n    valueReader: BiReader | BiReaderStream | null = null;\r\n\r\n    strReader: BiReader | BiReaderStream | null = null;\r\n\r\n    compReader: BiReader | BiReaderStream | null = null;\r\n\r\n    ////////////////\r\n    //   SIZES    //\r\n    ////////////////\r\n\r\n    /**\r\n     * Internal size.\r\n     */\r\n    private _HEADER_SIZE: ubyte = 0;\r\n\r\n    /**\r\n     * Size of the header buffer.\r\n     */\r\n    set HEADER_SIZE(value: uint8) {\r\n        this._HEADER_SIZE = value;\r\n    };\r\n\r\n    /**\r\n     * Size of the header buffer.\r\n     */\r\n    get HEADER_SIZE(): uint8 {\r\n        if (this._HEADER_SIZE != 0) {\r\n            return this._HEADER_SIZE;\r\n        } else if (this.headerBuffer != null) {\r\n            this._HEADER_SIZE = this.headerBuffer.length;\r\n\r\n            return this.headerBuffer.length;\r\n        } else {\r\n            let HEADER_SIZE = 32;\r\n\r\n            if (this.Crc32) {\r\n                HEADER_SIZE += 4;\r\n            }\r\n\r\n            if (this.Encrypted && !this.EncryptionExcluded) {\r\n                HEADER_SIZE += 4;\r\n            }\r\n\r\n            this._HEADER_SIZE = HEADER_SIZE;\r\n\r\n            return this._HEADER_SIZE;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Internal size.\r\n     */\r\n    private _VALUE_SIZE: uint64 = 0n;\r\n\r\n    /**\r\n     * The size of the section that has values data.\r\n     */\r\n    set VALUE_SIZE(value: BigValue) {\r\n        this._VALUE_SIZE = BigInt(value);\r\n    };\r\n\r\n    /**\r\n      * The size of the section that has every other type of data.\r\n      */\r\n    get VALUE_SIZE(): uint64 {\r\n        if (this._VALUE_SIZE != 0n) {\r\n            return this._VALUE_SIZE;\r\n        } else if (this.valueWriter != null) {\r\n            this._VALUE_SIZE = BigInt(this.valueWriter.offset);\r\n            return this._VALUE_SIZE;\r\n        } else {\r\n            return 0n;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Internal size.\r\n     */\r\n    private _STR_SIZE: uint64 = 0n;\r\n\r\n    /**\r\n     * The size of the section that has string / key data.\r\n     */\r\n    set STR_SIZE(value: BigValue) {\r\n        this._STR_SIZE = BigInt(value);\r\n    };\r\n\r\n    /**\r\n     * The size of the section that has string / key data.\r\n     */\r\n    get STR_SIZE(): uint64 {\r\n        if (this._STR_SIZE != 0n) {\r\n            return this._STR_SIZE;\r\n        } else if (this.strWriter != null) {\r\n            this._STR_SIZE = BigInt(this.strWriter.offset);\r\n            return this._STR_SIZE;\r\n        } else {\r\n            return 0n;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Internal size.\r\n     */\r\n    private _DATA_SIZE: uint64 = 0n;\r\n\r\n    /**\r\n     * Total value size for both section, used when compressed or encrypted.\r\n     */\r\n    set DATA_SIZE(value: BigValue) {\r\n        this._DATA_SIZE = BigInt(value);\r\n    };\r\n\r\n    /**\r\n     * Total value size for both section, used when compressed or encrypted.\r\n     */\r\n    get DATA_SIZE(): uint64 {\r\n        if (this._DATA_SIZE != 0n) {\r\n            return this._DATA_SIZE;\r\n        } else if (this._VALUE_SIZE != 0n && this._STR_SIZE != 0n) {\r\n            this._DATA_SIZE = BigInt(this._VALUE_SIZE + this._STR_SIZE);\r\n            return this._DATA_SIZE;\r\n        } else if (this.strWriter != null && this.valueWriter != null) {\r\n            this._DATA_SIZE = BigInt(this.valueWriter.size + this.strWriter.length);\r\n            return this._DATA_SIZE;\r\n        } else {\r\n            return 0n;\r\n        }\r\n    };\r\n\r\n    ////////////////\r\n    //   FLAGS    //\r\n    ////////////////\r\n\r\n    /**\r\n    * Flags for file header.\r\n    */\r\n    flags: JPFlags = {\r\n        LargeFile: 0,\r\n        Compressed: 0,\r\n        Crc32: 0,\r\n        Encrypted: 0,\r\n        EncryptionExcluded: 0,\r\n        KeyStripped: 0\r\n    };\r\n\r\n    /**\r\n     * For files over 4 gigs.\r\n     * \r\n     * @param {bit} bit flag\r\n     */\r\n    set LargeFile(bit: bit) {\r\n        this.flags.LargeFile = (bit & 1) as bit;\r\n    };\r\n\r\n    /**\r\n     * For files over 4 gigs.\r\n     * \r\n     * @returns {bit} flag\r\n     */\r\n    get LargeFile(): bit {\r\n        return this.flags.LargeFile;\r\n    };\r\n\r\n    /**\r\n     * If the data is zlib compressed.\r\n     * \r\n     * @returns {bit} flag\r\n     */\r\n    get Compressed(): bit {\r\n        return this.flags.Compressed;\r\n    };\r\n\r\n    /**\r\n     * If the data is zlib compressed.\r\n     * \r\n     * @param {bit} bit flag\r\n     */\r\n    set Compressed(bit: bit) {\r\n        this.flags.Compressed = (bit & 1) as bit;\r\n    };\r\n\r\n    /**\r\n     * If a CRC32 is done on the data.\r\n     * \r\n     * @returns {bit} flag\r\n     */\r\n    get Crc32(): bit {\r\n        return this.flags.Crc32;\r\n    };\r\n\r\n    /**\r\n     * If a CRC32 is done on the data.\r\n     * \r\n     * @param {bit} bit flag\r\n     */\r\n    set Crc32(bit: bit) {\r\n        this.flags.Crc32 = (bit & 1) as bit;\r\n    };\r\n\r\n    /**\r\n     * If the file is encrypted.\r\n     * \r\n     * @returns {bit} flag\r\n     */\r\n    get Encrypted(): bit {\r\n        return this.flags.Encrypted;\r\n    };\r\n\r\n    /**\r\n     * If the file is encrypted.\r\n     * \r\n     * @param {bit} bit flag\r\n     */\r\n    set Encrypted(bit: bit) {\r\n        this.flags.Encrypted = (bit & 1) as bit;\r\n    };\r\n\r\n    /**\r\n     * If the file's encryption key is not kept within the file.\r\n     * \r\n     * @returns {bit} flag\r\n     */\r\n    get EncryptionExcluded(): bit {\r\n        return this.flags.EncryptionExcluded;\r\n    };\r\n\r\n    /**\r\n     * If the file's encryption key is not kept within the file.\r\n     * \r\n     * @param {bit} bit flag\r\n     */\r\n    set EncryptionExcluded(bit: bit) {\r\n        this.flags.EncryptionExcluded = (bit & 1) as bit;\r\n    };\r\n\r\n    /**\r\n     * If the object keys are removed from the file.\r\n     * \r\n     * @returns {bit} flag\r\n     */\r\n    get KeyStripped(): bit {\r\n        return this.flags.KeyStripped;\r\n    };\r\n\r\n    /**\r\n     * If the object keys are removed from the file.\r\n     * \r\n     * @param {bit} bit flag\r\n     */\r\n    set KeyStripped(bit: bit) {\r\n        this.flags.KeyStripped = (bit & 1) as bit;\r\n    };\r\n\r\n    ////////////////////\r\n    // EXTRA HEADERS  //\r\n    ////////////////////\r\n\r\n    /**\r\n     * Encryption key For decryption.\r\n     */\r\n    private _encryptionKey: uint32 = 0;\r\n\r\n    /**\r\n     * Encryption value. For decryption.\r\n     */\r\n    set encryptionKey(value: uint32) {\r\n        this._encryptionKey = value >>> 0;\r\n    }\r\n\r\n    /**\r\n     * Encryption value. For decryption.\r\n     */\r\n    get encryptionKey() {\r\n        return this._encryptionKey;\r\n    }\r\n\r\n    /**\r\n     * Check hash value.\r\n     */\r\n    private _CRC32: uint32 = 0;\r\n\r\n    /**\r\n     * Check hash value.\r\n     */\r\n    set CRC32(value: number) {\r\n        this._CRC32 = value;\r\n    }\r\n\r\n    /**\r\n     * Check hash value.\r\n     */\r\n    get CRC32() {\r\n        return this._CRC32;\r\n    }\r\n\r\n    ////////////////////\r\n    // SHARED OBJECTS //\r\n    ////////////////////\r\n\r\n    /**\r\n     * Object keys for when `stripKeys` was enabled in encoding.\r\n     * \r\n     * This array MUST be passed to decoder for the file to be decoded.\r\n     */\r\n    keysArray: string[] = [];\r\n\r\n    entered = false;\r\n\r\n    fileName = \"\";\r\n\r\n    errored = false;\r\n\r\n    errorMessage = \"\";\r\n\r\n    throwError(errorMessage: string){\r\n        this.errored = true;\r\n        this.errorMessage += errorMessage;\r\n        throw new Error(this.errorMessage);\r\n    };\r\n\r\n    addError(errorMessage: string){\r\n        this.errored = true;\r\n        this.errorMessage += errorMessage;\r\n        console.warn(this.errorMessage);\r\n    };\r\n};","import fs from \"fs\";\r\nimport { Crypt, CRC32 } from './hash.js';\r\nimport { BiReader, BiReaderStream, BiWriterStream, hexdump } from 'bireader';\r\nimport { JPExtensionCodec, JPExtensionCodecType } from \"./ext.js\";\r\nimport {\r\n    VERSION_NUMBER,\r\n    inflateFileSync,\r\n    inflateBuffer,\r\n    endian,\r\n    bit,\r\n    JPType,\r\n    JPExtType,\r\n    MAX_BUFFER,\r\n    JPBase,\r\n    ensureBuffer,\r\n    ContextOf\r\n} from './common.js';\r\n\r\n/**\r\n * `undefined` becomes string `\"undefined\"`\r\n * \r\n * `RegExp` becomes `{regexSrc: src, regexFlags: flags}`\r\n * \r\n * `symbol` becomes `{symbolGlobal: boolean, symbolKey: string}`\r\n * \r\n * `bigint` becomes `number` if safe, otherwise `string`\r\n * \r\n * `Set` becomes `Array`\r\n * \r\n * `Map` becomes `Array[]`\r\n * \r\n * @param {JSON} _this \r\n * @param {unknown} key \r\n * @returns unknown\r\n */\r\nfunction stringifyFix(_this: any, key: any): any {\r\n\r\n    if (key === undefined) {\r\n        return \"undefined\";\r\n    } else if (key instanceof RegExp) {\r\n        const src = key.source;\r\n\r\n        const flags = key.flags;\r\n\r\n        return { regexSrc: src, regexFlags: flags };\r\n    } else if (typeof key == \"symbol\") {\r\n        const keyCheck = Symbol.keyFor(key);\r\n\r\n        const global = !!keyCheck;\r\n\r\n        var keyed = keyCheck ?? key.description;\r\n\r\n        keyed = keyed ?? \"\";\r\n\r\n        return { symbolGlobal: global, symbolKey: keyed };\r\n    } else if (key instanceof Set) {\r\n        const array = [];\r\n\r\n        for (const item of key) {\r\n            array.push(item);\r\n        }\r\n\r\n        return array;\r\n    } else if (key instanceof Map) {\r\n        return Array.from(key.entries());\r\n    } else if (typeof key === \"bigint\") {\r\n        const MIN_SAFE = BigInt(Number.MIN_SAFE_INTEGER);\r\n\r\n        const MAX_SAFE = BigInt(Number.MAX_SAFE_INTEGER);\r\n\r\n        if (key >= MIN_SAFE && key <= MAX_SAFE) {\r\n            return Number(key);\r\n        } else {\r\n            return key.toString();\r\n        }\r\n    } else {\r\n        return key;\r\n    }\r\n};\r\n\r\n/**\r\n * Options for `JPDecode`\r\n */\r\nexport type DecoderOptions<ContextType = undefined> = Readonly<\r\n    Partial<{\r\n        /**\r\n         * Created from `ExtensionCodec` class.\r\n         */\r\n        extensionCodec: JPExtensionCodecType<ContextType>;\r\n\r\n        context?: ContextType;\r\n\r\n        /**\r\n         * Object keys for when `stripKeys` was enabled during encoding.\r\n         * \r\n         * This array MUST be passed to decoder for the file to be decoded.\r\n         */\r\n        keysArray?: string[];\r\n\r\n        /**\r\n         * 32 bit encryption key for when `stripEncryptKey` was enabled in encoding.\r\n         * \r\n         * If the key was stripped from the file, this number MUST be passed to decoder for the file to be decoded.\r\n         */\r\n        encryptionKey?: number;\r\n\r\n        /**\r\n         * This ensures all 64 bit values return as `bigint`\r\n         */\r\n        enforceBigInt?: boolean;\r\n\r\n        /**\r\n         * Forces the decoder to only return only a valid JSON object.\r\n         * \r\n         * This will mostly suppress / convert all extention types that aren't valid JSON.\r\n         */\r\n        makeJSON?: boolean;\r\n        \r\n    }>\r\n> &\r\n    ContextOf<ContextType>;\r\n\r\nconst STATE_ARRAY = \"array\";\r\n\r\nconst STATE_SET = \"set\";\r\n\r\nconst STATE_MAP_KEY = \"map_key\";\r\n\r\nconst STATE_MAP_VALUE = \"map_value\";\r\n\r\nconst STATE_OBJECT_KEY = \"object_key\";\r\n\r\nconst STATE_OBJECT_VALUE = \"object_value\";\r\n\r\ntype MapKeyType = string | number | symbol;\r\n\r\nconst mapKeyConverter = (key: unknown): MapKeyType => {\r\n    if (typeof key === \"string\" || typeof key === \"number\" || typeof key == \"symbol\") {\r\n        return key;\r\n    }\r\n\r\n    throw new Error(\"The type of key must be string or number but \" + typeof key);\r\n};\r\n\r\ntype StackMapState = {\r\n    type: typeof STATE_MAP_KEY | typeof STATE_MAP_VALUE;\r\n\r\n    size: number;\r\n\r\n    key: MapKeyType | null;\r\n\r\n    readCount: number;\r\n\r\n    map: Map<MapKeyType, unknown>;\r\n};\r\n\r\ntype StackObjectState = {\r\n    type: typeof STATE_OBJECT_KEY | typeof STATE_OBJECT_VALUE;\r\n\r\n    size: number;\r\n\r\n    key: MapKeyType | null;\r\n\r\n    readCount: number;\r\n\r\n    object: Record<MapKeyType, unknown>;\r\n};\r\n\r\ntype StackArrayState = {\r\n    type: typeof STATE_ARRAY;\r\n\r\n    size: number;\r\n\r\n    array: Array<unknown>;\r\n\r\n    position: number;\r\n};\r\n\r\ntype StackSetState = {\r\n    type: typeof STATE_SET;\r\n\r\n    size: number;\r\n\r\n    set: Set<unknown>;\r\n\r\n    position: number;\r\n};\r\n\r\ntype StackState = StackSetState | StackArrayState | StackMapState | StackObjectState;\r\n\r\nclass StackPool {\r\n    private readonly stack: Array<StackState> = [];\r\n\r\n    private stackHeadPosition = -1;\r\n\r\n    public get length(): number {\r\n        return this.stackHeadPosition + 1;\r\n    };\r\n\r\n    public top(): StackState | undefined {\r\n        return this.stack[this.stackHeadPosition];\r\n    };\r\n\r\n    public pushArrayState(size: number) {\r\n        const state = this.getUninitializedStateFromPool() as StackArrayState;\r\n\r\n        state.type = STATE_ARRAY;\r\n\r\n        state.position = 0;\r\n\r\n        state.size = size;\r\n\r\n        state.array = new Array(size);\r\n    };\r\n\r\n    public pushSetState(size: number) {\r\n        const state = this.getUninitializedStateFromPool() as StackSetState;\r\n\r\n        state.type = STATE_SET;\r\n\r\n        state.position = 0;\r\n\r\n        state.size = size;\r\n\r\n        state.set = new Set();\r\n    };\r\n\r\n    public pushMapState(size: number) {\r\n        const state = this.getUninitializedStateFromPool() as StackMapState;\r\n\r\n        state.type = STATE_MAP_KEY;\r\n\r\n        state.readCount = 0;\r\n\r\n        state.size = size;\r\n\r\n        state.map = new Map();\r\n    };\r\n\r\n    public pushObjectState(size: number) {\r\n        const state = this.getUninitializedStateFromPool() as StackObjectState;\r\n\r\n        state.type = STATE_OBJECT_KEY;\r\n\r\n        state.readCount = 0;\r\n\r\n        state.size = size;\r\n\r\n        state.object = {};\r\n    };\r\n\r\n    private getUninitializedStateFromPool() {\r\n        this.stackHeadPosition++;\r\n\r\n        if (this.stackHeadPosition === this.stack.length) {\r\n            const partialState: Partial<StackState> = {\r\n                type: undefined,\r\n\r\n                size: 0,\r\n\r\n                array: undefined,\r\n\r\n                position: 0,\r\n\r\n                readCount: 0,\r\n\r\n                object: undefined,\r\n\r\n                map: undefined,\r\n\r\n                set: undefined,\r\n\r\n                key: null,\r\n            };\r\n\r\n            this.stack.push(partialState as StackState);\r\n        }\r\n\r\n        return this.stack[this.stackHeadPosition];\r\n    };\r\n\r\n    public release(state: StackState): void {\r\n        const topStackState = this.stack[this.stackHeadPosition];\r\n\r\n        if (topStackState !== state) {\r\n            throw new Error(\"Invalid stack state. Released state is not on top of the stack.\");\r\n        }\r\n\r\n        if (state.type === STATE_SET) {\r\n            const partialState = state as Partial<StackSetState>;\r\n\r\n            partialState.size = 0;\r\n\r\n            partialState.set = undefined;\r\n\r\n            partialState.position = 0;\r\n\r\n            partialState.type = undefined;\r\n        }\r\n\r\n        if (state.type === STATE_ARRAY) {\r\n            const partialState = state as Partial<StackArrayState>;\r\n\r\n            partialState.size = 0;\r\n\r\n            partialState.array = undefined;\r\n\r\n            partialState.position = 0;\r\n\r\n            partialState.type = undefined;\r\n        }\r\n\r\n        if (state.type === STATE_MAP_KEY || state.type === STATE_MAP_VALUE) {\r\n            const partialState = state as Partial<StackMapState>;\r\n\r\n            partialState.size = 0;\r\n\r\n            partialState.map = undefined;\r\n\r\n            partialState.readCount = 0;\r\n\r\n            partialState.type = undefined;\r\n        }\r\n\r\n        if (state.type === STATE_OBJECT_KEY || state.type === STATE_OBJECT_VALUE) {\r\n            const partialState = state as Partial<StackObjectState>;\r\n\r\n            partialState.size = 0;\r\n\r\n            partialState.object = undefined;\r\n\r\n            partialState.readCount = 0;\r\n\r\n            partialState.type = undefined;\r\n        }\r\n\r\n        this.stackHeadPosition--;\r\n    };\r\n\r\n    public reset(): void {\r\n        this.stack.length = 0;\r\n\r\n        this.stackHeadPosition = -1;\r\n    };\r\n};\r\n\r\n/**\r\n * Create with `DecoderOptions`\r\n */\r\nexport class JPDecode<ContextType = undefined> extends JPBase {\r\n    private readonly extensionCodec: JPExtensionCodecType<ContextType>;\r\n\r\n    private readonly context: ContextType;\r\n\r\n    private readonly mapKeyConverter = mapKeyConverter;\r\n\r\n    private readonly stack = new StackPool();\r\n\r\n    private stringsList: string[] = [];\r\n\r\n    /**\r\n     * Endianness. Defaults to `little`\r\n     */\r\n    endian: endian = \"little\";\r\n\r\n    /**\r\n     * Converts return to valid JSON\r\n     */\r\n    makeJSON = false;\r\n\r\n    /**\r\n     * Ensures all 64 bit values return as `bigint`\r\n     */\r\n    enforceBigInt = false;\r\n\r\n    /**\r\n     * File Buffer\r\n     */\r\n    private buffer: Buffer | null = null;\r\n\r\n    /**\r\n     * Direct objects for any symbols that were encoded.\r\n     */\r\n    symbolList: symbol[] = [];\r\n\r\n    /**\r\n     * If a temp file was needed.\r\n     */\r\n    private tempCreated = false;\r\n\r\n    /**\r\n     * If the file buffer has extensions types in use.\r\n     */\r\n    hasExtensions = false;\r\n\r\n    /**\r\n     * If the data is acceptable JSON data.\r\n     */\r\n    validJSON = true;\r\n\r\n    /**\r\n     * Computed CRC32 hash value.\r\n     */\r\n    CRC32Hash = 0;\r\n\r\n    /**\r\n     * CRC32 Hash on file.\r\n     */\r\n    CRC32OnFile = 0;\r\n\r\n    /**\r\n     * Set up with basic options.\r\n     * \r\n     * @param {DecoderOptions?} options - options for decoding\r\n     */\r\n    constructor(options?: DecoderOptions<ContextType>) {\r\n        super();\r\n\r\n        this.extensionCodec = options?.extensionCodec ?? (JPExtensionCodec.defaultCodec as JPExtensionCodecType<ContextType>);\r\n\r\n        this.context = (options as { context: ContextType } | undefined)?.context as ContextType; // needs a type assertion because EncoderOptions has no context property when ContextType is undefined\r\n\r\n        this.keysArray = options?.keysArray ? options.keysArray : [];\r\n\r\n        this.encryptionKey = options?.encryptionKey ? options.encryptionKey : 0;\r\n\r\n        this.enforceBigInt = options?.enforceBigInt ? options.enforceBigInt : false;\r\n\r\n        this.makeJSON = options?.makeJSON ? options.makeJSON : false;\r\n    };\r\n\r\n    private clone(): JPDecode<ContextType> {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n        return new JPDecode({\r\n            extensionCodec: this.extensionCodec,\r\n\r\n            context: this.context,\r\n\r\n            keysArray: this.keysArray,\r\n\r\n            EncryptionKey: this.encryptionKey,\r\n\r\n            fileName: this.fileName,\r\n\r\n            enforceBigInt: this.enforceBigInt,\r\n\r\n            makeJSON: this.makeJSON,\r\n            // TODO may need more\r\n        } as any);\r\n    };\r\n\r\n    /**\r\n     * Basic decoding, will run options that were set in constructor.\r\n     * \r\n     * If passed a `string`, will assume it is a file path to read the file from.\r\n     * \r\n     * This will trigger a stream like mode where the whole file isn't loaded all at once for larger files.\r\n     * \r\n     * @param bufferOrSourcePath - `Buffer` of the JamPack data or the file path to a JamPack file.\r\n     */\r\n    public decode(bufferOrSourcePath: Buffer | ArrayLike<number> | Uint8Array<ArrayBufferLike> | ArrayBufferView | ArrayBufferLike | string): unknown {\r\n        if (this.entered) {\r\n            const instance = this.clone();\r\n\r\n            return instance.decode(bufferOrSourcePath);\r\n        }\r\n\r\n        if (typeof bufferOrSourcePath != \"string\") {\r\n            this.setBuffer(bufferOrSourcePath);\r\n        } else {\r\n            this.fileName = bufferOrSourcePath;\r\n\r\n            this.checkFilePath(this.fileName);\r\n        }\r\n\r\n        try {\r\n            this.entered = true;\r\n\r\n            this.reinitializeState();\r\n\r\n            if (this.valueReader == null) {\r\n                this.throwError(\" No value reader set. \" + this.fileName);\r\n            }\r\n\r\n            this.stringsList = this.createStringList() as string[];\r\n\r\n            const object = this.doDecodeSync(this.valueReader);\r\n\r\n            if(this.tempCreated){\r\n                (this.valueReader as BiReaderStream).deleteFile(); \r\n            \r\n                this.valueReader.close();\r\n            }\r\n\r\n            if(this.makeJSON && !this.validJSON){\r\n                return JSON.parse(JSON.stringify(object, stringifyFix));\r\n            }\r\n\r\n            return object;\r\n        } catch (err) {\r\n            console.error(err);\r\n\r\n            return;\r\n        } finally {\r\n            this.entered = false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Basic decoding, will run options that were set in constructor.\r\n     * \r\n     * If passed a `string`, will assume it is a file path to read the file from.\r\n     * \r\n     * This will trigger a stream like mode where the whole file isn't loaded all at once for larger files.\r\n     * \r\n     * @async\r\n     * @param bufferOrSourcePath - `Buffer` of the JamPack data or the file path to a JamPack file.\r\n     */\r\n    public async decodeAsync(bufferOrSourcePath: Buffer | ArrayLike<number> | Uint8Array<ArrayBufferLike> | ArrayBufferView | ArrayBufferLike | string): Promise<unknown> {\r\n        try {\r\n            return this.decode(bufferOrSourcePath);\r\n        } catch (err) {\r\n            console.error(err);\r\n\r\n            return;\r\n        }\r\n    };\r\n\r\n    private checkFilePath(filePath: string): void {\r\n        var biTest: BiReaderStream | BiReader = new BiReaderStream(filePath);\r\n\r\n        const testBuffer = biTest.extract(40);\r\n\r\n        biTest.close();\r\n\r\n        biTest = new BiReader(testBuffer);\r\n\r\n        this.testHeader(biTest);\r\n\r\n        biTest.close();\r\n\r\n        if(!this.useStream){\r\n            this.buffer = fs.readFileSync(filePath);\r\n        }\r\n    };\r\n\r\n    private testHeader(br: BiReaderStream | BiReader) {\r\n        const MAGICS = br.uint16;\r\n\r\n        if (!(MAGICS == 0x504A || MAGICS == 0x4A50)) {\r\n            this.throwError(` File magics incorrect. Expecting 0x504A or 0x4A50, but got 0x${MAGICS.toString(16).padStart(4, \"0\")} ` + this.fileName);\r\n        }\r\n\r\n        if (MAGICS == 0x4A50) {\r\n            this.endian = \"big\";\r\n        }\r\n\r\n        const V_MAJOR = br.uint8;\r\n\r\n        const V_MINOR = br.uint8;\r\n\r\n        this.HEADER_SIZE = br.uint8;\r\n\r\n        this.LargeFile = br.bit1 as bit;\r\n\r\n        this.Compressed = br.bit1 as bit;\r\n\r\n        this.Crc32 = br.bit1 as bit;\r\n\r\n        this.Encrypted = br.bit1 as bit;\r\n\r\n        this.EncryptionExcluded = br.bit1 as bit;\r\n\r\n        this.KeyStripped = br.bit1 as bit;\r\n\r\n        br.bit1;  // FLAG6\r\n\r\n        br.bit1;  // FLAG7\r\n\r\n        br.uint8;  // RESV_6 FLAG8-15\r\n\r\n        br.uint8;  // RESV_7 FLAG16-23\r\n\r\n        this.VALUE_SIZE = br.uint64;\r\n\r\n        this.STR_SIZE = br.uint64;\r\n\r\n        this.DATA_SIZE = br.uint64;\r\n\r\n        const V_NUMBER = parseFloat(`${V_MAJOR}.${V_MINOR}`);\r\n\r\n        if (V_NUMBER > VERSION_NUMBER) {\r\n            this.addError(` File was encoded in a more advanced version of this package which may cause issues. Package: ${VERSION_NUMBER} - File: ${V_NUMBER} ` + this.fileName);\r\n        }\r\n\r\n        if (this.LargeFile && (br.size > MAX_BUFFER || (this.STR_SIZE + this.VALUE_SIZE) > MAX_BUFFER)) {\r\n            this.useStream = true;\r\n        }\r\n\r\n        if (this.EncryptionExcluded && this.encryptionKey == 0) {\r\n            this.throwError(' The encryption key is not included in the file and the key was not set in the decoder. Can not decode. ' + this.fileName);\r\n        }\r\n\r\n        if (this.KeyStripped && this.keysArray.length == 0) {\r\n            this.throwError(' The keysArray was removed from the file and not set in the decoder. Can not decode. ' + this.fileName);\r\n        }\r\n        // extra headers\r\n        if (this.Crc32) {\r\n            this.CRC32 = br.uint32;\r\n            this.CRC32OnFile = this.CRC32;\r\n        }\r\n\r\n        if (this.Encrypted && !this.EncryptionExcluded) {\r\n            this.encryptionKey = br.uint32;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Sets up valueReader & strReader. Will decomp and decrypt as well.\r\n     * \r\n     * If a temp file is made, will have to delete after.\r\n     */\r\n    private reinitializeState() {\r\n        if (this.useStream) {\r\n            if (this.fileReader != null) {\r\n                this.fileReader.close();\r\n\r\n                this.fileReader = null;\r\n            }\r\n\r\n            this.compReader = new BiReaderStream(this.fileName);\r\n\r\n            this.compReader.endian = this.endian;\r\n\r\n            this.compReader.open();\r\n\r\n            this.compReader.goto(this.HEADER_SIZE);\r\n\r\n            this.tempCreated = false;\r\n\r\n            if (this.Encrypted) {\r\n                // make comp file without header\r\n                const compWriter = new BiWriterStream(this.fileName + \".comp\");\r\n\r\n                compWriter.unrestrict();\r\n\r\n                compWriter.endian = this.endian;\r\n\r\n                compWriter.open();\r\n\r\n                compWriter.overwrite(this.compReader.read(this.HEADER_SIZE, this.compReader.size - this.HEADER_SIZE), true);\r\n\r\n                compWriter.trim();\r\n\r\n                this.tempCreated = true;\r\n\r\n                var finalSize = 0;\r\n\r\n                if (this.Compressed) {\r\n                    finalSize = Number(this.DATA_SIZE);\r\n                } else {\r\n                    finalSize = Number(this.VALUE_SIZE + this.STR_SIZE);\r\n                }\r\n\r\n                this.decrypt(compWriter, null, finalSize);\r\n\r\n                compWriter.close();\r\n\r\n                this.compReader = new BiReaderStream(this.fileName + \".comp\");\r\n\r\n                this.compReader.endian = this.endian;\r\n\r\n                this.compReader.unrestrict();\r\n\r\n                this.compReader.open();\r\n            }\r\n\r\n            if (this.Compressed) {\r\n                // check if comp file was made\r\n                if (this.tempCreated) {\r\n                    // compReader should be just the data\r\n                    const tempcompWriter = new BiWriterStream(this.fileName + \".comp.tmp\");\r\n\r\n                    tempcompWriter.endian = this.endian;\r\n\r\n                    tempcompWriter.open();\r\n\r\n                    inflateFileSync(this.compReader, tempcompWriter);\r\n\r\n                    this.compReader.writeMode(true);\r\n\r\n                    this.compReader.gotoStart();\r\n\r\n                    this.compReader.overwrite(tempcompWriter.read(0, tempcompWriter.offset), true);\r\n\r\n                    this.compReader.trim();\r\n\r\n                    this.compReader.writeMode(false);\r\n\r\n                    tempcompWriter.deleteFile();\r\n                } else {\r\n                    // split off header\r\n                    const compWriter = new BiWriterStream(this.fileName + \".comp\");\r\n\r\n                    compWriter.endian = this.endian;\r\n\r\n                    compWriter.open();\r\n\r\n                    compWriter.overwrite(this.compReader.read(this.HEADER_SIZE, this.compReader.size - this.HEADER_SIZE), true);\r\n\r\n                    compWriter.trim();\r\n\r\n                    compWriter.close();\r\n\r\n                    const compReader = new BiReaderStream(this.fileName + \".comp\");\r\n\r\n                    compReader.endian = this.endian;\r\n\r\n                    compReader.unrestrict();\r\n\r\n                    const tempcompWriter = new BiWriterStream(this.fileName + \".comp.tmp\");\r\n\r\n                    tempcompWriter.endian = this.endian;\r\n\r\n                    tempcompWriter.open();\r\n\r\n                    this.tempCreated = true;\r\n\r\n                    inflateFileSync(compReader, tempcompWriter);\r\n\r\n                    compReader.writeMode(true);\r\n\r\n                    compReader.gotoStart();\r\n\r\n                    compReader.overwrite(tempcompWriter.read(0,tempcompWriter.offset), true);\r\n\r\n                    compReader.trim();\r\n\r\n                    compReader.writeMode(false);\r\n\r\n                    tempcompWriter.deleteFile();\r\n\r\n                    this.compReader = compReader;\r\n                }\r\n            }\r\n            if (this.Crc32) {\r\n                const CHUNK_SIZE = 0x2000; // 8192 bytes\r\n\r\n                var crc = 0;\r\n\r\n                var start = this.HEADER_SIZE;\r\n\r\n                if (this.tempCreated) {                    \r\n                    start = 0;\r\n                }\r\n\r\n                this.compReader.goto(start);\r\n\r\n                for (let position = start; position <= this.compReader.size;) {\r\n                    const buffer = this.compReader.read(position, Math.min(CHUNK_SIZE, this.compReader.size - position)) as Buffer;\r\n\r\n                    if (buffer.length == 0) break;\r\n\r\n                    crc = CRC32(buffer, crc);\r\n\r\n                    position += buffer.length;\r\n                }\r\n\r\n                this.CRC32Hash = crc >>> 0;\r\n\r\n                if (this.CRC32Hash != this.CRC32OnFile) {\r\n                    this.addError(` File DID NOT pass CRC32 check, may be corrupt. Expecting ${this.CRC32OnFile} but got ${this.CRC32Hash}. ` + this.fileName);\r\n                }\r\n            }\r\n\r\n            var totalSize = 0n;\r\n\r\n            if (this.tempCreated) {\r\n                totalSize = BigInt(this.compReader.size);\r\n\r\n                this.compReader.open();\r\n\r\n                this.valueReader = new BiReaderStream(this.fileName + \".comp\");\r\n\r\n                this.strReader = new BiReaderStream(this.fileName + \".comp\");\r\n\r\n                this.valueReader.fd = this.compReader.fd;\r\n\r\n                this.valueReader.endian = this.compReader.endian;\r\n\r\n                this.valueReader.size = this.compReader.size;\r\n\r\n                this.valueReader.sizeB = this.compReader.sizeB;\r\n\r\n                this.valueReader.maxFileSize = this.compReader.maxFileSize;\r\n\r\n                this.strReader.fd = this.compReader.fd;\r\n\r\n                this.strReader.endian = this.compReader.endian;\r\n\r\n                this.strReader.size = this.compReader.size;\r\n\r\n                this.strReader.sizeB = this.compReader.sizeB;\r\n\r\n                this.strReader.maxFileSize = this.compReader.maxFileSize;\r\n                \r\n                this.strReader.offset = Number(this.VALUE_SIZE);\r\n            } else {\r\n                totalSize = BigInt(this.compReader.size - this.HEADER_SIZE);\r\n\r\n                this.compReader.open();\r\n\r\n                this.valueReader = new BiReaderStream(this.fileName);\r\n\r\n                this.strReader = new BiReaderStream(this.fileName);\r\n\r\n                this.valueReader.fd = this.compReader.fd;\r\n\r\n                this.valueReader.endian = this.compReader.endian;\r\n\r\n                this.valueReader.size = this.compReader.size;\r\n\r\n                this.valueReader.sizeB = this.compReader.sizeB;\r\n\r\n                this.valueReader.maxFileSize = this.compReader.maxFileSize;\r\n\r\n                this.valueReader.offset = this.HEADER_SIZE;\r\n\r\n                this.strReader.fd = this.compReader.fd;\r\n\r\n                this.strReader.endian = this.compReader.endian;\r\n\r\n                this.strReader.size = this.compReader.size;\r\n\r\n                this.strReader.sizeB = this.compReader.sizeB;\r\n\r\n                this.strReader.maxFileSize = this.compReader.maxFileSize;\r\n\r\n                this.strReader.offset = this.HEADER_SIZE + Number(this.VALUE_SIZE);\r\n            }\r\n\r\n            if (this.VALUE_SIZE + this.STR_SIZE != totalSize) {\r\n                this.addError(` File size DID NOT match headers, may be corrupt. Expecting ${this.VALUE_SIZE + this.STR_SIZE} but got ${totalSize}. ` + this.fileName);\r\n            }\r\n        } else {\r\n            if (this.buffer == null) {\r\n                this.throwError(\" Buffer not set. \" + this.fileName);\r\n            }\r\n\r\n            this.fileReader = new BiReader(this.buffer);\r\n\r\n            this.fileReader.endian = this.endian;\r\n\r\n            this.fileReader.goto(this.HEADER_SIZE);\r\n\r\n            var decomBuffer = this.buffer.subarray(this.HEADER_SIZE, this.buffer.length);\r\n\r\n            this.compReader = new BiReader(decomBuffer);\r\n\r\n            this.compReader.endian = this.endian;\r\n\r\n            if (this.Encrypted) {\r\n                var finalSize = Number(this.VALUE_SIZE + this.STR_SIZE);\r\n\r\n                if (this.Compressed) {\r\n                    finalSize = Number(this.DATA_SIZE);\r\n                }\r\n\r\n                decomBuffer = this.decrypt(null, decomBuffer, finalSize);\r\n\r\n                this.compReader = new BiReader(decomBuffer);\r\n\r\n                this.compReader.endian = this.endian;\r\n            }\r\n            if (this.Compressed) {\r\n                decomBuffer = inflateBuffer(this.compReader);\r\n\r\n                this.compReader = new BiReader(decomBuffer);\r\n\r\n                this.compReader.endian = this.endian;\r\n            }\r\n            if (this.Crc32) {\r\n                const data = this.compReader.data as Buffer;\r\n\r\n                this.CRC32Hash = CRC32(data, 0) >>> 0;\r\n\r\n                if (this.CRC32Hash != this.CRC32OnFile) {\r\n                    this.addError(` File DID NOT pass CRC32 check, may be corrupt. Expecting ${this.CRC32OnFile} but got ${this.CRC32Hash}. ` + this.fileName);\r\n                }\r\n            }\r\n\r\n            if (this.VALUE_SIZE + this.STR_SIZE != BigInt(this.compReader.size)) {\r\n                this.addError(` File size DID NOT match headers, may be corrupt. Expecting ${this.VALUE_SIZE + this.STR_SIZE} but got ${this.compReader.size}. ` + this.fileName);\r\n            }\r\n\r\n            this.valueReader = new BiReader(this.compReader.extract(Number(this.VALUE_SIZE), true));\r\n\r\n            this.valueReader.endian = this.endian;\r\n\r\n            this.strReader = new BiReader(this.compReader.extract(Number(this.STR_SIZE), true));\r\n\r\n            this.strReader.endian = this.endian;\r\n        }\r\n    };\r\n\r\n    private setBuffer(buffer: Buffer | ArrayLike<number> | ArrayBufferView | ArrayBufferLike): void {\r\n        this.buffer = ensureBuffer(buffer);\r\n\r\n        this.fileReader = new BiReader(this.buffer);\r\n\r\n        this.testHeader(this.fileReader);\r\n\r\n        this.fileReader.close();\r\n\r\n        this.fileReader = null;\r\n    };\r\n\r\n    private createStringList() {\r\n        if (this.strReader == null) {\r\n            this.throwError(\" string reader not set. \" + this.fileName);\r\n        }\r\n\r\n        DECODE: while (true) {\r\n            const headByte = this.strReader.ubyte;\r\n\r\n            let object: unknown;\r\n\r\n            if ((headByte >= JPType.ARRAY_0 && headByte <= JPType.ARRAY_15) || // arrays\r\n                (headByte >= JPType.ARRAY8 && headByte <= JPType.ARRAY32)\r\n            ) {\r\n                var size = 0;\r\n\r\n                if (headByte <= JPType.ARRAY_15) {\r\n                    size = headByte - JPType.ARRAY_0;\r\n                } else if (headByte === JPType.ARRAY8) {\r\n                    size = this.strReader.ubyte;\r\n                } else if (headByte === JPType.ARRAY16) {\r\n                    size = this.strReader.uint16;\r\n                } else if (headByte === JPType.ARRAY32) {\r\n                    size = this.strReader.uint32;\r\n                }\r\n\r\n                if (size !== 0) {\r\n                    this.pushArrayState(size);\r\n\r\n                    continue DECODE;\r\n                } else {\r\n                    object = [];\r\n                }\r\n            } else if ((headByte >= JPType.STR_0 && headByte <= JPType.STR_15) || // strings\r\n                (headByte >= JPType.STR8 && headByte <= JPType.STR32)\r\n            ) {\r\n                var size = 0;\r\n\r\n                if (headByte <= JPType.STR_15) {\r\n                    size = headByte - JPType.STR_0;\r\n                } else if (headByte === JPType.STR8) {\r\n                    size = this.strReader.ubyte;\r\n                } else if (headByte === JPType.STR16) {\r\n                    size = this.strReader.uint16;\r\n                } else if (headByte === JPType.STR32) {\r\n                    size = this.strReader.uint32;\r\n                }\r\n\r\n                object = this.strReader.string({ length: size });\r\n            } else {\r\n                this.throwError(` Invalid data in string area. 0x${headByte.toString(16).padStart(2, \"0\")} ` + this.fileName);\r\n            }\r\n\r\n            const stack = this.stack;\r\n\r\n            while (stack.length > 0) {\r\n                // arrays\r\n                const state = stack.top()!;\r\n\r\n                if (state.type === STATE_ARRAY) {\r\n                    state.array[state.position] = object;\r\n\r\n                    state.position++;\r\n\r\n                    if (state.position === state.size) {\r\n                        object = state.array;\r\n\r\n                        stack.release(state);\r\n                    } else {\r\n                        continue DECODE;\r\n                    }\r\n                } else {\r\n                    this.throwError(' Should only have an array in the string data, found type ' + state.type + \" in file \" + this.fileName);\r\n                }\r\n            }\r\n\r\n            return object;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Runs a raw decode on the passed value buffer as `Buffer` or `BiReader`. Return data wherever it ends based on the start value.\r\n     * \r\n     * NOTE: This function is for extention use, not direct use. Use `decodeAsync` instead.\r\n     * \r\n     * @param bufferOrReader - `Buffer` or `BiReader`\r\n     * @returns Decoded data\r\n     */\r\n    async doDecodeAsync(bufferOrReader: Buffer | BiReader | BiReaderStream): Promise<unknown>{\r\n        var reader = bufferOrReader;\r\n        \r\n        if(reader instanceof Buffer){\r\n            reader = new BiReader(reader);\r\n\r\n            reader.endian = this.endian;\r\n        }\r\n\r\n        if(!(reader instanceof BiReader || reader instanceof BiReaderStream) || reader == null){\r\n            this.throwError(\" Value reader not set. \" + this.fileName);\r\n        }\r\n\r\n        if(this.strReader == null){\r\n            this.throwError(\" String reader not set. \" + this.fileName);\r\n        }\r\n\r\n        try{\r\n            return this.doDecodeSync(reader);\r\n        } catch (err){\r\n            throw new Error(err);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Runs a raw decode on the passed value buffer as `Buffer` or `BiReader`. Return data wherever it ends based on the start value.\r\n     * \r\n     * NOTE: This function is for extention use, not direct use. Use `decode` instead.\r\n     * \r\n     * @param bufferOrReader - `Buffer` or `BiReader`\r\n     * @returns Decoded data\r\n     */\r\n    doDecodeSync(bufferOrReader: Buffer | BiReader | BiReaderStream): unknown {\r\n        var reader = bufferOrReader;\r\n\r\n        if(reader instanceof Buffer){\r\n            reader = new BiReader(reader);\r\n\r\n            reader.endian = this.endian;\r\n        }\r\n\r\n        if(!(reader instanceof BiReader || reader instanceof BiReaderStream) || reader == null){\r\n            this.throwError(\" Value reader not set. \" + this.fileName);\r\n        }\r\n\r\n        if(this.strReader == null){\r\n            this.throwError(\" String reader not set. \" + this.fileName);\r\n        }\r\n\r\n        reader = reader as BiReader;\r\n    \r\n        let object: unknown;\r\n\r\n        DECODE: while (true) {\r\n            const headByte: number = reader.ubyte;\r\n            \r\n            if (headByte < JPType.OBJECT_0) {\r\n                // positive fixint 0x00 - 0x7f\r\n                object = headByte;\r\n            } else if (headByte < JPType.ARRAY_0) {\r\n                // fix object 0x80 - 0x8f\r\n                const size = headByte - 0x80;\r\n\r\n                if (size !== 0) {\r\n                    this.pushObjectState(size);\r\n\r\n                    continue DECODE;\r\n                } else {\r\n                    object = {};\r\n                }\r\n            } else if (headByte < JPType.KEY_0) {\r\n                //fixarray\r\n                const size = headByte - 0x90;\r\n\r\n                if (size !== 0) {\r\n                    this.pushArrayState(size);\r\n\r\n                    continue DECODE;\r\n                } else {\r\n                    object = [];\r\n                }\r\n            } else if (headByte < JPType.STR_0) {\r\n                //fixkey (only used in stripping)\r\n                const index = headByte - 0xA0;\r\n\r\n                if (!this.keysArray[index]) {\r\n                    this.addError( `Did not find key value for index ` + index + \" in file \" + this.fileName);\r\n                }\r\n\r\n                object = this.keysArray[index];\r\n            } else if (headByte < JPType.NULL) {\r\n                //fixstr\r\n                const index = headByte - 0xB0;\r\n\r\n                if (this.stringsList[index] === undefined) {\r\n                    this.addError(` Did not find string value for index ` + index + \" in file \" + this.fileName);\r\n                }\r\n\r\n                object = this.stringsList[index];\r\n            } else if (headByte == JPType.NULL) {\r\n                object = null;\r\n            } else if (headByte == JPType.UNDEFINED) {\r\n                object = undefined;\r\n                this.validJSON = false;\r\n            } else if (headByte == JPType.BOOL_FALSE) {\r\n                object = false;\r\n            } else if (headByte == JPType.BOOL_TRUE) {\r\n                object = true;\r\n            } else if (headByte == JPType.FINISHED ||\r\n                headByte == JPType.UNUSED_C6\r\n            ) {\r\n                return object;\r\n            } else if(headByte == JPType.LIST_END){\r\n                const state = this.stack.top()!;\r\n\r\n                if(state.type != undefined){\r\n                    if(state.type == STATE_ARRAY){\r\n                        object = state.array;\r\n                    } else if(state.type == STATE_OBJECT_KEY || state.type == STATE_OBJECT_VALUE){\r\n                        object = state.object;\r\n                    } else if(state.type == STATE_MAP_KEY || state.type == STATE_MAP_VALUE){\r\n                        object = state.map;\r\n                    }\r\n\r\n                    this.stack.release(state);\r\n                }\r\n\r\n                return object;\r\n            } else if (headByte <= JPType.OBJECT32) {\r\n                // non-fix object\r\n                var size = 0;\r\n\r\n                if (headByte === JPType.OBJECT8) {\r\n                    size = reader.ubyte;\r\n                } else if (headByte === JPType.OBJECT16) {\r\n                    size = reader.uint16;\r\n                } else if (headByte === JPType.OBJECT32) {\r\n                    size = reader.uint32;\r\n                }\r\n\r\n                if (size !== 0) {\r\n                    this.pushObjectState(size);\r\n\r\n                    continue DECODE;\r\n                } else {\r\n                    object = {};\r\n                }\r\n            } else if (headByte === JPType.FLOAT32) {\r\n                object = reader.float;\r\n            } else if (headByte === JPType.FLOAT64) {\r\n                object = reader.doublefloat;\r\n            } else if (headByte === JPType.UINT_8) {\r\n                object = reader.uint8;\r\n            } else if (headByte === JPType.UINT_16) {\r\n                object = reader.uint16;\r\n            } else if (headByte === JPType.UINT_32) {\r\n                object = reader.uint32;\r\n            } else if (headByte === JPType.UINT_64) {\r\n                object = reader.uint64; \r\n                if(this.enforceBigInt){\r\n                    object = BigInt(object as number);\r\n                }\r\n                if(typeof object === \"bigint\"){\r\n                    this.validJSON = false;\r\n                }\r\n            } else if (headByte === JPType.INT_8) {\r\n                object = reader.int8;\r\n            } else if (headByte === JPType.INT_16) {\r\n                object = reader.int16;\r\n            } else if (headByte === JPType.INT_32) {\r\n                object = reader.int32;\r\n            } else if (headByte === JPType.INT_64) {\r\n                object = reader.int64; \r\n                if(this.enforceBigInt){\r\n                    object = BigInt(object as number);\r\n                }\r\n                if(typeof object === \"bigint\"){\r\n                    this.validJSON = false;\r\n                }\r\n            } else if (headByte <= JPType.KEY32) {\r\n                // nonfix key\r\n                var index = 0;\r\n\r\n                if (headByte === JPType.KEY8) {\r\n                    index = reader.ubyte;\r\n                } else if (headByte === JPType.KEY16) {\r\n                    index = reader.uint16;\r\n                } else if (headByte === JPType.KEY32) {\r\n                    index = reader.uint32;\r\n                }\r\n\r\n                if (!this.keysArray[index]) {\r\n                    this.addError(` Did not find key value for index ` + index + \" in file \" + this.fileName);\r\n                }\r\n\r\n                object = this.keysArray[index];\r\n            } else if (headByte <= JPType.STR32) {\r\n                // non-fix string\r\n                var index = 0;\r\n\r\n                if (headByte === JPType.STR8) {\r\n                    index = reader.ubyte;\r\n                } else if (headByte === JPType.STR16) {\r\n                    index = reader.uint16;\r\n                } else if (headByte === JPType.STR32) {\r\n                    index = reader.uint32;\r\n                }\r\n\r\n                if (this.stringsList[index] === undefined) {\r\n                    this.addError(` Did not find string value for index ` + index + \" in file \" + this.fileName);\r\n                }\r\n\r\n                object = this.stringsList[index];\r\n            } else if (headByte <= JPType.ARRAY32) {\r\n                // non-fix array\r\n                var size = 0;\r\n\r\n                if (headByte === JPType.ARRAY8) {\r\n                    size = reader.ubyte;\r\n                } else if (headByte === JPType.ARRAY16) {\r\n                    size = reader.uint16;\r\n                } else if (headByte === JPType.ARRAY32) {\r\n                    size = reader.uint32;\r\n                }\r\n\r\n                if (size !== 0) {\r\n                    this.pushArrayState(size);\r\n\r\n                    continue DECODE;\r\n                } else {\r\n                    object = [];\r\n                }\r\n            } else if (headByte <= JPType.EXT32) {\r\n                this.hasExtensions = true;\r\n\r\n                var size = 0;\r\n\r\n                if (headByte === JPType.EXT8) {\r\n                    size = reader.ubyte;\r\n                } else if (headByte === JPType.EXT16) {\r\n                    size = reader.uint16;\r\n                } else if (headByte === JPType.EXT32) {\r\n                    size = reader.uint32;\r\n                }\r\n\r\n                const type = reader.ubyte;\r\n\r\n                if(type == JPExtType.Maps){\r\n                    this.validJSON = false;\r\n                    if (size !== 0) {\r\n                        this.pushMapState(size);\r\n\r\n                        continue DECODE;\r\n                    } else {\r\n                        object = new Map();\r\n                    }\r\n                } else if(type == JPExtType.Sets){\r\n                    this.validJSON = false;\r\n                    if (size !== 0) {\r\n                        this.pushSetState(size);\r\n\r\n                        continue DECODE;\r\n                    } else {\r\n                        object = new Set();\r\n                    }\r\n                } else {\r\n                    object = this.decodeExtension(reader, size, type);\r\n                }\r\n            } else if (headByte > JPType.EXT32) {\r\n                // negative fixint\r\n                object = headByte - 0x100;\r\n            } else {\r\n                this.throwError(` Outside of index error 0x${headByte.toString(16).padStart(2, \"0\")} `+ this.fileName);\r\n            }\r\n\r\n            const stack = this.stack;\r\n\r\n            while (stack.length > 0) {\r\n                // arrays and maps\r\n                const state = stack.top()!;\r\n                if (state.type === STATE_ARRAY) {\r\n                    state.array[state.position] = object;\r\n\r\n                    state.position++;\r\n\r\n                    if (state.position === state.size) {\r\n                        object = state.array;\r\n\r\n                        stack.release(state);\r\n                    } else {\r\n                        continue DECODE;\r\n                    }\r\n                } else if (state.type === STATE_SET) {\r\n                    state.set.add(object);\r\n\r\n                    state.position++;\r\n\r\n                    if (state.position === state.size) {\r\n                        object = state.set;\r\n\r\n                        stack.release(state);\r\n                    } else {\r\n                        continue DECODE;\r\n                    }\r\n                } else if (state.type === STATE_OBJECT_KEY) {\r\n                    if (object === \"__proto__\") {\r\n                        this.throwError(\" The key __proto__ is not allowed \" + this.fileName);\r\n                    }\r\n\r\n                    state.key = this.mapKeyConverter(object);\r\n\r\n                    state.type = STATE_OBJECT_VALUE;\r\n\r\n                    continue DECODE;\r\n                } else if (state.type === STATE_OBJECT_VALUE) {\r\n                    state.object[state.key!] = object;\r\n\r\n                    state.readCount++;\r\n\r\n                    if (state.readCount === state.size) {\r\n                        object = state.object;\r\n\r\n                        stack.release(state);\r\n                    } else {\r\n                        state.key = null;\r\n\r\n                        state.type = STATE_OBJECT_KEY;\r\n\r\n                        continue DECODE;\r\n                    }\r\n                } else if (state.type === STATE_MAP_KEY) {\r\n                    if (object === \"__proto__\") {\r\n                        this.throwError(\" The key __proto__ is not allowed \" + this.fileName);\r\n                    }\r\n\r\n                    state.key = this.mapKeyConverter(object);\r\n\r\n                    state.type = STATE_MAP_VALUE;\r\n\r\n                    continue DECODE;\r\n                } else if (state.type === STATE_MAP_VALUE) {\r\n                    // it must be `state.type === State.MAP_VALUE` here\r\n\r\n                    state.map.set(state.key!, object);\r\n\r\n                    state.readCount++;\r\n\r\n                    if (state.readCount === state.size) {\r\n                        object = state.map;\r\n\r\n                        stack.release(state);\r\n                    } else {\r\n                        state.key = null;\r\n\r\n                        state.type = STATE_MAP_KEY;\r\n                        \r\n                        continue DECODE;\r\n                    }\r\n                }\r\n            }\r\n            return object;\r\n        }\r\n    };\r\n\r\n    private pushMapState(size: number) {\r\n        this.stack.pushMapState(size);\r\n    };\r\n\r\n    private pushObjectState(size: number) {\r\n        this.stack.pushObjectState(size);\r\n    };\r\n\r\n    private pushArrayState(size: number) {\r\n        this.stack.pushArrayState(size);\r\n    };\r\n\r\n    private pushSetState(size: number) {\r\n        this.stack.pushSetState(size);\r\n    };\r\n\r\n    private readString(headByte: number) {\r\n        if (this.valueReader == null) {\r\n            this.throwError(\" Value reader not set. \" + this.fileName);\r\n        }\r\n\r\n        var value = \"\";\r\n\r\n        if ((headByte >= JPType.STR_0 && headByte <= JPType.STR_15) || // strings\r\n            (headByte >= JPType.STR8 && headByte <= JPType.STR32)\r\n        ) {\r\n            var index = 0;\r\n\r\n            if (headByte <= JPType.STR_15) {\r\n                index = headByte - JPType.STR_0;\r\n            } else if (headByte === JPType.STR8) {\r\n                index = this.valueReader.ubyte;\r\n            } else if (headByte === JPType.STR16) {\r\n                index = this.valueReader.uint16;\r\n            } else if (headByte === JPType.STR32) {\r\n                index = this.valueReader.uint32;\r\n            }\r\n            if (this.stringsList[index] === undefined) {\r\n                this.addError(` Did not find string value for index ` + index + \" in file \" + this.fileName);\r\n            } else {\r\n                value = this.stringsList[index];\r\n            }\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    private decodeExtension(valueReader: BiReader | BiReaderStream, size: number, extType :number): unknown {\r\n        let retValue:unknown, data: Buffer, holder: Uint8Array;\r\n\r\n        switch (extType) {\r\n            case JPExtType.Symbol:\r\n                this.validJSON = false;\r\n                // bool and string\r\n                const global = valueReader.ubyte == JPType.BOOL_TRUE ? true : false;\r\n\r\n                var headByte = valueReader.ubyte;\r\n\r\n                const key = this.readString(headByte);\r\n\r\n                retValue = global ? Symbol.for(key) : Symbol(key);\r\n\r\n                this.symbolList.push(retValue as symbol);\r\n\r\n                break;\r\n            case JPExtType.RegEx:\r\n                this.validJSON = false;\r\n                // two strings\r\n                const source = this.readString(valueReader.ubyte);\r\n\r\n                const flags = this.readString(valueReader.ubyte);\r\n\r\n                retValue = new RegExp(source, flags);\r\n\r\n                break;\r\n            case JPExtType.Maps:\r\n                this.validJSON = false;\r\n                // handled before\r\n                break;\r\n            case JPExtType.Sets:\r\n                this.validJSON = false;\r\n                // handled before\r\n                break;\r\n            case JPExtType.BigUint64Array:\r\n                data = valueReader.extract(size, true) as Buffer;\r\n\r\n                holder = new Uint8Array(data);\r\n\r\n                retValue = new BigUint64Array(holder.buffer);\r\n\r\n                break;\r\n            case JPExtType.BigInt64Array:\r\n                data = valueReader.extract(size, true) as Buffer;\r\n\r\n                holder = new Uint8Array(data);\r\n\r\n                retValue = new BigInt64Array(holder.buffer);\r\n\r\n                break;\r\n            case JPExtType.Float64Array:\r\n                data = valueReader.extract(size, true) as Buffer;\r\n\r\n                holder = new Uint8Array(data);\r\n\r\n                retValue = new Float64Array(holder.buffer);\r\n\r\n                break;\r\n            case JPExtType.Float32Array:\r\n                data = valueReader.extract(size, true) as Buffer;\r\n\r\n                holder = new Uint8Array(data);\r\n\r\n                retValue = new Float32Array(holder.buffer);\r\n\r\n                break;\r\n            case JPExtType.Float16Array:\r\n                data = valueReader.extract(size, true) as Buffer;\r\n\r\n                holder = new Uint8Array(data);\r\n                // not in use yet\r\n                //retValue = new Float16Array(holder.buffer);\r\n\r\n                break;\r\n            case JPExtType.Int32Array:\r\n                data = valueReader.extract(size, true) as Buffer;\r\n\r\n                holder = new Uint8Array(data);\r\n\r\n                retValue = new Int32Array(holder.buffer);\r\n\r\n                break;\r\n            case JPExtType.Uint32Array:\r\n                data = valueReader.extract(size, true) as Buffer;\r\n\r\n                holder = new Uint8Array(data);\r\n\r\n                retValue = new Uint32Array(holder.buffer);\r\n\r\n                break;\r\n            case JPExtType.Uint16Array:\r\n                data = valueReader.extract(size, true) as Buffer;\r\n\r\n                holder = new Uint8Array(data);\r\n\r\n                retValue = new Uint16Array(holder.buffer);\r\n\r\n                break;\r\n            case JPExtType.Int16Array:\r\n                data = valueReader.extract(size, true) as Buffer;\r\n\r\n                holder = new Uint8Array(data);\r\n\r\n                retValue = new Int16Array(holder.buffer);\r\n\r\n                break;\r\n            case JPExtType.Int8Array:\r\n                data = valueReader.extract(size, true) as Buffer;\r\n\r\n                holder = new Uint8Array(data);\r\n\r\n                retValue = new Int8Array(holder.buffer);\r\n\r\n                break;\r\n            case JPExtType.Uint8Array:\r\n                data = valueReader.extract(size, true) as Buffer;\r\n\r\n                retValue = new Uint8Array(data);\r\n\r\n                break;\r\n            case JPExtType.Uint8ClampedArray:\r\n                data = valueReader.extract(size, true) as Buffer;\r\n\r\n                holder = new Uint8Array(data);\r\n\r\n                retValue = new Uint8ClampedArray(holder.buffer);\r\n\r\n                break;\r\n            case JPExtType.Buffer:\r\n                retValue = valueReader.extract(size, true);\r\n\r\n                retValue = Buffer.from(retValue as Buffer);\r\n\r\n                break;\r\n            case JPExtType.Date:\r\n                data = valueReader.extract(size, true) as Buffer;\r\n\r\n                const br = new BiReader(data);\r\n\r\n                br.endian = this.endian;\r\n\r\n                switch (br.size) {\r\n                    case 4: {\r\n                        // timestamp 32 = { sec32 }\r\n                        const sec = br.uint32;\r\n\r\n                        const nsec = 0;\r\n\r\n                        retValue = new Date(sec * 1e3 + nsec / 1e6);\r\n\r\n                        break;\r\n                    }\r\n                    case 8: {\r\n                        // timestamp 64 = { nsec30, sec34 }\r\n                        const nsec30AndSecHigh2 = br.uint32;\r\n\r\n                        const secLow32 = br.uint32;\r\n\r\n                        const sec = (nsec30AndSecHigh2 & 0x3) * 0x100000000 + secLow32;\r\n\r\n                        const nsec = nsec30AndSecHigh2 >>> 2;\r\n\r\n                        retValue = new Date(sec * 1e3 + nsec / 1e6);\r\n\r\n                        break;\r\n                    }\r\n                    case 12: {\r\n                        // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\r\n                        const nsec = br.uint32;\r\n                        \r\n                        const sec = Number(br.int64);\r\n\r\n                        retValue = new Date(sec * 1e3 + nsec / 1e6);\r\n                    }\r\n                    default:\r\n                        this.throwError(` Unrecognized data size for timestamp (expected 4, 8, or 12): ${br.size} in file ` + this.fileName);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if(retValue == undefined){\r\n            const data = valueReader.extract(size, true) as Buffer;\r\n\r\n            const br = new BiReader(data);\r\n\r\n            br.endian = this.endian;\r\n\r\n            retValue = this.extensionCodec.decode(br, this, extType, this.context);\r\n        }\r\n\r\n        return retValue;\r\n    };\r\n\r\n    //////////////\r\n    // FINALIZE //\r\n    //////////////\r\n\r\n    private decrypt(br?: BiWriterStream, buffer?:Buffer, finalSize?: number) {\r\n        const cypter = new Crypt(this.encryptionKey);\r\n\r\n        if (!this.useStream) {\r\n            if(buffer == null){\r\n                this.throwError(\" Buffer to decrypt not set. \" + this.fileName);\r\n            }\r\n\r\n            const decrypted = cypter.decrypt(buffer);\r\n\r\n            if(decrypted.length != finalSize){\r\n                this.addError(` Decrypted buffer size of ${decrypted.length} wasn expected size of ${finalSize} in file ` + this.fileName);\r\n            }\r\n\r\n            return decrypted;\r\n        } else {\r\n            const CHUNK_SIZE = 16;\r\n            \r\n            br.open();\r\n\r\n            br.gotoStart();\r\n\r\n            var buff = Buffer.alloc(0);\r\n\r\n            var data: Buffer;\r\n\r\n            let bytesToProcess = br.size;\r\n\r\n            let bytesStart = 0;\r\n\r\n            let bytesRead = 0;\r\n\r\n            let amount = Math.ceil(br.size / CHUNK_SIZE);\r\n\r\n            for (let index = 0; index < amount; index++) {\r\n                bytesRead = Math.min(CHUNK_SIZE, bytesToProcess);\r\n\r\n                buff = br.read(bytesStart, bytesRead) as Buffer;\r\n\r\n                if(index == (amount - 1)) {\r\n                    data = cypter.decrypt_block(buff, true);\r\n                } else {\r\n                    data = cypter.decrypt_block(buff);\r\n                }\r\n\r\n                if(data.length != 0){\r\n                    br.overwrite(data, true);\r\n                }\r\n\r\n                bytesStart += buff.length;\r\n\r\n                bytesToProcess -= buff.length;\r\n            }\r\n\r\n            data = cypter.decrypt_final();\r\n    \r\n            if(data.length != 0){\r\n                br.overwrite(data, true);\r\n            }\r\n\r\n            br.trim();\r\n\r\n            if(br.size != finalSize){\r\n                this.addError(` Decrypted buffer size of ${br.size} was expected size of ${finalSize} in file ` + this.fileName);\r\n            }\r\n\r\n            return Buffer.alloc(0);\r\n        }\r\n    };\r\n}","import { Crypt, CRC32 } from './hash.js';\r\nimport { BiWriter, BiWriterStream } from 'bireader';\r\nimport { JPExtensionCodec, JPExtensionCodecType, JPExtData } from \"./ext.js\";\r\nimport {\r\n    VERSION_MAJOR,\r\n    VERSION_MINOR,\r\n    deflateFileSync,\r\n    deflateBuffer,\r\n    isFloat32Safe,\r\n    endian,\r\n    ubyte,\r\n    uint16,\r\n    uint32,\r\n    JPType,\r\n    JPExtType,\r\n    stringList,\r\n    JPBase,\r\n    ContextOf\r\n} from './common.js';\r\n\r\n/**\r\n * Options for `JPEncode`\r\n */\r\nexport type EncoderOptions<ContextType = undefined> = Partial<\r\n    Readonly<{\r\n        extensionCodec?: JPExtensionCodecType<ContextType>;\r\n\r\n        context?: ContextType;\r\n        /**\r\n         * Set the Endianness of the file.\r\n         * \r\n         * Defaults to `little`.\r\n         */\r\n        endian?: endian;\r\n\r\n        /**\r\n         * If you want the file Buffer to be encrypted.\r\n         * \r\n         * The key data to decrypt the file is kept within the file.\r\n         * \r\n         * For extra security you can exclude this key from the file with `stripEncryptKey`.\r\n         * \r\n         * If you do, you must save the `encryptionKey` object number after decoding or you won't be able to decrypt it later.\r\n         * \r\n         * If you can also set your own 32 bit encryption key with `encryptionKey` in options here.\r\n         * \r\n         * Note: It's highly recommended that you also use the `CRC32` to check the file after decryption to make sure the data is correct afterward.\r\n         * \r\n         * Defaults to `false`.\r\n         */\r\n        encrypt?: boolean;\r\n\r\n        /**\r\n         * You can set your own 32 bit encryption key.\r\n         * \r\n         * If you use `stripEncryptKey` you must save this value for later use. Can also be found in the `EncryptionKey` object after encoding.\r\n         * \r\n         * Will be randomly assigned otherwise.\r\n         */\r\n        encryptionKey?: uint32;\r\n\r\n        /**\r\n         * Will remove the encryption key from the file.\r\n         * \r\n         * You must save the `EncryptionKey` object number after decoding or you won't be able to decrypt the file later.\r\n         * \r\n         * Defaults to `false`.\r\n         */\r\n        stripEncryptKey?: boolean;\r\n\r\n        /**\r\n         * Include a CRC32 hash check on the file. Hash is included in the file.\r\n         * \r\n         * Hash can also be found in the `CRC32` object.\r\n         * \r\n         * Defaults to `false`.\r\n         */\r\n        CRC32?: boolean;\r\n\r\n        /**\r\n         * Can futher decrease the file size with zlib.\r\n         * \r\n         * Compression happens first before encrypted.\r\n         * \r\n         * Defaults to `false`.\r\n         */\r\n        compress?: boolean;\r\n\r\n        /**\r\n         * For extra security you can strip all object keys from the data creating a \"schema\" like file.\r\n         * \r\n         * You must save the `keysArray` object after encoding or you won't be able to decode the file later.\r\n         * \r\n         * Defaults to `false`.\r\n         */\r\n        stripKeys?: boolean;\r\n    }>\r\n> &\r\n    ContextOf<ContextType>;\r\n\r\n/**\r\n * Create with `EncoderOptions`\r\n */\r\nexport class JPEncode<ContextType = undefined> extends JPBase {\r\n    private readonly extensionCodec: JPExtensionCodecType<ContextType>;\r\n\r\n    private readonly context: ContextType;\r\n\r\n    private stringList = new stringList();\r\n\r\n    private keyList = new stringList();\r\n\r\n    private depth = 0;\r\n\r\n    ////////////////\r\n    // CONSTANTS  //\r\n    ////////////////\r\n\r\n    /**\r\n     * JP or PJ\r\n     */\r\n    MAGIC: uint16 = 0x504A;\r\n\r\n    /**\r\n     * Endianness. Defaults to ``little``\r\n     */\r\n    endian: endian = \"little\";\r\n\r\n    /**\r\n     * Build verion number to check the file creation params\r\n     */\r\n    get VERSION_MAJOR(): ubyte {\r\n        return VERSION_MAJOR;\r\n    };\r\n\r\n    /**\r\n     * Build verion number to check the file creation params\r\n     */\r\n    get VERSION_MINOR(): ubyte {\r\n        return VERSION_MINOR;\r\n    };\r\n\r\n    CRC32Hash = 0;\r\n\r\n    /**\r\n     * Set up with basic options\r\n     * \r\n     * @param {EncoderOptions?} encodeOptions - options for encoding\r\n     */\r\n    constructor(encodeOptions?: EncoderOptions<ContextType>) {\r\n        super();\r\n\r\n        this.extensionCodec = encodeOptions?.extensionCodec ?? (JPExtensionCodec.defaultCodec as JPExtensionCodecType<ContextType>);\r\n\r\n        this.context = (encodeOptions as { context: ContextType } | undefined)?.context as ContextType; // needs a type assertion because EncoderOptions has no context property when ContextType is undefined\r\n\r\n        this.endian = encodeOptions?.endian ? encodeOptions.endian : \"little\";\r\n\r\n        this.Encrypted = encodeOptions?.encrypt ? 1 : 0;\r\n\r\n        this.EncryptionExcluded = encodeOptions?.stripEncryptKey ? 1 : 0;\r\n\r\n        this.encryptionKey = encodeOptions?.encryptionKey ? encodeOptions.encryptionKey : 0;\r\n\r\n        this.Compressed = encodeOptions?.compress ? 1 : 0;\r\n\r\n        this.KeyStripped = encodeOptions?.stripKeys ? 1 : 0;\r\n\r\n        this.Crc32 = encodeOptions?.CRC32 ? 1 : 0;\r\n    };\r\n\r\n    private clone() {\r\n        // Because of slightly special argument `context`,\r\n        // type assertion is needed.\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n        return new JPEncode<ContextType>({\r\n            extensionCodec: this.extensionCodec,\r\n\r\n            context: this.context,\r\n\r\n            endian: this.endian,\r\n\r\n            Encrypted: this.Encrypted,\r\n\r\n            EncryptionExcluded: this.EncryptionExcluded,\r\n\r\n            EncryptionKey: this.encryptionKey,\r\n\r\n            Compressed: this.Compressed,\r\n\r\n            KeyStripped: this.KeyStripped,\r\n\r\n            Crc32: this.Crc32,\r\n\r\n            fileName: this.fileName,\r\n\r\n            useStream: this.useStream,\r\n\r\n            valueWriter: this.valueWriter,\r\n\r\n            strWriter: this.strWriter,\r\n\r\n            keysArray: this.keysArray,\r\n\r\n            compWriter: this.compWriter\r\n\r\n            //TODO may need more here\r\n        } as any);\r\n    };\r\n\r\n    /**\r\n     * Basic encode, will run options that were set in constructor.\r\n     * \r\n     * @param {any} object - Data to encode\r\n     * @param {string} filePath - Optional file path to write the file to directly\r\n     * @returns {Buffer}\r\n     */\r\n    public encode(object: unknown, filePath?: string): Buffer {\r\n        if (this.entered) {\r\n            const instance = this.clone();\r\n\r\n            return instance.encode(object, filePath);\r\n        }\r\n\r\n        this.fileName = filePath ? filePath : \"\";\r\n\r\n        if (this.fileName != \"\") {\r\n            this.useStream = true;\r\n        }\r\n\r\n        try {\r\n            this.entered = true;\r\n\r\n            this.reinitializeState();\r\n\r\n            if (this.valueWriter == null || this.strWriter == null) {\r\n                this.throwError(\" Didn't create writers. \" + this.fileName);\r\n            }\r\n\r\n            this.doEncode(this.valueWriter, object, 1);\r\n\r\n            this.valueWriter.ubyte = JPType.FINISHED;\r\n\r\n            this.valueWriter.trim();\r\n\r\n            this.VALUE_SIZE = this.valueWriter.size;\r\n\r\n            this.writeStringsData();\r\n\r\n            this.strWriter.ubyte = JPType.FINISHED;\r\n\r\n            this.strWriter.trim();\r\n\r\n            this.STR_SIZE = this.strWriter.size;\r\n\r\n            if (this.KeyStripped) {\r\n                this.keysArray = this.keyList.getValues();\r\n            }\r\n\r\n            this.finalizeBuffers();\r\n\r\n            this.headerBuffer = this.buildHeader();\r\n\r\n            if (this.compWriter == null) {\r\n                this.throwError(\" Didn't create writer. \" + this.fileName);\r\n            }\r\n\r\n            if (!this.useStream) {\r\n                const compBuffer = this.compWriter.data;\r\n\r\n                return Buffer.concat([this.headerBuffer, compBuffer]);\r\n            } else {\r\n                const fileFile = new BiWriterStream(this.fileName);\r\n\r\n                fileFile.overwrite(this.headerBuffer,true);\r\n\r\n                fileFile.overwrite(this.compWriter.read(0,this.compWriter.size),true);\r\n\r\n                this.compWriter.deleteFile();\r\n                // dummy buffer\r\n                return Buffer.alloc(0);\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n\r\n            return Buffer.alloc(0);\r\n        } finally {\r\n            this.entered = false;\r\n        }\r\n    };\r\n\r\n    private reinitializeState() {\r\n        if (this.useStream) {\r\n            this.valueWriter = new BiWriterStream(this.fileName + \".values\", { extendBufferSize: 2048 });\r\n\r\n            this.valueWriter.endian = this.endian;\r\n\r\n            this.strWriter = new BiWriterStream(this.fileName + \".strings\", { extendBufferSize: 2048 });\r\n\r\n            this.strWriter.endian = this.endian;\r\n        } else {\r\n            this.valueWriter = new BiWriter(Buffer.alloc(2048), { extendBufferSize: 2048 });\r\n\r\n            this.valueWriter.endian = this.endian;\r\n\r\n            this.strWriter = new BiWriter(Buffer.alloc(2048), { extendBufferSize: 2048 });\r\n\r\n            this.strWriter.endian = this.endian;\r\n        }\r\n    };\r\n\r\n    private doEncode(valueWriter:BiWriter|BiWriterStream, object: unknown, depth: number) {\r\n        this.depth = depth;\r\n\r\n        if (object === null) {\r\n            return this.encodeNull(valueWriter);\r\n        } else if (object === undefined) {\r\n            return this.encodeUndefined(valueWriter);\r\n        } else if (typeof object === \"boolean\") {\r\n            return this.encodeBoolean(valueWriter, object);\r\n        } else if (typeof object === \"number\") {\r\n            return this.encodeNumber(valueWriter, object);\r\n        } else if (typeof object === \"string\") {\r\n            return this.encodeString(valueWriter, object, false);\r\n        } else if (typeof object === \"bigint\") {\r\n            return this.encodeBigInt64(valueWriter, object);\r\n        } else if (typeof object === \"symbol\") {\r\n            return this.encodeSymbol(valueWriter, object); // EXT\r\n        } else {\r\n            // if (typeof object === \"object\")\r\n            const ext = this.extensionCodec.tryToEncode(object, this, this.context);\r\n\r\n            if (ext != null) {\r\n                return this.encodeExtension(valueWriter, ext); //EXT\r\n            } else if (Array.isArray(object)) {\r\n                return this.encodeArray(valueWriter, object, this.depth);\r\n            } else if (object instanceof Map) {\r\n                return this.encodeMap(valueWriter, object, this.depth); // EXT\r\n            } else if (object instanceof Set) {\r\n                return this.encodeSet(valueWriter, object, this.depth); // EXT\r\n            } else if (object instanceof RegExp) {\r\n                return this.encodeRegEx(valueWriter, object); // EXT\r\n            } else if (ArrayBuffer.isView(object) || object instanceof Buffer) {\r\n                return this.encodeBinary(valueWriter, object); // EXT\r\n            } else if (object instanceof Date) {\r\n                return this.encodeDate(valueWriter, object); // EXT\r\n            } else if (typeof object === \"object\") {\r\n                return this.encodeObject(valueWriter, object as Record<string, unknown>, this.depth);\r\n            } else {\r\n                // function and other special object come here unless extensionCodec handles them.\r\n                this.throwError(` Unrecognized object: ${Object.prototype.toString.apply(object)} ` + this.fileName);\r\n            }\r\n        }\r\n    };\r\n\r\n    //////////////\r\n    // STANDARD //\r\n    //////////////\r\n\r\n    /**\r\n     * Writes an `Object` to the buffer as `Record<string, unknown>`\r\n     * \r\n     * @param valueWriter - Writer\r\n     * @param object - Data to encode\r\n     * @param depth - Level depth within the master object. Leave blank unless you have a reason for adding to running loop.\r\n     * @returns The `number` of bytes written\r\n     */\r\n    encodeObject(valueWriter: BiWriter|BiWriterStream, object: Record<string, unknown>, depth?: number) {\r\n        if(depth == undefined){\r\n            depth = this.depth;\r\n        }\r\n        \r\n        var length = 1;\r\n\r\n        const keys = Object.keys(object);\r\n\r\n        const size = keys.length;\r\n\r\n        if (size < 16) {\r\n            // fixmap\r\n            valueWriter.ubyte = JPType.OBJECT_0 + size;\r\n        } else if (size < 0x100) {\r\n            // map 8\r\n            valueWriter.ubyte = JPType.OBJECT8;\r\n\r\n            valueWriter.ubyte = size;\r\n\r\n            length++;\r\n        } else if (size < 0x10000) {\r\n            // map 16\r\n            valueWriter.ubyte = JPType.OBJECT16;\r\n\r\n            valueWriter.ushort = size;\r\n\r\n            length += 2;\r\n        } else if (size < 0x100000000) {\r\n            // map 32\r\n            valueWriter.ubyte = JPType.OBJECT32;\r\n\r\n            valueWriter.uint32 = size;\r\n\r\n            length += 4;\r\n        } else {\r\n            this.throwError(` Too large map object: ${size} in file ` + this.fileName);\r\n        }\r\n\r\n        for (const key of keys) {\r\n            const value = object[key];\r\n\r\n            length += this.encodeString(valueWriter, key, true);\r\n\r\n            length += this.doEncode(valueWriter,  value, depth + 1);\r\n\r\n        }\r\n        return length;\r\n    };\r\n\r\n    /**\r\n     * Writes an `Array` to the buffer as `Array<unknown>`\r\n     * \r\n     * @param valueWriter - Writer\r\n     * @param array - Data to encode\r\n     * @param depth - Level depth within the master object. Leave blank unless you have a reason for adding to running loop.\r\n     * @returns The `number` of bytes written\r\n     */\r\n    encodeArray(valueWriter:BiWriter|BiWriterStream, array: Array<unknown>, depth?: number) {\r\n        if(depth == undefined){\r\n            depth = this.depth;\r\n        }\r\n\r\n        var length = 1;\r\n\r\n        const size = array.length;\r\n\r\n        if (size < 16) {\r\n            // fixarray\r\n            valueWriter.ubyte = JPType.ARRAY_0 + size;\r\n        } else if (size < 0x100) {\r\n            // uint8\r\n            valueWriter.ubyte = JPType.ARRAY8;\r\n\r\n            valueWriter.ubyte = size;\r\n\r\n            length++;\r\n        } else if (size < 0x10000) {\r\n            // array 16\r\n            valueWriter.ubyte = JPType.ARRAY16;\r\n\r\n            valueWriter.ushort = size;\r\n\r\n            length += 2;\r\n        } else if (size < 0x100000000) {\r\n            // array 32\r\n            valueWriter.ubyte = JPType.ARRAY32;\r\n\r\n            valueWriter.uint32 = size;\r\n\r\n            length += 4;\r\n        } else {\r\n            this.throwError(` Too large array: ${size} in file ` + this.fileName);\r\n        }\r\n\r\n        for (const item of array) {\r\n            length += this.doEncode(valueWriter, item, depth + 1);\r\n        }\r\n\r\n        return length;\r\n    };\r\n\r\n    /**\r\n     * Writes a `string` to the buffer's string section.\r\n     * \r\n     * @param valueWriter - Writer\r\n     * @param string - Data to encode\r\n     * @param isKey If the string is used a an Object key. Only used when `stripKeys` is enabled.\r\n     * @returns The `number` of bytes written\r\n     */\r\n    encodeString(valueWriter:BiWriter|BiWriterStream, string: string, isKey?: boolean) {\r\n        if(isKey == undefined){\r\n            isKey = false;\r\n        }\r\n\r\n        var length = 1;\r\n\r\n        if (isKey && this.KeyStripped) {\r\n            const index = this.keyList.add(string);\r\n\r\n            if (index < 16) {\r\n                valueWriter.ubyte = JPType.KEY_0 + index;\r\n            } else if (index < 0x100) {\r\n                // uint8\r\n                valueWriter.ubyte = JPType.KEY8;\r\n\r\n                valueWriter.ubyte = index;\r\n\r\n                length++;\r\n            } else if (index < 0x10000) {\r\n                // unit16\r\n                valueWriter.ubyte = JPType.KEY16;\r\n\r\n                valueWriter.ushort = index;\r\n\r\n                length += 2;\r\n            } else if (index < 0x100000000) {\r\n                // unit32\r\n                valueWriter.ubyte = JPType.KEY32;\r\n\r\n                valueWriter.ushort = index;\r\n\r\n                length += 4;\r\n            } else {\r\n                this.throwError(` String index too long: ${index} in file ` + this.fileName);\r\n            }\r\n        } else {\r\n            const index = this.stringList.add(string);\r\n\r\n            if (index < 16) {\r\n                valueWriter.ubyte = JPType.STR_0 + index;\r\n            } else if (index < 0x100) {\r\n                // uint8\r\n                valueWriter.ubyte = JPType.STR8;\r\n\r\n                valueWriter.ubyte = index;\r\n\r\n                length++;\r\n            } else if (index < 0x10000) {\r\n                // unit16\r\n                valueWriter.ubyte = JPType.STR16;\r\n\r\n                valueWriter.ushort = index;\r\n\r\n                length += 2;\r\n            } else if (index < 0x100000000) {\r\n                // unit32\r\n                valueWriter.ubyte = JPType.STR32;\r\n\r\n                valueWriter.ushort = index;\r\n\r\n                length += 4;\r\n            } else {\r\n                this.throwError(` String index too long: ${index} in file ` + this.fileName);\r\n            }\r\n        }\r\n\r\n        return length;\r\n    };\r\n\r\n    /**\r\n     * Writes a `null` to the buffer\r\n     * \r\n     * @param valueWriter - Writer\r\n     * @returns The `number` of bytes written\r\n     */\r\n    encodeNull(valueWriter:BiWriter|BiWriterStream) {\r\n        valueWriter.ubyte = JPType.NULL;\r\n\r\n        return 1;\r\n    };\r\n\r\n    /**\r\n     * Writes an `undefined` to the buffer\r\n     * \r\n     * @param valueWriter - Writer\r\n     * @returns The `number` of bytes written\r\n     */\r\n    encodeUndefined(valueWriter:BiWriter|BiWriterStream) {\r\n        valueWriter.ubyte = JPType.UNDEFINED;\r\n\r\n        return 1;\r\n    };\r\n\r\n    /**\r\n     * Writes a `boolean` true or false to the buffer\r\n     * \r\n     * @param valueWriter - Writer\r\n     * @param object - `true` or `false`\r\n     * @returns The `number` of bytes written\r\n     */\r\n    encodeBoolean(valueWriter:BiWriter|BiWriterStream, object: boolean) {\r\n        if (object === false) {\r\n            valueWriter.ubyte = JPType.BOOL_FALSE;\r\n        } else {\r\n            valueWriter.ubyte = JPType.BOOL_TRUE;\r\n        }\r\n\r\n        return 1;\r\n    };\r\n\r\n    /**\r\n     * Writes an \"finished\" byte to the buffer. End the loop when hit if not finished otherwise.\r\n     * \r\n     * @param valueWriter - Writer\r\n     * @returns The `number` of bytes written\r\n     */\r\n    encodeFinished(valueWriter:BiWriter|BiWriterStream){\r\n        valueWriter.ubyte = JPType.FINISHED;\r\n\r\n        return 1;\r\n    };\r\n\r\n    /**\r\n     * Writes a \"list end\" byte to the buffer, useful when pulling loose data and don't want to break the whole loop.\r\n     * \r\n     * @param valueWriter - Writer\r\n     * @returns The `number` of bytes written\r\n     */\r\n    encodeListEnd(valueWriter:BiWriter|BiWriterStream){\r\n        valueWriter.ubyte = JPType.LIST_END;\r\n\r\n        return 1;\r\n    };\r\n\r\n    /**\r\n     * Writes a `number` to the buffer . Computes the right byte size base on value.\r\n     * \r\n     * Notes: Use `encodeBigInt64` for `bigint` types.\r\n     * \r\n     * @param valueWriter - Writer\r\n     * @param number - Data to encode\r\n     * @returns The `number` of bytes written\r\n     */\r\n    encodeNumber(valueWriter:BiWriter|BiWriterStream, number: number) {\r\n        var length = 1;\r\n\r\n        if (Number.isSafeInteger(number)) {\r\n            if (number >= 0) {\r\n                if (number < 0x80) {\r\n                    // positive fixint\r\n                    valueWriter.ubyte = number;\r\n                } else if (number < 0x100) {\r\n                    // uint 8\r\n                    valueWriter.ubyte = JPType.UINT_8;\r\n\r\n                    valueWriter.ubyte = number;\r\n\r\n                    length++;\r\n                } else if (number < 0x10000) {\r\n                    // uint 16\r\n                    valueWriter.ubyte = JPType.UINT_16;\r\n\r\n                    valueWriter.ushort = number;\r\n\r\n                    length += 2;\r\n                } else if (number < 0x100000000) {\r\n                    // uint 32\r\n                    valueWriter.ubyte = JPType.UINT_32;\r\n\r\n                    valueWriter.uint = number;\r\n\r\n                    length += 4;\r\n                } else {\r\n                    // uint 64\r\n                    valueWriter.ubyte = JPType.UINT_64;\r\n\r\n                    valueWriter.uint64 = number;\r\n\r\n                    length += 8;\r\n                }\r\n            } else {\r\n                if (number >= -0x20) {\r\n                    // negative fixint\r\n                    valueWriter.byte = number;\r\n                } else if (number >= -0x80) {\r\n                    // int 8\r\n                    valueWriter.ubyte = JPType.INT_8;\r\n\r\n                    valueWriter.byte = number;\r\n\r\n                    length++;\r\n                } else if (number >= -0x8000) {\r\n                    // int 16\r\n                    valueWriter.ubyte = JPType.INT_16;\r\n\r\n                    valueWriter.int16 = number;\r\n\r\n                    length += 2;\r\n                } else if (number >= -0x80000000) {\r\n                    // int 32\r\n                    valueWriter.ubyte = JPType.INT_32;\r\n\r\n                    valueWriter.int32 = number;\r\n\r\n                    length += 4;\r\n                } else {\r\n                    // int 64\r\n                    valueWriter.ubyte = JPType.INT_64;\r\n\r\n                    valueWriter.int64 = number;\r\n\r\n                    length += 8;\r\n                }\r\n            }\r\n\r\n            return length;\r\n        } else {\r\n            return this.encodeNumberAsFloat(valueWriter, number);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Writes a `bigint` to the buffer. Always written as a 64 bit value.\r\n     * \r\n     * @param valueWriter - Writer\r\n     * @param bigint - Data to encode\r\n     * @returns The `number` of bytes written\r\n     */\r\n    encodeBigInt64(valueWriter:BiWriter|BiWriterStream, bigint: bigint) {\r\n        var length = 0;\r\n\r\n        if (bigint >= BigInt(0)) {\r\n            // uint 64\r\n            valueWriter.ubyte = JPType.UINT_64; length++;\r\n\r\n            valueWriter.uint64 = bigint; length += 8;\r\n        } else {\r\n            // int 64\r\n            valueWriter.ubyte = JPType.INT_64; length++;\r\n\r\n            valueWriter.int64 = bigint; length += 8;\r\n        }\r\n\r\n        return length;\r\n    };\r\n\r\n    private encodeStringHeader(byteLength: number) {\r\n        var length = 1;\r\n\r\n        if (this.strWriter == null) {\r\n            this.throwError(\" Didn't create writer. \" + this.fileName);\r\n        }\r\n\r\n        if (byteLength < 16) {\r\n            // fixstr\r\n            this.strWriter.ubyte = JPType.STR_0 + byteLength;\r\n        } else if (byteLength < 0x100) {\r\n            // str 8\r\n            this.strWriter.ubyte = JPType.STR8;\r\n\r\n            this.strWriter.ubyte = byteLength;\r\n\r\n            length++;\r\n        } else if (byteLength < 0x10000) {\r\n            // str 16\r\n            this.strWriter.ubyte = JPType.STR16;\r\n\r\n            this.strWriter.uint16 = byteLength;\r\n\r\n            length += 2;\r\n        } else if (byteLength < 0x100000000) {\r\n            // str 32\r\n            this.strWriter.ubyte = JPType.STR32;\r\n\r\n            this.strWriter.uint32 = byteLength;\r\n\r\n            length += 4;\r\n        } else {\r\n            this.throwError(` Too long string: ${byteLength} bytes in UTF-8 in file ` + this.fileName);\r\n        }\r\n        return length;\r\n    };\r\n\r\n    private writeString(object: string) {\r\n        if (this.strWriter == null) {\r\n            this.throwError(\" Didn't create writer. \" + this.fileName);\r\n        }\r\n\r\n        const encoder = new TextEncoder();\r\n\r\n        const encodedString = encoder.encode(object);\r\n\r\n        const byteLength = encodedString.length;\r\n\r\n        var length = this.encodeStringHeader(byteLength);\r\n\r\n        this.strWriter.string(object, { length: byteLength });\r\n\r\n        return length + byteLength;\r\n    };\r\n\r\n    private writeStringsData() {\r\n        const array = this.stringList.getValues();\r\n\r\n        const size = array.length;\r\n\r\n        if (this.strWriter == null) {\r\n            this.throwError(\" Didn't create writer. \" + this.fileName);\r\n        }\r\n\r\n        if (size < 16) {\r\n            // fixarray\r\n            this.strWriter.ubyte = JPType.ARRAY_0 + size;\r\n        } else if (size < 0x100) {\r\n            // uint8\r\n            this.strWriter.ubyte = JPType.ARRAY8;\r\n\r\n            this.strWriter.ubyte = size;\r\n        } else if (size < 0x10000) {\r\n            // array 16\r\n            this.strWriter.ubyte = JPType.ARRAY16;\r\n\r\n            this.strWriter.ushort = size;\r\n        } else if (size < 0x100000000) {\r\n            // array 32\r\n            this.strWriter.ubyte = JPType.ARRAY32;\r\n\r\n            this.strWriter.uint32 = size;\r\n        } else {\r\n            this.throwError(` String array too large: ${size} in file ` + this.fileName);\r\n        }\r\n\r\n        for (let i = 0; i < size; i++) {\r\n            const el = array[i];\r\n\r\n            this.writeString(el);\r\n        }\r\n    };\r\n\r\n    private encodeNumberAsFloat(valueWriter:BiWriter|BiWriterStream, object: number) {\r\n        var length = 1;\r\n\r\n        if (isFloat32Safe(object)) {\r\n            // float 32\r\n            valueWriter.ubyte = JPType.FLOAT32;\r\n\r\n            valueWriter.float = object;\r\n\r\n            length += 4;\r\n        } else {\r\n            // float 64\r\n            valueWriter.ubyte = JPType.FLOAT64;\r\n\r\n            valueWriter.dfloat = object;\r\n\r\n            length += 8;\r\n        }\r\n\r\n        return length;\r\n    };\r\n\r\n    ////////////\r\n    //  EXTS  //\r\n    ////////////\r\n\r\n    private encodeExtension(valueWriter:BiWriter|BiWriterStream, ext: JPExtData) {\r\n        const size = ext.data.length;\r\n\r\n        var length = size;\r\n\r\n        if (size < 0x100) {\r\n            // ext 8\r\n            valueWriter.ubyte = JPType.EXT8;\r\n\r\n            valueWriter.ubyte = size;\r\n\r\n            length += 2;\r\n        } else if (size < 0x10000) {\r\n            // ext 16\r\n            valueWriter.ubyte = JPType.EXT16;\r\n\r\n            valueWriter.ushort = size;\r\n\r\n            length += 3;\r\n        } else if (size < 0x100000000) {\r\n            // ext 32\r\n            valueWriter.ubyte = JPType.EXT32;\r\n\r\n            valueWriter.uint32 = size;\r\n\r\n            length += 5;\r\n        } else {\r\n            this.throwError( `Too large extension object: ${size} in file ` + this.fileName);\r\n        }\r\n\r\n        valueWriter.ubyte = ext.type;\r\n\r\n        length++;\r\n\r\n        valueWriter.overwrite(ext.data, true);\r\n\r\n        return length;\r\n    };\r\n\r\n    /**\r\n     * Writes a `Map` to the buffer as `Map<key, value>`\r\n     * \r\n     * @param valueWriter - Writer\r\n     * @param object - Data to encode\r\n     * @param depth - Level depth within the master object. Leave blank unless you have a reason for adding to running loop.\r\n     * @returns The `number` of bytes written\r\n     */\r\n    encodeMap<K, V>(valueWriter: BiWriter | BiWriterStream, object: Map<K, V>, depth?: number) {\r\n        if(depth == undefined){\r\n            depth = this.depth;\r\n        }\r\n\r\n        // Note: length here is the array size of Map, not the buffer size\r\n        var length = 1;\r\n\r\n        const keys = [...object.keys()];\r\n\r\n        const size = object.size;\r\n\r\n        if (size < 0x100) {\r\n            valueWriter.ubyte = JPType.EXT8;\r\n\r\n            valueWriter.ubyte = size;\r\n\r\n            length++;\r\n        } else if (size < 0x10000) {\r\n            valueWriter.ubyte = JPType.EXT16;\r\n\r\n            valueWriter.ushort = size;\r\n\r\n            length += 2;\r\n        } else if (size < 0x100000000) {\r\n            valueWriter.ubyte = JPType.EXT32;\r\n\r\n            valueWriter.uint32 = size;\r\n\r\n            length += 4;\r\n        } else {\r\n            this.throwError(` Too large Set length: ${size} in file ` + this.fileName);\r\n        }\r\n\r\n        this.valueWriter.ubyte = JPExtType.Maps; length++;\r\n\r\n        for (const key of keys) {\r\n            const value = object.get(key);\r\n\r\n            length += this.doEncode(valueWriter, key, depth + 1); // keys can have any type here\r\n\r\n            //this.valueWriter.ubyte = JPType.LIST_END; length++;\r\n\r\n            length += this.doEncode(valueWriter, value, depth + 1);\r\n\r\n            //this.valueWriter.ubyte = JPType.LIST_END; length++;\r\n        }\r\n\r\n        return length;\r\n    };\r\n\r\n    /**\r\n     * Writes a `Set` to the buffer as `Set<type>`\r\n     * \r\n     * @param valueWriter - Writer\r\n     * @param object - Data to encode\r\n     * @param depth - Level depth within the master object. Leave blank unless you have a reason for adding to running loop.\r\n     * @returns The `number` of bytes written\r\n     */\r\n    encodeSet<T>(valueWriter: BiWriter | BiWriterStream, object: Set<T>, depth?: number) {\r\n        if(depth == undefined){\r\n            depth = this.depth;\r\n        }\r\n        \r\n        // Note: length here is the array size of Set, not the buffer size\r\n        var length = 1;\r\n\r\n        const size = object.size;\r\n\r\n        if (size < 0x100) {\r\n            valueWriter.ubyte = JPType.EXT8;\r\n\r\n            valueWriter.ubyte = size;\r\n\r\n            length++;\r\n        } else if (size < 0x10000) {\r\n            valueWriter.ubyte = JPType.EXT16;\r\n\r\n            valueWriter.ushort = size;\r\n\r\n            length += 2;\r\n        } else if (size < 0x100000000) {\r\n            valueWriter.ubyte = JPType.EXT32;\r\n\r\n            valueWriter.uint32 = size;\r\n\r\n            length += 4;\r\n        } else {\r\n            this.throwError(` Too large Set length: ${size} in file ` + this.fileName);\r\n        }\r\n\r\n        this.valueWriter.ubyte = JPExtType.Sets;\r\n\r\n        for (const item of object) {\r\n            length += this.doEncode(valueWriter, item, depth + 1);\r\n\r\n            // this.valueWriter.ubyte = JPType.LIST_END; length++;\r\n        }\r\n\r\n        return length;\r\n    };\r\n\r\n    /**\r\n     * Writes a `symbol` to the buffer\r\n     * \r\n     * @param valueWriter - Writer\r\n     * @param object - Data to encode\r\n     * @returns The `number` of bytes written\r\n     */\r\n    encodeSymbol(valueWriter: BiWriter | BiWriterStream, object: symbol) {\r\n        const extBuffer = new BiWriter(Buffer.alloc(512));\r\n\r\n        const keyCheck = Symbol.keyFor(object);\r\n\r\n        const global = !!keyCheck;\r\n\r\n        var key = keyCheck ?? object.description;\r\n\r\n        key = key ?? \"\";\r\n\r\n        var length = 0;\r\n\r\n        length += this.encodeBoolean(extBuffer, global);\r\n\r\n        length += this.encodeString(extBuffer, key, false);\r\n\r\n        extBuffer.trim();\r\n\r\n        if(length < 0x100) {\r\n            valueWriter.ubyte = JPType.EXT8;\r\n\r\n            valueWriter.ubyte = length;\r\n        } else if (length < 0x10000) {\r\n            valueWriter.ubyte = JPType.EXT16;\r\n\r\n            valueWriter.ushort = length;\r\n        } else if (length < 0x100000000) {\r\n            valueWriter.ubyte = JPType.EXT32;\r\n\r\n            valueWriter.uint = length;\r\n        } else {\r\n            this.throwError(` Too large Symbol length: ${length} in file ` + this.fileName);\r\n        }\r\n\r\n        valueWriter.ubyte = JPExtType.Symbol;\r\n\r\n        valueWriter.overwrite(extBuffer.return as Buffer, true);\r\n\r\n        return length;\r\n    };\r\n\r\n    /**\r\n     * Writes a `RegEx` to the buffer\r\n     * \r\n     * @param valueWriter - Writer\r\n     * @param object - Data to encode\r\n     * @returns The `number` of bytes written\r\n     */\r\n    encodeRegEx(valueWriter: BiWriter | BiWriterStream, object: RegExp) {\r\n        const extBuffer = new BiWriter(Buffer.alloc(512));\r\n\r\n        const src = object.source;\r\n\r\n        const flags = object.flags;\r\n\r\n        var length = 0;\r\n\r\n        length += this.encodeString(extBuffer, src, false);\r\n\r\n        length += this.encodeString(extBuffer, flags, false);\r\n\r\n        extBuffer.trim();\r\n\r\n        if(length < 0x100) {\r\n            valueWriter.ubyte = JPType.EXT8;\r\n\r\n            valueWriter.ubyte = length;\r\n        } else if (length < 0x10000) {\r\n            valueWriter.ubyte = JPType.EXT16;\r\n\r\n            valueWriter.ushort = length;\r\n        } else if (length < 0x100000000) {\r\n            valueWriter.ubyte = JPType.EXT32;\r\n\r\n            valueWriter.uint = length;\r\n        } else {\r\n            this.throwError(` Too large RegEx length: ${length} in file ` + this.fileName);\r\n        }\r\n\r\n        valueWriter.ubyte = JPExtType.RegEx;\r\n\r\n        valueWriter.overwrite(extBuffer.return as Buffer, true);\r\n\r\n        return length;\r\n    };\r\n\r\n    /**\r\n     * Writes a `TypedArray` or `Buffer` to the buffer\r\n     * \r\n     * @param valueWriter - Writer\r\n     * @param object - Data to encode\r\n     * @returns The `number` of bytes written\r\n     */\r\n    encodeBinary(valueWriter: BiWriter|BiWriterStream, object: Buffer | ArrayBufferView) {\r\n        var length = 1;\r\n\r\n        const byteLength = object.byteLength;\r\n\r\n        if (byteLength < 0x100) {\r\n            valueWriter.ubyte = JPType.EXT8;\r\n\r\n            valueWriter.ubyte = byteLength;\r\n\r\n            length++;\r\n        } else if (byteLength < 0x10000) {\r\n            valueWriter.ubyte = JPType.EXT16;\r\n\r\n            valueWriter.ushort = byteLength;\r\n\r\n            length += 2;\r\n        } else if (byteLength < 0x100000000) {\r\n            valueWriter.ubyte = JPType.EXT32;\r\n\r\n            valueWriter.uint32 = byteLength;\r\n\r\n            length += 4;\r\n        } else {\r\n            this.throwError(` Buffer ranged too large. ${byteLength} in file ` + this.fileName);\r\n        }\r\n\r\n        if (object instanceof Buffer) {\r\n            valueWriter.ubyte = JPExtType.Buffer; length++;\r\n\r\n            valueWriter.overwrite(object, true);\r\n\r\n            length += object.length;\r\n        } else {\r\n            if (object instanceof Int8Array) {\r\n                valueWriter.ubyte = JPExtType.Int8Array;\r\n            } else if (object instanceof Uint8Array) {\r\n                valueWriter.ubyte = JPExtType.Uint8Array;\r\n            } else if (object instanceof Uint8ClampedArray) {\r\n                valueWriter.ubyte = JPExtType.Uint8ClampedArray;\r\n            } else if (object instanceof Int16Array) {\r\n                valueWriter.ubyte = JPExtType.Int16Array;\r\n            } else if (object instanceof Uint16Array) {\r\n                valueWriter.ubyte = JPExtType.Uint16Array;\r\n            } else if (object instanceof Int32Array) {\r\n                valueWriter.ubyte = JPExtType.Int32Array;\r\n            } else if (object instanceof Uint32Array) {\r\n                valueWriter.ubyte = JPExtType.Uint32Array;\r\n            } else if (object instanceof Float32Array) {\r\n                valueWriter.ubyte = JPExtType.Float32Array;\r\n                //} else if(object instanceof Float16Array){\r\n                // not active yet\r\n                //    valueWriter.ubyte = JPExtType.Float16Array;\r\n            } else if (object instanceof Float64Array) {\r\n                valueWriter.ubyte = JPExtType.Float64Array;\r\n            } else if (object instanceof BigInt64Array) {\r\n                valueWriter.ubyte = JPExtType.BigInt64Array;\r\n            } else if (object instanceof BigUint64Array) {\r\n                valueWriter.ubyte = JPExtType.BigUint64Array;\r\n            } else {\r\n                this.throwError(' Unknown Buffer type in file ' + this.fileName);\r\n            }\r\n\r\n            length++;\r\n\r\n            const uData = new Uint8Array(object.buffer);\r\n\r\n            valueWriter.overwrite(uData, true);\r\n\r\n            length += uData.length;\r\n        }\r\n\r\n        return length;\r\n    };\r\n\r\n    /**\r\n     * Writes a `Date` to the buffer\r\n     * \r\n     * @param valueWriter - Writer\r\n     * @param object - Data to encode\r\n     * @returns The `number` of bytes written\r\n     */\r\n    encodeDate(valueWriter:BiWriter | BiWriterStream, object: Date) {\r\n        const TIMESTAMP32_MAX_SEC = 0x100000000 - 1; // 32-bit unsigned int\r\n\r\n        const TIMESTAMP64_MAX_SEC = 0x400000000 - 1; // 34-bit unsigned int\r\n\r\n        const msec = object.getTime();\r\n\r\n        const _sec = Math.floor(msec / 1e3);\r\n\r\n        const _nsec = (msec - _sec * 1e3) * 1e6;\r\n        // Normalizes { sec, nsec } to ensure nsec is unsigned.\r\n        const nsecInSec = Math.floor(_nsec / 1e9);\r\n\r\n        const sec = _sec + nsecInSec;\r\n\r\n        const nsec = _nsec - nsecInSec * 1e9;\r\n\r\n        valueWriter.ubyte = JPType.EXT8;\r\n\r\n        if (sec >= 0 && nsec >= 0 && sec <= TIMESTAMP64_MAX_SEC) {\r\n            // Here sec >= 0 && nsec >= 0\r\n            if (nsec === 0 && sec <= TIMESTAMP32_MAX_SEC) {\r\n                // timestamp 32 = { sec32 (unsigned) }\r\n\r\n                valueWriter.ubyte = 4;\r\n\r\n                valueWriter.ubyte  = JPExtType.Date;\r\n\r\n                valueWriter.uint32 = sec >>> 0;\r\n\r\n                return 7;\r\n            } else {\r\n                valueWriter.ubyte = 8;\r\n\r\n                valueWriter.ubyte  = JPExtType.Date;\r\n                // timestamp 64 = { nsec30 (unsigned), sec34 (unsigned) }\r\n                const secHigh = sec / 0x100000000;\r\n\r\n                const secLow = sec & 0xffffffff;\r\n                // nsec30 | secHigh2\r\n                valueWriter.uint32 = ((nsec << 2) | (secHigh & 0x3)) >>> 0;\r\n                // secLow32\r\n                valueWriter.uint32 = secLow >>> 0;\r\n\r\n                return 11;\r\n            }\r\n        } else {\r\n            // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\r\n            valueWriter.ubyte = 12;\r\n\r\n            valueWriter.ubyte  = JPExtType.Date;\r\n\r\n            valueWriter.uint32 = nsec >>> 0;\r\n\r\n            valueWriter.int64 = sec;\r\n\r\n            return 15;\r\n        }\r\n    };\r\n\r\n    //////////////\r\n    // FINALIZE //\r\n    //////////////\r\n\r\n    /**\r\n     * Creates headers buffer.\r\n     * \r\n     * Note: Must have compressed or encrypted data already.\r\n     * \r\n     * Should be the last thing before completeing the buffer\r\n     * \r\n     * @param {endian} endian \r\n     * @returns \r\n     */\r\n    private buildHeader(endian?: endian): Buffer {\r\n        if (endian) {\r\n            this.endian = endian;\r\n        }\r\n\r\n        if (BigInt(this.HEADER_SIZE) + this.DATA_SIZE > BigInt(0x100000000)) {\r\n            this.LargeFile = 1;\r\n        }\r\n\r\n        const bw = new BiWriter(Buffer.alloc(this.HEADER_SIZE));\r\n\r\n        bw.endian = this.endian;\r\n\r\n        bw.uint16 = this.MAGIC;\r\n\r\n        bw.uint8 = this.VERSION_MAJOR;\r\n\r\n        bw.uint8 = this.VERSION_MINOR;\r\n\r\n        bw.uint8 = this.HEADER_SIZE;\r\n\r\n        bw.bit1 = this.LargeFile;\r\n\r\n        bw.bit1 = this.Compressed;\r\n\r\n        bw.bit1 = this.Crc32;\r\n\r\n        bw.bit1 = this.Encrypted;\r\n\r\n        if (this.Encrypted == 0) this.EncryptionExcluded = 0;\r\n\r\n        bw.bit1 = this.EncryptionExcluded;\r\n\r\n        bw.bit1 = this.KeyStripped;\r\n\r\n        bw.bit1 = 0;  // FLAG6\r\n\r\n        bw.bit1 = 0;  // FLAG7\r\n\r\n        bw.uint8 = 0; // RESV_6 FLAG8-15\r\n\r\n        bw.uint8 = 0; // RESV_7 FLAG16-23\r\n\r\n        bw.uint64 = this.VALUE_SIZE;\r\n\r\n        bw.uint64 = this.STR_SIZE;\r\n\r\n        bw.uint64 = this.DATA_SIZE;\r\n\r\n        if (this.Crc32) {\r\n            bw.uint32 = this.CRC32;\r\n        }\r\n\r\n        if (this.Encrypted && !this.EncryptionExcluded) {\r\n            bw.uint32 = this.encryptionKey;\r\n        }\r\n\r\n        bw.trim();\r\n\r\n        this.headerBuffer = bw.get as Buffer;\r\n\r\n        return this.headerBuffer;\r\n    };\r\n\r\n    private finalizeBuffers() {\r\n        if (this.strWriter == null || this.valueWriter == null) {\r\n            this.throwError(\" Didn't create writers. \" + this.fileName);\r\n        }\r\n        if (!this.useStream) {\r\n            this.valueWriter.trim();\r\n\r\n            this.strWriter.trim();\r\n\r\n            const stringData = this.strWriter.data;\r\n\r\n            this.valueWriter.overwrite(stringData,true);\r\n\r\n            this.compWriter = this.valueWriter;\r\n\r\n            this.compWriter.trim();\r\n        } else {\r\n            this.valueWriter.trim();\r\n\r\n            this.strWriter.trim();\r\n\r\n            const compWriter = new BiWriterStream(this.fileName + \".comp\");\r\n\r\n            compWriter.overwrite(this.valueWriter.read(0, this.valueWriter.size), true);\r\n\r\n            compWriter.overwrite(this.strWriter.read(0, this.strWriter.size), true);\r\n\r\n            this.valueWriter.deleteFile();\r\n\r\n            this.strWriter.deleteFile();\r\n\r\n            this.compWriter = compWriter;\r\n\r\n            this.compWriter.trim();\r\n        }\r\n\r\n        this.DATA_SIZE = BigInt(this.compWriter.size);\r\n\r\n        if (this.Crc32) {\r\n            this.CRC();\r\n        }\r\n\r\n        if (this.Compressed) {\r\n            this.compress();\r\n\r\n            this.DATA_SIZE = BigInt(this.compWriter.size);\r\n        }\r\n\r\n        if (this.Encrypted) {\r\n            this.encrypt(this.EncryptionExcluded ? true : false, this.encryptionKey == 0 ? undefined : this.encryptionKey);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Can stip or include the key value in file \r\n     * \r\n     * Can also set your own key.\r\n     * \r\n     * @param {boolean?} EncryptionExcluded - remove key from file\r\n     * @param {number?} Encryptionkey - 32 bit number\r\n     */\r\n    private encrypt(EncryptionExcluded?: boolean, Encryptionkey?: number) {\r\n        this.Encrypted = 1;\r\n\r\n        this.EncryptionExcluded = EncryptionExcluded ? 1 : 0;\r\n\r\n        if (this.compWriter == null) {\r\n            this.throwError(\" Writer not created for encryption. \" + this.fileName);\r\n        }\r\n\r\n        const cypter = new Crypt(Encryptionkey);\r\n\r\n        this.encryptionKey = cypter.key;\r\n\r\n        if (!this.useStream) {\r\n            const compBuffer = cypter.encrypt(this.compWriter.data as Buffer);\r\n\r\n            this.compWriter = new BiWriter(compBuffer);\r\n\r\n            return this.compWriter.size;\r\n        } else {\r\n            const CHUNK_SIZE = 16; // 16 bytes at a time\r\n\r\n            this.compWriter.gotoStart();\r\n\r\n            var data: Buffer;\r\n\r\n            var buffer = Buffer.alloc(0);\r\n\r\n            let bytesToProcess = Number(this.DATA_SIZE);\r\n\r\n            let bytesStart = 0;\r\n\r\n            let bytesRead = 0;\r\n\r\n            let amount = Math.ceil(this.compWriter.size / CHUNK_SIZE);\r\n\r\n            for (let index = 0; index < amount; index++) {\r\n                bytesRead = Math.min(CHUNK_SIZE, bytesToProcess);\r\n\r\n                buffer = this.compWriter.read(bytesStart, bytesRead) as Buffer;\r\n\r\n                if(index == (amount - 1)) {\r\n                    data = cypter.encrypt_block(buffer, true);\r\n                } else {\r\n                    data = cypter.encrypt_block(buffer);\r\n                }\r\n\r\n                if(data.length != 0){\r\n                    this.compWriter.overwrite(data, true);\r\n                }\r\n\r\n                bytesStart += buffer.length;\r\n\r\n                bytesToProcess -= buffer.length;\r\n            }\r\n\r\n            data = cypter.encrypt_final();\r\n\r\n            if(data.length != 0){\r\n                this.compWriter.overwrite(data, true);\r\n            }\r\n\r\n            this.compWriter.trim();\r\n\r\n            return this.compWriter.size;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Compresses data\r\n     */\r\n    private compress() {\r\n        this.Compressed = 1;\r\n\r\n        if (this.compWriter == null) {\r\n            this.throwError(\" Writer not created for compression. \" + this.fileName);\r\n        }\r\n\r\n        if (!this.useStream) {\r\n            this.compWriter.gotoStart();\r\n\r\n            const compBuffer = deflateBuffer(this.compWriter);\r\n\r\n            this.compWriter = new BiWriter(compBuffer);\r\n\r\n            this.compWriter.gotoEnd();\r\n        } else {\r\n            const temp = this.fileName + \".comp.tmp\";\r\n\r\n            const tempcompWriter = new BiWriterStream(temp);\r\n\r\n            tempcompWriter.open();\r\n\r\n            deflateFileSync(this.compWriter as BiWriterStream, tempcompWriter);\r\n\r\n            this.compWriter.gotoStart();\r\n\r\n            this.compWriter.overwrite(tempcompWriter.read(0,tempcompWriter.offset), true);\r\n\r\n            this.compWriter.trim();\r\n\r\n            tempcompWriter.deleteFile();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Creates CRC hash\r\n     */\r\n    private CRC() {\r\n        this.Crc32 = 1;\r\n\r\n        if (this.compWriter == null) {\r\n            this.throwError(\" Writer not created for CRC. \" + this.fileName);\r\n        }\r\n\r\n        if (!this.useStream) {\r\n            const data = this.compWriter.data as Buffer;\r\n\r\n            this.CRC32 = CRC32(data, 0) >>> 0;\r\n\r\n            return;\r\n        } else {\r\n            let crc = 0;\r\n\r\n            const CHUNK_SIZE = 0x2000; // 8192 bytes\r\n\r\n            for (let position = 0; position <= this.compWriter.size;) {\r\n                const buffer = this.compWriter.read(position, Math.min(CHUNK_SIZE, this.compWriter.size - position)) as Buffer;\r\n\r\n                if (buffer.length == 0) break;\r\n\r\n                crc = CRC32(buffer, crc);\r\n\r\n                position += buffer.length;\r\n            }\r\n\r\n            this.CRC32 = crc >>> 0;\r\n\r\n            this.CRC32Hash = this.CRC32;\r\n        }\r\n    };\r\n}"],"names":["BiWriter","bufferConstants","JPType","JPExtType","BiReaderStream","BiReader","BiWriterStream"],"mappings":"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UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAC9F,IAAA,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAC9F,IAAA,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAC9F,IAAA,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAC9F,IAAA,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAC9F,IAAA,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAC9F,IAAA,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAC9F,IAAA,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAC9F,IAAA,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAC9F,IAAA,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAC9F,IAAA,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAC9F,IAAA,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAC9F,IAAA,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAC9F,IAAA,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAC9F,IAAA,UAAU,EAAE,UAAU,E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AAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAC/F,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAC7F,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAC5F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAC1F,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAC7F,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAC7F,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,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,CAAC;QACjC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AACtE,QAAA,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE;AACvC,KAAA,CAAC;IAEM,UAAU,GAAG,IAAI,WAAW,CAAC;QACjC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AACtE,QAAA,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE;AACvC,KAAA,CAAC;IAEM,UAAU,GAAG,IAAI,WAAW,CAAC;QACjC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AACtE,QAAA,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE;AACvC,KAAA,CAAC;IAEM,UAAU,GAAG,IAAI,WAAW,CAAC;QACjC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AACtE,QAAA,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE;AACvC,KAAA,CAAC;IAEM,WAAW,CAAC,CAAS,EAAE,CAAS,EAAA;QACpC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;;IAErC,UAAU,CAAC,CAAS,EAAE,CAAS,EAAA;QACnC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;;IAErC,KAAK,CAAC,GAAW,EAAE,EAAe,EAAE,IAAY,EAAE,EAAe,EAAE,IAAY,EAAA;AACnF,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;AACpE,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;AACpE,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;AACpE,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;AACpE,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;AAC3B,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;AAC3B,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;AAC3B,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;;IAEvB,QAAQ,CAAC,GAAW,EAAE,EAAe,EAAE,IAAY,EAAE,EAAe,EAAE,IAAY,EAAA;AACtF,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;AACpE,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;AACpE,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;AACpE,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;AACpE,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;AAC3B,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;AAC3B,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;AAC3B,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;;IAEvB,QAAQ,CAAC,GAAW,EAAE,EAAe,EAAE,IAAY,EAAE,EAAe,EAAE,IAAY,EAAA;AACtF,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;AAC3E,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;AAC3E,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;AAC3E,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;AAC3E,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;AAC3B,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;AAC3B,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;AAC3B,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;;IAEvB,WAAW,CAAC,GAAW,EAAE,EAAe,EAAE,IAAY,EAAE,EAAe,EAAE,IAAY,EAAA;AACzF,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;AAC3E,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;AAC3E,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;AAC3E,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;AAC3E,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;AAC3B,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;AAC3B,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;AAC3B,QAAA,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;;IAEvB,SAAS,CAAC,GAA6B,EAAE,MAAc,EAAA;AAC3D,QAAA,IAAI,IAAI,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC;AAC7B,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACxB;gBACI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;;;AAIjE,QAAA,OAAO,IAAI,CAAC,CAAC,CAAC;;AAGV,IAAA,SAAS,CAAC,IAAY,EAAE,GAA6B,EAAE,MAAc,EAAA;AACzE,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACxB;AACI,gBAAA,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC;gBAClC,IAAI,MAAM,CAAC;;;;AAMf,IAAA,UAAU,CAAC,CAAc,EAAE,IAAiB,EAAE,MAAc,EAAA;AAChE,QAAA,IAAI,EAAU;AACd,QAAA,IAAI,EAAU;AACd,QAAA,IAAI,CAAS;AACb,QAAA,IAAI,CAAS;AACb,QAAA,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC;QAC5B,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;AACpC,QAAA,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC;AAC7C,QAAA,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC;AAC9C,QAAA,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC;AAC9C,QAAA,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC;QAC5B,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;AACpC,QAAA,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC;AAC7C,QAAA,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC;AAC9C,QAAA,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC;AAC9C,QAAA,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;AACb,QAAA,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC;AACtC,QAAA,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC;QAC5B,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;AACpC,QAAA,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC;AAC7C,QAAA,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC;AAC9C,QAAA,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC;AAC9C,QAAA,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC;QAC5B,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;AACpC,QAAA,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC;AAC7C,QAAA,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC;AAC9C,QAAA,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC;AAC9C,QAAA,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;AACb,QAAA,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC;;AAGlC,IAAA,WAAW,CAAC,CAA2B,EAAE,IAA8B,EAAE,MAAc,EAAA;QAC3F,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AACnD,QAAA,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/B,QAAA,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;;IAG/C,MAAM,CAAC,aAAsB,EAAE,GAAgB,EAAA;AACnD,QAAA,IAAI,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC;AAC1B,QAAA,IAAI,EAAE,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC;AAC3B,QAAA,IAAI,EAAE,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC;AAC3B,QAAA,IAAI,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC;AAC1B,QAAA,SAAS,GAAG,CAAC,MAAM;AACf,YAAA,KAAK,EAAE;AACH,gBAAA,IAAI,CAAC,SAAS,GAAG,IAAI;AACrB,gBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;AAC7B,gBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;AAC7B,gBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;AAC7B,gBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,CAAC;gBAC9B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBAC7B;AACJ,YAAA,KAAK,EAAE;AACH,gBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;AAC7B,gBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;AAC7B,gBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;AAC7B,gBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,CAAC;AAC9B,gBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,CAAC;AAC9B,gBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,CAAC;gBAC9B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACZ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,gBAAA,IAAI,CAAC,SAAS,GAAG,KAAK;gBACtB;AACJ,YAAA,KAAK,EAAE;AACH,gBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;AAC7B,gBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;AAC7B,gBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;AAC7B,gBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,CAAC;AAC9B,gBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,CAAC;AAC9B,gBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,CAAC;AAC9B,gBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,CAAC;AAC9B,gBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,CAAC;AAC9B,gBAAA,IAAI,CAAC,SAAS,GAAG,KAAK;gBACtB;AACJ,YAAA;AACI,gBAAA,MAAM,KAAK,CAAC,oCAAoC,CAAC;;AAEzD,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACxB;AACI,gBAAA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;;;QAI/B,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;AAClC,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACxB;gBACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;;QAIrB,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;AAClC,QAAA,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,aAAa,EAAE;gBACf,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACjB,gBAAA,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AACpC,gBAAA,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACrC,gBAAA,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC1B,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACtB,gBAAA,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;AAChC,gBAAA,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACrC,gBAAA,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;gBACrC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACtB,gBAAA,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AACrC,gBAAA,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;AACjC,gBAAA,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC3B,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACtB,gBAAA,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACtC,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACzC,gBAAA,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;;iBAC9B;gBACH,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACjB,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACxC,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACxC,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC7B,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACtB,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;AACnC,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AACvC,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;gBACvC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACvB,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACzC,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;AACpC,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC9B,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACtB,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACzC,gBAAA,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAC3C,gBAAA,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;;;aAElC;AACH,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACxB;AACI,oBAAA,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;;;YAIhC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;YAClC,IAAI,aAAa,EAAE;gBACf,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACjB,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACxC,gBAAA,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;AAChC,gBAAA,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACrC,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACxC,gBAAA,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AACpC,gBAAA,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;AAChC,gBAAA,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACrC,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACxC,gBAAA,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AACrC,gBAAA,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACnB,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;gBACzC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACtB,gBAAA,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACtC,gBAAA,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACtC,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;;iBAEnC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACjB,gBAAA,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AAC3C,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;AACnC,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACxC,gBAAA,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAC1C,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACxC,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;AACnC,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACxC,gBAAA,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAC1C,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACzC,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;gBACzC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAClB,gBAAA,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;gBAC3C,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACvB,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACzC,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACzC,gBAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;;;AAG5C,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI;;;AAG3B;;;;;;AAMG;AACH,IAAA,MAAM,CAAC,EAAU,EAAA;AACb,QAAA,IAAI,EAAE,CAAC,MAAM,IAAI,EAAE,EAAE;AACjB,YAAA,MAAM,KAAK,CAAC,0BAA0B,CAAC;;AAE3C,QAAA,IAAI,CAAC,EAAE,GAAG,EAAE;AACZ,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI;;;AAGtB;;;;;;AAMG;AACH,IAAA,OAAO,CAAC,GAAW,EAAA;AACf,QAAA,SAAS,GAAG,CAAC,MAAM;AACf,YAAA,KAAK,EAAE;AACH,gBAAA,IAAI,CAAC,SAAS,GAAG,IAAI;gBACrB;AACJ,YAAA,KAAK,EAAE;AACH,gBAAA,IAAI,CAAC,SAAS,GAAG,KAAK;gBACtB;AACJ,YAAA,KAAK,EAAE;AACH,gBAAA,IAAI,CAAC,SAAS,GAAG,KAAK;gBACtB;AACJ,YAAA;AACI,gBAAA,MAAM,KAAK,CAAC,oCAAoC,CAAC;;AAEzD,QAAA,IAAI,CAAC,GAAG,GAAG,GAAG;AACd,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI;;;IAGvB,aAAa,CAAC,KAAa,EAAE,UAAoB,EAAA;AAC7C,QAAA,IAAG,CAAC,IAAI,CAAC,WAAW,EAAC;YACjB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC;;QAE/B,IAAG,UAAU,EAAC;AACV,YAAA,KAAK,GAAG,UAAU,CAAC,KAAK,CAAW;;AAEvC,QAAA,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;YACrB,KAAK,GAAG,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAW;;QAEzC,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;AAC7C,QAAA,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;AACrB,YAAA,IAAI,CAAC,EAAE,GAAG,YAAY;;AAE1B,QAAA,OAAO,YAAY;;;IAGvB,aAAa,CAAC,KAAa,EAAE,UAAoB,EAAA;AAC7C,QAAA,IAAG,CAAC,IAAI,CAAC,WAAW,EAAC;YACjB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;;AAEhC,QAAA,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;AACrB,YAAA,IAAI,IAAI,CAAC,cAAc,IAAI,SAAS,EAAE;AAClC,gBAAA,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc;;;AAGrC,QAAA,IAAI,CAAC,cAAc,GAAG,KAAK;QAC3B,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;AAC3C,QAAA,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;YACrB,YAAY,GAAG,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE,CAAC;;QAE7C,IAAG,UAAU,EAAC;YACV,IAAI,UAAU,GAAG,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,CAAC;YAC/C,OAAO,iBAAiB,CAAC,YAAY,EAAE,UAAU,EAAE,IAAI,CAAC;;AAE5D,QAAA,OAAO,YAAY;;;AAGvB;;;;;;;;;;AAUG;AACH,IAAA,OAAO,CAAC,OAAe,EAAE,OAAA,GAAkB,CAAC,EAAA;AACxC,QAAA,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;AACtB,YAAA,MAAM,KAAK,CAAC,sBAAsB,CAAC;;QAEvC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC;QAC3B,MAAM,UAAU,GAAG,EAAE;QACrB,IAAI,IAAI,GAAG,OAAO;QAClB,IAAI,UAAU,GAAG,OAAO;QACxB,MAAM,WAAW,GAAU,EAAE;QAC7B,IAAI,IAAI,CAAC,MAAM,GAAG,UAAU,IAAI,CAAC,EAAE;YAC/B,IAAI,OAAO,GAAG,UAAU,IAAI,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;AACrD,YAAA,IAAI,OAAO,IAAI,CAAC,EAAE;gBACd,UAAU,GAAG,OAAO;;AAExB,YAAA,IAAI,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,GAAG,IAAI,CAAC;YACzD,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,OAAiB,EAAE,UAAU,CAAC,CAAC;;AAEzD,QAAA,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,UAAU,EAAE,KAAK,EAAE,EAAE;YAC3D,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,KAAK,GAAG,UAAU,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,UAAU,CAAC;AACzE,YAAA,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;gBACrB,KAAK,GAAG,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC;;YAE/B,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;AAC7C,YAAA,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;AACrB,gBAAA,IAAI,CAAC,EAAE,GAAG,YAAY;;AAE1B,YAAA,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC;;QAElC,IAAI,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC;AAC7C,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK;AACnB,QAAA,OAAO,YAAY;;;AAGvB;;;;;;;;;;;;AAYG;AACH,IAAA,OAAO,CAAC,OAAe,EAAE,cAAA,GAAmC,IAAI,EAAA;AAC5D,QAAA,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;AACtB,YAAA,MAAM,KAAK,CAAC,sBAAsB,CAAC;;QAEvC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;QAC5B,MAAM,UAAU,GAAG,EAAE;QACrB,IAAI,IAAI,GAAG,OAAO;QAClB,IAAI,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC;AAC/C,QAAA,IAAI,OAAO,cAAc,IAAI,QAAQ,EAAE;AACnC,YAAA,UAAU,GAAG,cAAc,GAAG,IAAI;;QAEtC,MAAM,WAAW,GAAU,EAAE;QAC7B,IAAI,IAAI,CAAC,MAAM,GAAG,UAAU,IAAI,CAAC,EAAE;YAC/B,IAAI,OAAO,GAAG,UAAU,IAAI,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;AACrD,YAAA,IAAI,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,GAAG,IAAI,CAAC;YACzD,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,OAAiB,EAAE,UAAU,CAAC,CAAC;;QAEzD,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE,KAAK,GAAG,MAAM,EAAE,KAAK,EAAE,EAAE;YACvF,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,KAAK,GAAG,UAAU,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,UAAU,CAAC;AACzE,YAAA,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;AACrB,gBAAA,IAAI,IAAI,CAAC,cAAc,IAAI,SAAS,EAAE;AAClC,oBAAA,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc;;;AAGrC,YAAA,IAAI,CAAC,cAAc,GAAG,KAAK;YAC3B,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;AAC3C,YAAA,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;gBACrB,YAAY,GAAG,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE,CAAC;;AAE7C,YAAA,IAAI,CAAC,cAAc,IAAI,KAAK,MAAO,KAAK,KAAK,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE;gBACvD,YAAY,GAAG,iBAAiB,CAAC,YAAY,EAAE,UAAU,EAAE,cAAc,CAAC;AAC1E,gBAAA,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC;;iBAC3B;AACH,gBAAA,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC;;;QAGtC,IAAI,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC;AAC7C,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK;AACnB,QAAA,OAAO,YAAY;;;AAGf,IAAA,YAAY,CAAC,IAAY,EAAA;AAC7B,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;AACnB,YAAA,MAAM,KAAK,CAAC,6BAA6B,CAAC;;AAE9C,QAAA,IAAI,IAAI,CAAC,SAAS,EAAE;AAChB,YAAA,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;;aAEhC;AACD,YAAA,OAAO,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC;;;;AAItC,IAAA,eAAe,CAAC,IAAY,EAAA;AAChC,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACxB;AACI,gBAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE;AAC7C,gBAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;;;AAInC,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAC3C,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAC3C,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAC3C,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;AACxC,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AAC5C,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AAC5C,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AAC5C,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;AACxC,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AAC5C,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AAC5C,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AAC5C,QAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3B,QAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3B,QAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3B,QAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3B,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;AAC1B,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AACrC,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AACrC,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AACrC,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;AACtC,QAAA,OAAO,GAAG;;;AAGN,IAAA,oBAAoB,CAAC,IAAY,EAAA;AACrC,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACxB;AACI,gBAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE;AAC7C,gBAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;;;AAInC,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAC3C,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAC3C,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAC3C,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;AACxC,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AAC5C,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AAC5C,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AAC5C,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;AACxC,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AAC5C,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AAC5C,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AAC5C,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;AACxC,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AAC5C,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AAC5C,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AAC5C,QAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3B,QAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3B,QAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3B,QAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3B,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;AAC1B,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AACrC,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AACrC,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AACrC,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;AACtC,QAAA,OAAO,GAAG;;;AAEjB;;MC9xDY,SAAS,CAAA;AACX,IAAA,IAAI;AAEJ,IAAA,IAAI;IAEb,WAAA,CAAY,IAAY,EAAE,IAAY,EAAA;AACpC,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI;AAChB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI;;AAEnB;MAkDY,gBAAgB,CAAA;AACpB,IAAA,OAAgB,YAAY,GAAoC,IAAI,gBAAgB,EAAE;;;;AAI7F,IAAA,OAAO;;IAGU,QAAQ,GAAkE,EAAE;IAE5E,QAAQ,GAAkE,EAAE;AAE7F,IAAA,WAAA,CAAmB,SAA2B,EAAA;QAC5C,IAAG,SAAS,EAAC;AACX,YAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;;;;AAIrB,IAAA,QAAQ,CAAC,SAA0B,EAAA;;AAExC,QAAA,KAAK,SAAS,CAAC,IAAI,GAAG,CAAC,IAAI,SAAS,CAAC,IAAI,GAAG,IAAI,GAAG;YACjD,MAAM,IAAI,KAAK,CAAC,CAAA,kEAAA,EAAqE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA,CAAA,CAAG,CAAC;;QAEvI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM;QAEhD,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM;;;AAG3C,IAAA,WAAW,CAAC,MAAe,EAAE,OAA8B,EAAE,OAAoB,EAAA;;AAEtF,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7C,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AAElC,YAAA,IAAI,SAAS,IAAI,IAAI,EAAE;gBACrB,MAAM,IAAI,GAAG,SAAS,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC;AAChD,gBAAA,IAAI,IAAI,IAAI,IAAI,EAAE;oBAChB,MAAM,IAAI,GAAG,CAAC;AAEd,oBAAA,OAAO,IAAI,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC;;;;AAKtC,QAAA,IAAI,MAAM,YAAY,SAAS,EAAE;;AAE/B,YAAA,OAAO,MAAM;;AAEf,QAAA,OAAO,IAAI;;;AAGN,IAAA,MAAM,CAAC,IAA+B,EAAE,OAA8B,EAAE,IAAW,EAAE,OAAoB,EAAA;QAC9G,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;QAErC,IAAI,SAAS,EAAE;YACb,OAAO,SAAS,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC;;aACzC;;YAEL,OAAO,IAAI,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,IAAc,CAAC;;;;;;;;;AC3PrD;;;;AAIG;AACH,SAAS,MAAM,GAAA;IACX,MAAM,GAAG,GAAG,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;IAEzD,OAAO;AACH,QAAA,aAAa,EAAE,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AAE3C,QAAA,aAAa,EAAE,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;KAC9C;AACL;AAEO,MAAM;AACT;;AAEG;AACH,aAAa;AACb;;AAEG;AACH,aAAa,EAChB,GAAG,MAAM,EAAE;AAEZ;;AAEG;AACI,MAAM,cAAc,GAAY,UAAU,CAAC,CAAA,EAAG,aAAa,CAAA,CAAA,EAAI,aAAa,CAAA,CAAE,CAAC;AAEtF;;;;AAIG;AACH,SAAS,UAAU,GAAA;IACf,OAAOC,qBAAe,CAAC,UAAU;AACrC;AAEA;;AAEG;AACI,MAAM,UAAU,GAAG,UAAU,EAAE,IAAI,WAAW;AAE/C,SAAU,aAAa,CAAC,KAAa,EAAA;AACvC,IAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;QAAE,OAAO,IAAI,CAAC;AAEzC,IAAA,MAAM,GAAG,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC;AAE/B,IAAA,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK;AAEd,IAAA,OAAO,GAAG,CAAC,CAAC,CAAC,KAAK,KAAK;AAC3B;AAEA;;AAEG;AACH,MAAM,UAAU,GAAG,GAAG,GAAG,IAAI;AAE7B;;AAEG;AACG,SAAU,eAAe,CAAC,QAAwB,EAAE,SAAyB,EAAA;IAC/E,QAAQ,CAAC,IAAI,EAAE;IAEf,SAAS,CAAC,IAAI,EAAE;AAEhB,IAAA,IAAI,cAAc,GAAG,QAAQ,CAAC,IAAI;IAElC,IAAI,UAAU,GAAG,CAAC;IAElB,IAAI,SAAS,GAAG,CAAC;AAEjB,IAAA,GAAG;QACC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,cAAc,CAAC;AAEhD,QAAA,IAAI,SAAS,GAAG,CAAC,EAAE;AACf,YAAA,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,SAAS,EAAE,IAAI,CAAC;YAExD,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAE1C,YAAA,SAAS,CAAC,QAAQ,GAAG,UAAU,CAAC,MAAM;AAEtC,YAAA,SAAS,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC;YAErC,cAAc,IAAI,SAAS;YAE3B,UAAU,IAAI,SAAS;;AAE/B,KAAC,QAAQ,SAAS,KAAK,UAAU;AACrC;AAEA;;AAEG;AACG,SAAU,eAAe,CAAC,QAAwB,EAAE,SAAyB,EAAA;IAC/E,QAAQ,CAAC,IAAI,EAAE;IAEf,SAAS,CAAC,IAAI,EAAE;AAEhB,IAAA,IAAI,cAAc,GAAG,QAAQ,CAAC,IAAI;IAElC,IAAI,UAAU,GAAG,CAAC;IAElB,IAAI,SAAS,GAAG,CAAC;AAEjB,IAAA,GAAG;AACC,QAAA,SAAS,GAAG,QAAQ,CAAC,MAAM;QAE3B,UAAU,IAAI,CAAC;AAEf,QAAA,IAAI,SAAS,GAAG,CAAC,EAAE;AACf,YAAA,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,SAAS,EAAE,IAAI,CAAC;AAExD,YAAA,cAAc,IAAI,KAAK,CAAC,MAAM;YAE9B,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAE5C,YAAA,SAAS,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC;YAEvC,UAAU,IAAI,SAAS;;AAE/B,KAAC,QAAQ,UAAU,GAAG,cAAc;AACxC;AAEA;;AAEG;AACG,SAAU,aAAa,CAAC,QAAgB,EAAA;AAC1C,IAAA,IAAI,cAAc,GAAG,QAAQ,CAAC,IAAI;IAElC,IAAI,UAAU,GAAG,CAAC;IAElB,IAAI,SAAS,GAAG,CAAC;IAEjB,MAAM,OAAO,GAAa,EAAE;AAE5B,IAAA,GAAG;QACC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,cAAc,CAAC;AAEhD,QAAA,IAAI,SAAS,GAAG,CAAC,EAAE;AACf,YAAA,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,SAAS,EAAE,IAAI,CAAC;YAExD,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAE1C,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YAE9B,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC;AAE1C,YAAA,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;AAEpB,YAAA,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC;YAExB,cAAc,IAAI,SAAS;YAE3B,UAAU,IAAI,SAAS;;AAE/B,KAAC,QAAQ,SAAS,KAAK,UAAU;AAEjC,IAAA,OAAO,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;AACjC;AAEA;;AAEG;AACG,SAAU,aAAa,CAAC,EAAU,EAAA;AACpC,IAAA,MAAM,WAAW,GAAG,EAAE,CAAC,MAAM;AAE7B,IAAA,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI;AAEpB,IAAA,MAAM,WAAW,GAAG,IAAI,GAAG,WAAW;IAEtC,IAAI,SAAS,GAAG,CAAC;IAEjB,MAAM,OAAO,GAAa,EAAE;AAE5B,IAAA,OAAO,SAAS,GAAG,WAAW,EAAE;AAC5B,QAAA,MAAM,QAAQ,GAAG,EAAE,CAAC,YAAY,EAAE;QAAE,SAAS,IAAI,CAAC;QAElD,MAAM,UAAU,GAAG,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC;QAAE,SAAS,IAAI,QAAQ;QAE9D,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;AAEjD,QAAA,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;;AAG9B,IAAA,OAAO,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;AACjC;AAEM,SAAU,iBAAiB,CAAC,MAAe,EAAA;AAC7C,IAAA,QACI,MAAM,YAAY,WAAW,KAAK,OAAO,iBAAiB,KAAK,WAAW,IAAI,MAAM,YAAY,iBAAiB,CAAC;AAE1H;AAEM,SAAU,YAAY,CACxB,MAAoG,EAAA;AAEpG,IAAA,IAAI,MAAM,YAAY,MAAM,EAAE;AAC1B,QAAA,OAAO,MAAM;;AACV,SAAA,IAAI,MAAM,YAAY,UAAU,EAAE;AACrC,QAAA,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;;AACvB,SAAA,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;QACnC,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;;AAC9B,SAAA,IAAI,iBAAiB,CAAC,MAAM,CAAC,EAAE;AAClC,QAAA,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;;SACvB;;AAEH,QAAA,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;;AAElC;AA6DA;;AAEG;AACSC;AAAZ,CAAA,UAAY,MAAM,EAAA;;AAEd,IAAA,MAAA,CAAA,MAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAiB;AACjB,IAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAiB;AACjB,I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"}